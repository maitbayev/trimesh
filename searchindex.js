Search.setIndex({"docnames": ["README", "colors", "contributing", "curvature", "docker", "examples", "index", "install", "nearest", "nricp", "quick_start", "ray", "section", "shortest", "texture", "trimesh", "trimesh.base", "trimesh.boolean", "trimesh.bounds", "trimesh.caching", "trimesh.collision", "trimesh.comparison", "trimesh.constants", "trimesh.convex", "trimesh.creation", "trimesh.curvature", "trimesh.decomposition", "trimesh.exceptions", "trimesh.exchange", "trimesh.exchange.binvox", "trimesh.exchange.dae", "trimesh.exchange.export", "trimesh.exchange.gltf", "trimesh.exchange.load", "trimesh.exchange.misc", "trimesh.exchange.obj", "trimesh.exchange.off", "trimesh.exchange.openctm", "trimesh.exchange.ply", "trimesh.exchange.stl", "trimesh.exchange.threedxml", "trimesh.exchange.threemf", "trimesh.exchange.urdf", "trimesh.exchange.xaml", "trimesh.exchange.xyz", "trimesh.geometry", "trimesh.graph", "trimesh.grouping", "trimesh.inertia", "trimesh.interfaces", "trimesh.interfaces.blender", "trimesh.interfaces.generic", "trimesh.interfaces.gmsh", "trimesh.interfaces.scad", "trimesh.intersections", "trimesh.interval", "trimesh.nsphere", "trimesh.parent", "trimesh.path", "trimesh.path.arc", "trimesh.path.creation", "trimesh.path.curve", "trimesh.path.entities", "trimesh.path.exchange", "trimesh.path.exchange.dxf", "trimesh.path.exchange.export", "trimesh.path.exchange.load", "trimesh.path.exchange.misc", "trimesh.path.exchange.svg_io", "trimesh.path.intersections", "trimesh.path.packing", "trimesh.path.path", "trimesh.path.polygons", "trimesh.path.raster", "trimesh.path.repair", "trimesh.path.segments", "trimesh.path.simplify", "trimesh.path.traversal", "trimesh.path.util", "trimesh.permutate", "trimesh.points", "trimesh.poses", "trimesh.primitives", "trimesh.proximity", "trimesh.ray", "trimesh.ray.ray_pyembree", "trimesh.ray.ray_triangle", "trimesh.ray.ray_util", "trimesh.registration", "trimesh.remesh", "trimesh.rendering", "trimesh.repair", "trimesh.resolvers", "trimesh.resources", "trimesh.sample", "trimesh.scene", "trimesh.scene.cameras", "trimesh.scene.lighting", "trimesh.scene.scene", "trimesh.scene.transforms", "trimesh.schemas", "trimesh.smoothing", "trimesh.transformations", "trimesh.triangles", "trimesh.typed", "trimesh.units", "trimesh.util", "trimesh.version", "trimesh.viewer", "trimesh.viewer.notebook", "trimesh.viewer.trackball", "trimesh.viewer.widget", "trimesh.viewer.windowed", "trimesh.visual", "trimesh.visual.base", "trimesh.visual.color", "trimesh.visual.gloss", "trimesh.visual.material", "trimesh.visual.objects", "trimesh.visual.texture", "trimesh.voxel", "trimesh.voxel.base", "trimesh.voxel.creation", "trimesh.voxel.encoding", "trimesh.voxel.morphology", "trimesh.voxel.ops", "trimesh.voxel.runlength", "trimesh.voxel.transforms"], "filenames": ["README.rst", "colors.rst", "contributing.md", "curvature.rst", "docker.md", "examples.rst", "index.rst", "install.md", "nearest.rst", "nricp.md", "quick_start.rst", "ray.rst", "section.rst", "shortest.rst", "texture.rst", "trimesh.rst", "trimesh.base.rst", "trimesh.boolean.rst", "trimesh.bounds.rst", "trimesh.caching.rst", "trimesh.collision.rst", "trimesh.comparison.rst", "trimesh.constants.rst", "trimesh.convex.rst", "trimesh.creation.rst", "trimesh.curvature.rst", "trimesh.decomposition.rst", "trimesh.exceptions.rst", "trimesh.exchange.rst", "trimesh.exchange.binvox.rst", "trimesh.exchange.dae.rst", "trimesh.exchange.export.rst", "trimesh.exchange.gltf.rst", "trimesh.exchange.load.rst", "trimesh.exchange.misc.rst", "trimesh.exchange.obj.rst", "trimesh.exchange.off.rst", "trimesh.exchange.openctm.rst", "trimesh.exchange.ply.rst", "trimesh.exchange.stl.rst", "trimesh.exchange.threedxml.rst", "trimesh.exchange.threemf.rst", "trimesh.exchange.urdf.rst", "trimesh.exchange.xaml.rst", "trimesh.exchange.xyz.rst", "trimesh.geometry.rst", "trimesh.graph.rst", "trimesh.grouping.rst", "trimesh.inertia.rst", "trimesh.interfaces.rst", "trimesh.interfaces.blender.rst", "trimesh.interfaces.generic.rst", "trimesh.interfaces.gmsh.rst", "trimesh.interfaces.scad.rst", "trimesh.intersections.rst", "trimesh.interval.rst", "trimesh.nsphere.rst", "trimesh.parent.rst", "trimesh.path.rst", "trimesh.path.arc.rst", "trimesh.path.creation.rst", "trimesh.path.curve.rst", "trimesh.path.entities.rst", "trimesh.path.exchange.rst", "trimesh.path.exchange.dxf.rst", "trimesh.path.exchange.export.rst", "trimesh.path.exchange.load.rst", "trimesh.path.exchange.misc.rst", "trimesh.path.exchange.svg_io.rst", "trimesh.path.intersections.rst", "trimesh.path.packing.rst", "trimesh.path.path.rst", "trimesh.path.polygons.rst", "trimesh.path.raster.rst", "trimesh.path.repair.rst", "trimesh.path.segments.rst", "trimesh.path.simplify.rst", "trimesh.path.traversal.rst", "trimesh.path.util.rst", "trimesh.permutate.rst", "trimesh.points.rst", "trimesh.poses.rst", "trimesh.primitives.rst", "trimesh.proximity.rst", "trimesh.ray.rst", "trimesh.ray.ray_pyembree.rst", "trimesh.ray.ray_triangle.rst", "trimesh.ray.ray_util.rst", "trimesh.registration.rst", "trimesh.remesh.rst", "trimesh.rendering.rst", "trimesh.repair.rst", "trimesh.resolvers.rst", "trimesh.resources.rst", "trimesh.sample.rst", "trimesh.scene.rst", "trimesh.scene.cameras.rst", "trimesh.scene.lighting.rst", "trimesh.scene.scene.rst", "trimesh.scene.transforms.rst", "trimesh.schemas.rst", "trimesh.smoothing.rst", "trimesh.transformations.rst", "trimesh.triangles.rst", "trimesh.typed.rst", "trimesh.units.rst", "trimesh.util.rst", "trimesh.version.rst", "trimesh.viewer.rst", "trimesh.viewer.notebook.rst", "trimesh.viewer.trackball.rst", "trimesh.viewer.widget.rst", "trimesh.viewer.windowed.rst", "trimesh.visual.rst", "trimesh.visual.base.rst", "trimesh.visual.color.rst", "trimesh.visual.gloss.rst", "trimesh.visual.material.rst", "trimesh.visual.objects.rst", "trimesh.visual.texture.rst", "trimesh.voxel.rst", "trimesh.voxel.base.rst", "trimesh.voxel.creation.rst", "trimesh.voxel.encoding.rst", "trimesh.voxel.morphology.rst", "trimesh.voxel.ops.rst", "trimesh.voxel.runlength.rst", "trimesh.voxel.transforms.rst"], "titles": ["Basic Installation", "Colors", "Contributing To Trimesh", "Curvature", "Writing Docker Images", "Examples", "Basic Installation", "Installation", "Nearest", "Non-Rigid Registration", "Quick Start", "Ray", "Section", "Shortest", "Texture", "trimesh", "trimesh.base", "trimesh.boolean", "trimesh.bounds", "trimesh.caching", "trimesh.collision", "trimesh.comparison", "trimesh.constants", "trimesh.convex", "trimesh.creation", "trimesh.curvature", "trimesh.decomposition", "trimesh.exceptions", "trimesh.exchange", "trimesh.exchange.binvox", "trimesh.exchange.dae", "trimesh.exchange.export", "trimesh.exchange.gltf", "trimesh.exchange.load", "trimesh.exchange.misc", "trimesh.exchange.obj", "trimesh.exchange.off", "trimesh.exchange.openctm", "trimesh.exchange.ply", "trimesh.exchange.stl", "trimesh.exchange.threedxml", "trimesh.exchange.threemf", "trimesh.exchange.urdf", "trimesh.exchange.xaml", "trimesh.exchange.xyz", "trimesh.geometry", "trimesh.graph", "trimesh.grouping", "trimesh.inertia", "trimesh.interfaces", "trimesh.interfaces.blender", "trimesh.interfaces.generic", "trimesh.interfaces.gmsh", "trimesh.interfaces.scad", "trimesh.intersections", "trimesh.interval", "trimesh.nsphere", "trimesh.parent", "trimesh.path", "trimesh.path.arc", "trimesh.path.creation", "trimesh.path.curve", "trimesh.path.entities", "trimesh.path.exchange", "trimesh.path.exchange.dxf", "trimesh.path.exchange.export", "trimesh.path.exchange.load", "trimesh.path.exchange.misc", "trimesh.path.exchange.svg_io", "trimesh.path.intersections", "trimesh.path.packing", "trimesh.path.path", "trimesh.path.polygons", "trimesh.path.raster", "trimesh.path.repair", "trimesh.path.segments", "trimesh.path.simplify", "trimesh.path.traversal", "trimesh.path.util", "trimesh.permutate", "trimesh.points", "trimesh.poses", "trimesh.primitives", "trimesh.proximity", "trimesh.ray", "trimesh.ray.ray_pyembree", "trimesh.ray.ray_triangle", "trimesh.ray.ray_util", "trimesh.registration", "trimesh.remesh", "trimesh.rendering", "trimesh.repair", "trimesh.resolvers", "trimesh.resources", "trimesh.sample", "trimesh.scene", "trimesh.scene.cameras", "trimesh.scene.lighting", "trimesh.scene.scene", "trimesh.scene.transforms", "trimesh.schemas", "trimesh.smoothing", "trimesh.transformations", "trimesh.triangles", "trimesh.typed", "trimesh.units", "trimesh.util", "trimesh.version", "trimesh.viewer", "trimesh.viewer.notebook", "trimesh.viewer.trackball", "trimesh.viewer.widget", "trimesh.viewer.windowed", "trimesh.visual", "trimesh.visual.base", "trimesh.visual.color", "trimesh.visual.gloss", "trimesh.visual.material", "trimesh.visual.objects", "trimesh.visual.texture", "trimesh.voxel", "trimesh.voxel.base", "trimesh.voxel.creation", "trimesh.voxel.encoding", "trimesh.voxel.morphology", "trimesh.voxel.ops", "trimesh.voxel.runlength", "trimesh.voxel.transforms"], "terms": {"pure": [0, 6, 7, 15, 29, 45, 67, 70], "python": [0, 2, 4, 6, 7, 15, 16, 24, 41, 46, 96, 102, 104, 106, 126], "3": [0, 2, 4, 6, 8, 9, 10, 11, 12, 15, 16, 18, 19, 20, 23, 24, 25, 29, 34, 39, 41, 45, 46, 47, 48, 52, 54, 55, 57, 58, 59, 60, 61, 62, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 80, 81, 82, 83, 85, 86, 88, 89, 90, 91, 94, 95, 96, 98, 99, 102, 103, 104, 106, 110, 113, 115, 116, 117, 118, 120, 121, 122, 124, 125, 126, 127], "7": [0, 2, 6, 15, 16, 19, 21, 41, 45, 47, 52, 90, 102, 104, 106, 126], "load": [0, 1, 6, 7, 8, 10, 12, 14, 15, 16, 28, 29, 30, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 58, 63, 64, 67, 68, 80, 82, 90, 92, 93, 95, 99, 108, 109], "triangular": [0, 6, 15, 16, 24, 45, 82, 89, 91], "an": [0, 2, 3, 6, 7, 8, 9, 10, 11, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 29, 32, 33, 35, 36, 38, 39, 40, 43, 44, 45, 46, 47, 48, 50, 52, 53, 54, 56, 57, 58, 62, 64, 67, 68, 70, 71, 72, 74, 75, 80, 82, 86, 89, 90, 92, 94, 95, 97, 98, 99, 102, 103, 104, 105, 106, 108, 109, 110, 115, 117, 119, 120, 121, 123, 124, 125, 126], "emphasi": [0, 6, 15], "watertight": [0, 6, 10, 15, 16, 17, 23, 24, 46, 72, 80, 81, 89, 91, 106, 122], "surfac": [0, 6, 8, 9, 11, 15, 16, 23, 25, 52, 67, 79, 81, 82, 83, 85, 86, 88, 89, 94, 101, 103, 106, 120, 121, 124, 125], "The": [0, 2, 4, 6, 7, 9, 15, 16, 18, 19, 20, 22, 24, 25, 29, 30, 33, 42, 45, 46, 47, 50, 52, 55, 57, 60, 62, 64, 70, 71, 72, 75, 80, 81, 82, 83, 88, 89, 92, 95, 97, 98, 99, 102, 103, 104, 106, 110, 114, 115, 117, 120, 121, 125, 127], "goal": [0, 6, 15, 113], "provid": [0, 4, 6, 7, 15, 16, 19, 20, 21, 29, 32, 48, 50, 53, 54, 72, 83, 92, 94, 106, 120, 121, 123, 126], "full": [0, 6, 7, 15, 16, 19, 46, 58, 71, 82, 92, 99, 101], "well": [0, 6, 7, 9, 15, 16, 19, 20, 24, 62, 74, 75, 88, 91, 95, 98, 102, 106], "test": [0, 2, 4, 6, 7, 11, 13, 19, 23, 54, 58, 70, 71, 72, 85, 86], "object": [0, 6, 8, 10, 12, 15, 16, 18, 19, 20, 22, 23, 24, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 50, 51, 53, 54, 57, 58, 59, 64, 65, 67, 68, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 88, 90, 92, 93, 95, 96, 97, 98, 99, 100, 102, 103, 105, 106, 108, 109, 110, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 127], "allow": [0, 6, 9, 15, 16, 19, 35, 47, 52, 70, 72, 80, 88, 91, 95, 98, 99, 106, 115, 117], "easi": [0, 2, 4, 6, 7, 15, 52], "manipul": [0, 6, 7, 15, 110], "analysi": [0, 6, 7, 15, 88], "style": [0, 1, 2, 6, 8, 10, 11, 12, 13, 14, 15], "polygon": [0, 6, 7, 12, 15, 16, 23, 24, 29, 33, 45, 54, 58, 66, 67, 70, 71, 82, 95, 98, 106], "shape": [0, 2, 6, 7, 9, 10, 12, 14, 15, 16, 24, 25, 28, 29, 33, 45, 58, 66, 67, 70, 71, 72, 80, 81, 82, 88, 97, 102, 106, 119, 120, 121, 123, 126], "api": [0, 2, 7, 19, 85, 102], "mostli": [0, 6, 70], "stabl": [0, 6, 15, 16, 19, 53, 81, 102], "reli": [0, 6, 15, 16, 46], "guarante": [0, 6, 15, 16, 77, 83], "specif": [0, 6, 15, 16, 32, 48, 62, 77, 88, 92, 123], "version": [0, 4, 6, 10, 15, 16, 19, 46, 52, 58, 59, 61, 62, 71, 72, 73, 77, 79, 82, 92, 102, 104, 106, 113, 115, 120, 121], "you": [0, 2, 4, 6, 7, 15, 16, 19, 24, 28, 48, 54, 55, 62, 72, 80, 82, 86, 92], "plan": [0, 2, 6], "deploi": [0, 6], "someth": [0, 2, 6, 7, 61], "pull": [0, 2, 6, 94], "request": [0, 2, 6, 7, 10, 15, 16, 27, 33, 70, 82, 94, 95, 98], "ar": [0, 2, 4, 5, 6, 7, 9, 10, 12, 15, 16, 17, 18, 19, 20, 22, 25, 26, 27, 29, 35, 38, 45, 46, 47, 54, 55, 56, 57, 58, 60, 62, 64, 69, 70, 71, 72, 75, 76, 77, 80, 81, 82, 86, 88, 89, 94, 95, 96, 97, 98, 99, 102, 103, 105, 106, 108, 109, 110, 113, 115, 117, 118, 119, 120, 121, 123, 125, 126], "appreci": [0, 6], "respond": [0, 6], "promptli": [0, 6], "If": [0, 2, 4, 6, 7, 15, 16, 18, 19, 20, 22, 24, 25, 29, 32, 33, 35, 38, 44, 45, 46, 47, 48, 54, 55, 58, 59, 60, 61, 62, 64, 68, 69, 70, 71, 72, 73, 75, 79, 80, 81, 82, 83, 85, 86, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 101, 102, 105, 106, 113, 115, 117, 118, 119, 120, 121, 123, 124, 126, 127], "d": [0, 2, 6, 7, 9, 19, 23, 45, 47, 56, 59, 61, 62, 69, 71, 76, 77, 80, 89, 102, 104, 105, 106, 115, 119, 125], "like": [0, 2, 4, 6, 7, 12, 15, 16, 19, 21, 23, 24, 27, 29, 30, 31, 32, 33, 35, 37, 38, 39, 40, 41, 44, 64, 65, 77, 80, 82, 92, 93, 95, 97, 98, 102, 105, 106, 113, 118, 119, 120, 121], "contribut": [0, 45], "here": [0, 2, 6, 7, 9, 15, 16, 18, 22, 46, 54, 70], "up": [0, 2, 6, 15, 16, 19, 24, 46, 47, 52, 58, 62, 71, 75, 77, 89, 95, 98, 106, 110], "date": [0, 6], "list": [0, 2, 4, 6, 8, 10, 15, 16, 17, 18, 19, 20, 24, 25, 26, 29, 30, 33, 35, 45, 46, 47, 50, 52, 53, 54, 56, 58, 62, 66, 67, 70, 71, 72, 76, 77, 80, 81, 83, 85, 86, 88, 90, 92, 95, 96, 97, 98, 99, 102, 103, 104, 106, 113, 115, 116, 117, 118, 120, 121, 125, 126], "potenti": [0, 6, 15, 16, 17, 46, 106], "enhanc": [0, 6], "although": [0, 6, 52], "thing": [0, 2, 4, 6, 7, 15, 16, 19, 46, 82], "also": [0, 4, 6, 7, 9, 10, 12, 15, 16, 19, 29, 45, 47, 48, 54, 58, 62, 71, 72, 77, 88, 95, 97, 98, 102, 106], "welcom": [0, 2, 6], "": [0, 2, 4, 6, 7, 9, 10, 15, 16, 19, 20, 29, 32, 38, 45, 52, 58, 69, 70, 71, 72, 73, 82, 88, 95, 96, 97, 102, 103, 104, 110, 126], "develop": [0, 6, 102], "guid": [0, 4, 6, 102, 106], "keep": [0, 6, 10, 15, 16, 24, 95, 96, 103, 106], "core": [0, 6, 15, 16, 29, 70, 82, 88], "thu": [0, 6, 9, 101], "onli": [0, 2, 6, 7, 9, 13, 15, 16, 19, 23, 25, 29, 31, 33, 35, 38, 46, 47, 48, 52, 54, 58, 62, 64, 68, 71, 72, 76, 77, 85, 86, 88, 89, 91, 92, 94, 95, 97, 98, 99, 102, 104, 106, 115, 120, 121, 123, 126], "hard": [0, 6, 7, 9], "depend": [0, 4, 6, 9, 15, 16, 27, 70, 95, 97, 98, 103], "numpi": [0, 2, 3, 6, 7, 8, 10, 11, 12, 13, 15, 16, 19, 29, 34, 45, 47, 59, 70, 82, 90, 102, 103, 104, 106, 113, 115, 120, 121, 123, 125, 126], "other": [0, 2, 4, 6, 7, 15, 16, 17, 19, 24, 32, 33, 35, 46, 58, 59, 70, 71, 80, 88, 94, 95, 98, 100, 102, 104, 106, 113, 114, 115, 117, 119], "packag": [0, 6, 12, 42, 52, 85, 102, 106, 107, 117], "add": [0, 6, 7, 15, 20, 47, 64, 79, 95, 98, 99, 106, 113, 117, 122, 124], "function": [0, 2, 6, 7, 9, 15, 16, 19, 24, 27, 29, 32, 46, 47, 48, 53, 54, 55, 56, 58, 62, 70, 71, 79, 80, 82, 88, 89, 90, 102, 103, 106, 113, 115, 120, 121, 125, 126], "requir": [0, 4, 6, 7, 12, 15, 16, 29, 32, 66, 72, 75, 80, 103, 105, 106, 126], "For": [0, 6, 9, 15, 16, 25, 27, 30, 33, 41, 46, 47, 52, 55, 59, 61, 72, 74, 75, 81, 83, 94, 103, 106, 126], "easiest": [0, 6], "just": [0, 2, 4, 6, 7, 9, 15, 16, 30, 54, 62, 80, 81, 91, 102, 106, 115, 126], "pip": [0, 2, 6, 7, 15, 16, 19, 24, 52], "gener": [0, 4, 6, 7, 8, 15, 16, 19, 46, 47, 49, 52, 58, 62, 67, 71, 72, 77, 82, 88, 95, 96, 97, 98, 102, 104, 106, 115, 117, 124, 125], "cleanli": [0, 6, 7, 10, 15, 16, 99], "window": [0, 6, 7, 10, 15, 16, 29, 58, 71, 80, 95, 98, 102, 108, 110], "linux": [0, 2, 6, 7, 104], "osx": [0, 6], "minim": [0, 4, 6, 7, 9, 18, 56, 70, 80, 88, 102], "mani": [0, 2, 6, 7, 15, 16, 24, 47, 58, 60, 71, 72, 75, 88, 102, 106, 119], "support": [0, 6, 12, 15, 16, 29, 34, 66, 70, 80, 95, 96, 97, 105, 106, 117, 120, 121], "stl": [0, 6, 7, 10, 12, 15, 16, 28, 31, 33, 51, 95, 98], "ply": [0, 6, 7, 8, 15, 16, 28, 29, 33], "gltf": [0, 6, 7, 15, 28, 99, 108, 109, 117], "glb": [0, 6, 7, 15, 16, 32, 108, 109], "arrai": [0, 2, 3, 6, 7, 8, 9, 10, 11, 12, 15, 16, 18, 19, 21, 29, 34, 45, 46, 47, 55, 68, 70, 71, 80, 82, 83, 86, 89, 90, 96, 99, 101, 102, 106, 113, 115, 117, 119, 120, 121, 123, 124, 125, 126], "more": [0, 4, 6, 7, 9, 15, 16, 29, 47, 48, 52, 57, 70, 72, 76, 83, 88, 95, 98, 99, 102, 103, 106, 113, 115, 118, 123], "avail": [0, 4, 5, 6, 7, 10, 12, 15, 16, 19, 29, 33, 70, 82, 92, 106, 122, 124], "when": [0, 2, 4, 6, 7, 9, 10, 15, 16, 19, 22, 27, 29, 54, 70, 71, 75, 82, 88, 94, 95, 98, 99, 102, 103, 117, 122, 126], "soft": [0, 6, 7, 27], "includ": [0, 4, 6, 7, 15, 16, 24, 25, 29, 32, 35, 36, 38, 47, 57, 58, 60, 64, 70, 71, 75, 85, 95, 98, 99, 100, 102, 103, 106, 113, 123, 126, 127], "convex": [0, 6, 7, 10, 15, 16, 18, 20, 25, 26, 42, 56, 72, 80, 91, 95, 98], "hull": [0, 6, 7, 10, 15, 16, 18, 23, 56, 72, 80, 95, 98], "scipi": [0, 6, 7, 15, 16, 18, 25, 45, 46, 56, 61, 70, 71, 80, 88, 101, 123, 124], "graph": [0, 6, 7, 13, 15, 16, 58, 62, 71, 77, 80, 95, 98, 99, 102], "oper": [0, 2, 6, 7, 15, 16, 17, 19, 24, 29, 46, 47, 50, 53, 54, 71, 80, 82, 94, 99, 101, 123, 124, 125, 126], "networkx": [0, 6, 7, 13, 15, 16, 46, 58, 71, 72, 77, 99], "faster": [0, 2, 6, 7, 19, 24, 29, 47, 89, 102, 106], "rai": [0, 2, 5, 6, 7, 15, 83, 95, 96, 98], "queri": [0, 6, 7, 8, 9, 11, 13, 15, 16, 19, 20, 25, 72, 80, 83, 85, 86, 106, 120, 121], "embreex": [0, 6, 85], "vector": [0, 2, 6, 7, 11, 15, 16, 21, 24, 33, 39, 45, 47, 48, 54, 58, 59, 60, 61, 62, 69, 71, 72, 73, 74, 75, 80, 82, 85, 86, 90, 95, 96, 98, 102, 103, 106], "path": [0, 6, 7, 13, 15, 16, 19, 22, 24, 29, 33, 38, 42, 46, 82, 90, 92, 93, 99, 106], "handl": [0, 6, 7, 24, 33, 45, 58, 106, 113, 126], "rtree": [0, 6, 7, 15, 16, 70, 82, 86, 103, 106], "xml": [0, 6, 7, 68], "3dxml": [0, 6, 40], "xaml": [0, 1, 6, 15, 28], "3mf": [0, 6, 41], "lxml": [0, 6, 7, 40], "preview": [0, 6, 10, 120, 121], "pyglet": [0, 6, 7, 10, 15, 16, 90, 95, 98, 108], "cach": [0, 6, 7, 15, 16, 35, 46, 54, 80, 82, 123, 127], "check": [0, 2, 6, 7, 11, 12, 15, 16, 17, 18, 19, 20, 22, 23, 47, 48, 52, 54, 56, 58, 62, 70, 71, 72, 85, 86, 91, 102, 103, 106, 108, 109, 113, 119, 126], "xxhash": [0, 6, 7, 19], "etc": [0, 2, 6, 15, 16, 19, 33, 53, 56, 58, 62, 71, 77, 90, 92, 95, 98, 106], "To": [0, 6, 9, 19, 106], "further": [0, 6, 29], "inform": [0, 6, 15, 16, 19, 20, 22, 52, 59, 62, 68, 82, 97, 99, 113, 115, 117, 119], "advanc": [0, 6, 15, 16, 17, 47], "document": [0, 6, 7, 15, 16, 19, 22, 29, 102, 103, 123], "exampl": [0, 1, 2, 3, 4, 7, 8, 10, 11, 15, 16, 19, 45, 46, 47, 55, 62, 92, 96, 102, 103, 104, 106, 123, 126], "from": [0, 2, 3, 4, 6, 8, 9, 10, 12, 15, 16, 18, 19, 20, 22, 23, 24, 29, 32, 33, 35, 37, 38, 39, 40, 43, 45, 46, 47, 48, 52, 54, 55, 56, 57, 62, 64, 68, 69, 70, 72, 75, 76, 80, 81, 82, 83, 88, 92, 93, 94, 95, 96, 97, 98, 99, 102, 103, 105, 106, 107, 110, 113, 115, 117, 118, 119, 123, 127], "file": [0, 4, 6, 7, 10, 12, 15, 16, 19, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 52, 58, 64, 65, 66, 68, 71, 80, 92, 93, 95, 98, 100, 102, 106, 117, 120, 121], "color": [0, 5, 6, 7, 8, 10, 12, 15, 16, 24, 35, 38, 42, 44, 58, 62, 71, 80, 90, 91, 94, 95, 97, 106, 113, 116, 117, 118, 119, 120, 121, 125], "its": [0, 6, 8, 9, 10, 15, 16, 19, 23, 58, 71, 72, 80, 82, 95, 97, 98, 102, 120, 121, 125, 126], "face": [0, 1, 2, 6, 9, 10, 11, 15, 16, 20, 23, 24, 25, 34, 35, 38, 39, 45, 46, 54, 58, 67, 71, 72, 75, 79, 82, 83, 85, 86, 88, 89, 90, 91, 94, 101, 103, 106, 113, 115, 118, 119], "nice": [0, 2, 6, 7, 15, 16, 18, 46, 89, 108, 109, 125], "ipython": [0, 2, 5, 6, 108, 109], "notebook": [0, 5, 6, 10, 15, 95, 98, 108], "out": [0, 2, 6, 7, 8, 11, 15, 16, 19, 23, 45, 47, 86, 91, 95, 98, 102, 106], "cross": [0, 6, 12, 15, 16, 48, 69, 102, 103], "section": [0, 5, 6, 9, 15, 16, 22, 24, 48, 54, 60, 62, 82, 99], "import": [0, 1, 2, 3, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 27, 28, 52, 88, 106], "np": [0, 2, 3, 6, 8, 10, 11, 12, 13, 15, 16, 19, 46, 47, 77, 80, 82, 96, 102, 104, 106, 115, 123, 125, 126], "attach": [0, 6, 99, 106], "logger": [0, 6, 106], "so": [0, 2, 4, 6, 9, 11, 15, 16, 18, 19, 24, 27, 38, 48, 53, 54, 57, 58, 62, 71, 72, 77, 80, 95, 98, 106, 119, 122], "messag": [0, 2, 6, 22, 27, 58, 71, 76], "print": [0, 2, 6, 7, 12, 40, 58, 71, 76, 102], "consol": [0, 6], "util": [0, 2, 6, 15, 34, 54, 58, 92, 126], "attach_to_log": [0, 2, 6, 15, 106], "creat": [0, 2, 6, 8, 11, 13, 15, 16, 19, 20, 23, 24, 27, 29, 32, 54, 58, 60, 70, 71, 76, 82, 86, 91, 95, 96, 98, 99, 103, 106, 110, 113, 115, 117, 118, 119, 120, 121, 123, 124], "exist": [0, 6, 15, 16, 46, 54, 82, 89, 91, 95, 98, 106, 126], "vertex": [0, 2, 6, 9, 13, 15, 16, 22, 23, 24, 25, 32, 35, 38, 45, 46, 47, 57, 58, 62, 64, 67, 71, 72, 75, 77, 79, 80, 82, 83, 88, 89, 90, 101, 103, 106, 113, 115, 118, 119], "data": [0, 2, 6, 9, 10, 15, 16, 19, 20, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 44, 45, 46, 47, 52, 65, 66, 68, 71, 82, 88, 89, 92, 93, 99, 102, 106, 113, 115, 117, 119, 120, 121, 123, 125, 126], "vertic": [0, 2, 3, 6, 9, 10, 12, 13, 15, 16, 18, 22, 23, 24, 25, 34, 35, 38, 39, 45, 46, 47, 54, 56, 58, 62, 64, 67, 71, 72, 75, 76, 77, 80, 82, 83, 88, 89, 91, 95, 98, 101, 103, 106, 113, 115, 119], "0": [0, 2, 3, 6, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 22, 24, 25, 26, 29, 32, 41, 42, 45, 46, 47, 50, 54, 57, 58, 59, 61, 62, 64, 68, 70, 71, 72, 74, 75, 76, 77, 79, 80, 81, 82, 88, 89, 95, 96, 97, 101, 102, 104, 106, 110, 113, 115, 116, 117, 120, 121, 123, 124, 125, 126], "1": [0, 2, 3, 4, 6, 9, 10, 11, 12, 15, 16, 17, 18, 19, 22, 23, 24, 26, 29, 42, 45, 46, 47, 52, 55, 57, 58, 59, 61, 62, 64, 68, 69, 70, 71, 72, 73, 75, 77, 80, 81, 82, 85, 86, 88, 89, 95, 96, 101, 102, 103, 104, 105, 106, 110, 113, 115, 116, 117, 119, 122, 123, 124, 125, 126], "2": [0, 2, 3, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 23, 24, 25, 26, 29, 32, 45, 46, 47, 48, 52, 54, 55, 58, 59, 60, 61, 62, 64, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 80, 82, 83, 86, 89, 90, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 110, 113, 115, 116, 117, 119, 122, 123, 126], "default": [0, 6, 10, 15, 16, 19, 24, 29, 47, 54, 59, 60, 79, 80, 82, 94, 95, 98, 102, 113, 115, 116], "do": [0, 2, 6, 7, 9, 12, 15, 16, 17, 18, 19, 33, 35, 83, 85, 86, 102, 104, 106, 119, 125], "light": [0, 6, 15, 90, 95, 98], "process": [0, 1, 6, 9, 10, 15, 16, 17, 22, 32, 58, 71, 76, 82, 89, 106, 126], "remov": [0, 2, 6, 9, 15, 16, 19, 29, 47, 71, 82, 92, 94, 95, 98, 99, 106, 113, 115, 119, 120, 121, 126], "ani": [0, 6, 9, 10, 15, 16, 20, 24, 29, 33, 35, 46, 47, 55, 58, 59, 62, 70, 71, 72, 75, 76, 80, 82, 83, 86, 89, 92, 95, 98, 99, 100, 102, 103, 105, 106, 113, 115, 116, 117, 119, 120, 121, 124, 126], "nan": [0, 6, 15, 16, 82, 104], "valu": [0, 2, 6, 9, 12, 15, 16, 19, 21, 22, 24, 29, 34, 46, 47, 52, 54, 55, 56, 57, 58, 64, 68, 71, 72, 79, 81, 82, 88, 89, 92, 94, 97, 99, 100, 102, 104, 105, 106, 113, 115, 116, 117, 119, 120, 121, 122, 123, 126, 127], "merg": [0, 6, 15, 16, 22, 32, 38, 47, 55, 58, 71, 75, 76, 80, 82, 83, 126], "share": [0, 6, 9, 15, 16, 35, 46, 47], "posit": [0, 6, 9, 15, 16, 17, 19, 24, 25, 38, 47, 54, 55, 58, 62, 67, 70, 71, 72, 73, 80, 83, 86, 88, 95, 97, 98, 99, 103, 104, 106, 110, 113, 119], "want": [0, 2, 4, 6, 7, 12, 15, 16, 17, 18, 24, 27, 32, 48, 72, 92, 106], "pass": [0, 6, 10, 15, 16, 17, 19, 23, 24, 25, 26, 30, 32, 33, 35, 38, 40, 44, 45, 46, 47, 48, 52, 54, 57, 58, 60, 64, 65, 66, 68, 69, 70, 71, 72, 80, 82, 86, 88, 89, 90, 92, 94, 95, 96, 98, 99, 101, 106, 113, 115, 119, 120, 121, 122, 124, 126, 127], "fals": [0, 1, 6, 10, 15, 16, 17, 19, 20, 22, 26, 29, 31, 32, 33, 35, 38, 45, 46, 47, 48, 50, 51, 53, 54, 58, 59, 62, 64, 68, 69, 70, 71, 72, 75, 76, 80, 83, 85, 86, 88, 89, 91, 93, 94, 95, 98, 101, 102, 103, 104, 106, 117, 119, 126], "some": [0, 2, 4, 6, 9, 11, 15, 16, 19, 29, 46, 76, 80, 82, 95, 98, 102, 106], "repres": [0, 6, 9, 15, 16, 23, 24, 31, 33, 39, 41, 45, 46, 57, 58, 60, 62, 67, 71, 72, 76, 77, 80, 82, 88, 95, 98, 102, 106, 116, 120, 121, 125], "multipl": [0, 6, 10, 15, 16, 19, 23, 24, 32, 34, 46, 47, 50, 54, 55, 58, 60, 62, 68, 70, 71, 72, 77, 78, 80, 85, 86, 95, 98, 99, 102, 106, 113, 115, 117, 118], "instanc": [0, 6, 15, 29, 46, 95, 98, 99, 106, 122, 126], "loader": [0, 6, 15, 28, 33, 65, 66], "tri": [0, 6, 24, 34, 106], "return": [0, 2, 6, 9, 11, 12, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127], "datatyp": [0, 6, 19, 113, 115], "make": [0, 2, 4, 6, 7, 11, 13, 15, 16, 19, 22, 24, 29, 33, 46, 47, 57, 58, 71, 72, 77, 79, 89, 91, 99, 102, 105, 106, 115], "most": [0, 6, 7, 15, 16, 19, 81, 102, 113, 115, 117], "sens": [0, 6], "scene": [0, 6, 8, 11, 13, 15, 16, 20, 24, 31, 32, 33, 35, 40, 41, 48, 57, 58, 62, 70, 71, 80, 90, 108, 109, 110], "alwai": [0, 2, 4, 6, 7, 19, 57, 72, 99], "straight": [0, 6, 34, 64], "ask": [0, 6, 7], "forc": [0, 6, 15, 19, 33, 106], "result": [0, 2, 4, 6, 9, 13, 15, 16, 18, 19, 20, 24, 28, 29, 30, 31, 32, 33, 35, 38, 43, 46, 47, 48, 50, 54, 57, 58, 64, 70, 71, 72, 76, 77, 78, 80, 82, 88, 89, 90, 92, 93, 94, 95, 98, 100, 102, 106, 113, 115, 119, 120, 121, 122], "through": [0, 2, 6, 15, 16, 17, 24, 33, 46, 52, 57, 70, 72, 86, 88, 95, 98, 106, 120, 121], "concaten": [0, 2, 6, 9, 15, 58, 78, 95, 98, 102, 106, 113, 114, 115, 118, 119], "model": [0, 1, 6, 8, 9, 10, 12, 14, 15, 16, 29, 52, 58, 71, 73, 95, 97, 98, 102, 119], "cesiummilktruck": [0, 6], "name": [0, 6, 10, 15, 16, 19, 20, 22, 32, 33, 35, 46, 64, 66, 71, 80, 92, 93, 95, 96, 97, 98, 99, 103, 104, 106, 113, 117, 120, 121], "buffer": [0, 6, 10, 15, 16, 19, 29, 32, 47, 59, 72, 82], "kwarg": [0, 6, 12, 15, 16, 17, 24, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 51, 53, 54, 57, 58, 60, 62, 64, 65, 66, 67, 68, 70, 71, 72, 76, 80, 82, 83, 85, 86, 88, 90, 92, 95, 96, 98, 99, 103, 106, 108, 109, 113, 116, 117, 118, 119, 120, 121, 122, 124], "constructor": [0, 6, 15, 16, 24, 29, 30, 32, 33, 34, 36, 37, 38, 39, 41, 43, 44, 60, 65, 66, 67, 68, 72, 82, 90, 95, 98, 103, 106, 116, 123], "would": [0, 6, 15, 16, 19, 24, 27, 62, 80, 82], "preserv": [0, 6, 88, 102], "origin": [0, 6, 9, 10, 11, 12, 15, 16, 18, 24, 26, 45, 47, 54, 57, 58, 60, 62, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 82, 85, 86, 88, 89, 95, 98, 102, 104, 106, 117, 119, 125, 127], "without": [0, 6, 7, 13, 15, 16, 19, 32, 46, 52, 71, 77, 95, 98, 99, 106, 113, 119, 120, 121, 126], "soup": [0, 6, 15, 16, 24, 72, 89, 95, 98, 103], "disconnect": [0, 6, 15, 16, 38, 46, 72], "triangl": [0, 6, 7, 9, 11, 15, 16, 23, 24, 25, 29, 45, 46, 58, 71, 72, 75, 82, 83, 85, 86, 88, 89, 91, 94, 95, 98, 102, 106], "howev": [0, 6, 7, 15, 16, 19, 32, 104], "regist": [0, 6, 15, 16, 88, 102, 106], "featuretyp": [0, 6, 10, 12, 15, 16], "current": [0, 4, 6, 7, 9, 10, 15, 16, 19, 23, 31, 46, 57, 58, 62, 70, 71, 80, 82, 83, 86, 88, 92, 95, 96, 98, 99, 102, 104, 105, 107, 110, 113, 115, 117, 119, 120, 121, 127], "is_watertight": [0, 6, 10, 15, 16, 46], "what": [0, 2, 6, 7, 9, 10, 12, 15, 16, 22, 31, 33, 44, 59, 76, 79, 82, 95, 96, 98, 105, 106, 113, 115, 119, 120, 121, 125], "euler": [0, 6, 10, 15, 16, 95, 98, 102], "number": [0, 6, 10, 15, 16, 18, 19, 22, 24, 29, 35, 36, 41, 45, 46, 47, 58, 60, 61, 62, 68, 70, 71, 72, 75, 76, 77, 80, 81, 82, 85, 86, 88, 89, 90, 94, 97, 101, 104, 105, 106, 110, 115, 117, 120, 121, 122], "euler_numb": [0, 6, 10, 15, 16], "anoth": [0, 6, 10, 15, 16, 19, 20, 45, 62, 72, 88, 99, 105, 106, 115, 127], "properti": [0, 6, 10, 15, 16, 19, 20, 21, 29, 57, 58, 62, 70, 71, 80, 82, 92, 95, 96, 97, 98, 99, 102, 103, 104, 110, 113, 114, 115, 117, 118, 119, 120, 121, 123, 127], "let": [0, 6, 7, 9, 10], "compar": [0, 2, 6, 10, 19, 21, 23, 83, 103, 106], "volum": [0, 6, 8, 10, 15, 16, 17, 18, 29, 52, 57, 70, 79, 82, 86, 94, 95, 98, 101, 102, 103, 120, 121, 122, 127], "our": [0, 6, 7, 10, 12, 18, 47, 85, 119], "convex_hul": [0, 6, 10, 15, 16, 23, 80, 95, 98], "sinc": [0, 6, 10, 19, 94, 123], "mean": [0, 3, 6, 9, 10, 15, 16, 19, 23, 25, 45, 56, 57, 64, 80, 81, 89, 95, 98, 126], "volumetr": [0, 6, 10, 15, 16, 29], "center": [0, 6, 10, 15, 16, 18, 24, 25, 29, 48, 56, 57, 58, 59, 60, 62, 71, 72, 76, 80, 81, 82, 83, 95, 96, 98, 102, 103, 110, 120, 121, 125], "mass": [0, 6, 10, 15, 16, 48, 81, 95, 98, 103], "we": [0, 2, 6, 7, 8, 9, 10, 12, 15, 16, 18, 19, 22, 27, 32, 33, 46, 47, 61, 62, 75, 77, 79, 80, 85, 90, 104, 105, 106, 108, 109, 119, 126], "set": [0, 2, 6, 7, 8, 9, 10, 15, 16, 17, 19, 20, 23, 24, 29, 33, 46, 47, 52, 53, 54, 56, 62, 64, 68, 72, 76, 77, 80, 83, 86, 88, 90, 91, 95, 96, 98, 99, 102, 105, 106, 110, 113, 115, 117, 119, 120, 121, 125], "center_mass": [0, 6, 10, 15, 16, 48, 81, 95, 98, 103], "moment": [0, 6, 10, 15, 16, 48, 72, 95, 98, 103, 115], "inertia": [0, 6, 10, 15, 16, 72, 82, 88, 95, 98, 103], "moment_inertia": [0, 6, 10, 15, 16, 48, 82, 95, 98], "bodi": [0, 6, 9, 10, 15, 16, 24, 42, 58, 71, 91], "split": [0, 2, 6, 10, 15, 16, 46, 52, 58, 62, 70, 71, 75, 77, 126], "connect": [0, 6, 10, 15, 16, 46, 58, 59, 62, 67, 71, 72, 77, 80, 95, 98, 99, 106, 124], "compon": [0, 6, 10, 15, 16, 46, 48, 102, 106, 120, 121, 127], "adjac": [0, 6, 9, 10, 15, 16, 23, 46, 89, 91, 120, 121, 124], "singl": [0, 6, 10, 12, 15, 16, 19, 20, 22, 32, 33, 46, 60, 62, 68, 70, 71, 72, 78, 82, 85, 91, 95, 98, 106, 113, 115, 117, 119, 122, 123, 126], "get": [0, 2, 6, 7, 9, 10, 12, 15, 16, 19, 20, 23, 27, 29, 32, 33, 46, 48, 53, 58, 62, 64, 66, 71, 72, 79, 80, 82, 92, 93, 95, 96, 98, 99, 101, 105, 107, 113, 115, 117, 119, 123, 124, 126, 127], "one": [0, 6, 9, 10, 12, 15, 16, 19, 20, 24, 29, 32, 45, 46, 47, 54, 55, 56, 64, 70, 75, 77, 80, 83, 91, 95, 96, 98, 99, 102, 105, 110, 115, 117, 120, 121, 123, 124], "facet": [0, 6, 10, 15, 16, 22, 45, 46, 57, 79, 82], "group": [0, 6, 10, 15, 16, 35, 46, 86, 90, 103, 106], "coplanar": [0, 6, 10, 15, 16, 18, 22, 25, 45, 58, 69, 71, 103], "each": [0, 2, 6, 8, 9, 10, 13, 15, 16, 19, 20, 24, 25, 29, 32, 35, 39, 45, 46, 47, 54, 58, 60, 70, 71, 72, 74, 75, 77, 79, 80, 81, 82, 83, 85, 86, 88, 89, 90, 94, 95, 96, 98, 99, 102, 103, 106, 113, 115, 117, 120, 121, 122, 123, 125, 126], "random": [0, 2, 6, 8, 10, 15, 16, 19, 24, 58, 70, 71, 72, 79, 80, 82, 94, 102, 106, 113, 115], "8": [0, 2, 6, 7, 10, 15, 18, 19, 22, 35, 38, 41, 47, 72, 80, 88, 93, 102, 106], "bit": [0, 2, 6, 10, 38, 104], "rgba": [0, 6, 10, 15, 71, 80, 97, 113, 115, 116, 117], "n": [0, 2, 6, 7, 8, 9, 10, 11, 15, 16, 17, 18, 19, 21, 23, 24, 25, 34, 39, 45, 46, 47, 52, 54, 55, 56, 58, 61, 62, 64, 66, 67, 68, 70, 71, 72, 74, 75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 88, 89, 90, 91, 94, 95, 96, 98, 99, 102, 103, 104, 106, 113, 115, 117, 118, 119, 120, 121, 123, 125, 126, 127], "4": [0, 2, 6, 9, 10, 12, 15, 16, 18, 19, 20, 24, 45, 46, 47, 48, 52, 54, 57, 58, 60, 70, 71, 75, 80, 81, 82, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 102, 104, 106, 110, 113, 115, 116, 117, 118, 120, 121, 125, 126, 127], "uint8": [0, 6, 10, 15, 19, 24, 71, 80, 91, 97, 113, 115, 117, 118, 120, 121, 126], "visual": [0, 1, 6, 8, 10, 11, 13, 14, 15, 16, 24, 29, 30, 32, 33, 35, 58, 60, 70, 80, 82, 90, 95, 98, 100, 120, 121], "face_color": [0, 6, 10, 11, 13, 15, 16, 113, 115, 118], "random_color": [0, 6, 8, 10, 15, 113, 115], "opengl": [0, 6, 7, 15, 16, 90, 95, 98, 102, 106], "show": [0, 1, 3, 6, 8, 10, 11, 12, 13, 14, 15, 16, 57, 58, 62, 71, 72, 80, 92, 95, 98, 99, 120, 121], "transform": [0, 6, 9, 10, 15, 16, 18, 20, 21, 24, 45, 48, 54, 57, 58, 60, 68, 70, 71, 72, 75, 79, 80, 81, 82, 88, 90, 94, 95, 96, 97, 98, 110, 120, 121], "method": [0, 6, 10, 12, 15, 16, 19, 21, 22, 29, 57, 64, 81, 83, 86, 88, 94, 102, 103, 106, 120, 121, 122, 124], "matrix": [0, 6, 9, 10, 15, 16, 18, 20, 24, 25, 45, 46, 48, 57, 58, 60, 70, 71, 72, 75, 79, 80, 81, 82, 88, 90, 94, 95, 96, 98, 99, 101, 102, 103, 120, 121, 123, 125, 127], "appli": [0, 6, 10, 15, 24, 48, 52, 57, 58, 71, 75, 79, 80, 82, 88, 95, 98, 102, 113, 115, 117, 119, 120, 121, 127], "apply_transform": [0, 6, 10, 15, 16, 57, 58, 71, 80, 82, 95, 98, 120, 121, 127], "random_rotation_matrix": [0, 6, 10, 15, 102], "axi": [0, 2, 3, 6, 10, 12, 15, 16, 18, 19, 24, 29, 45, 46, 47, 48, 55, 57, 58, 70, 71, 72, 79, 80, 81, 82, 83, 95, 97, 98, 99, 102, 106, 110, 120, 121, 123], "align": [0, 6, 9, 10, 15, 16, 18, 19, 48, 57, 58, 62, 70, 71, 72, 80, 82, 83, 88, 95, 98, 102, 103, 106], "bound": [0, 6, 8, 10, 12, 15, 16, 24, 29, 56, 57, 58, 60, 62, 70, 71, 72, 80, 82, 83, 86, 94, 95, 98, 102, 103, 106, 110, 120, 121], "box": [0, 4, 6, 8, 10, 12, 15, 16, 18, 24, 29, 57, 60, 70, 71, 72, 80, 82, 83, 86, 94, 95, 98, 102, 103, 106, 110, 120, 121, 125], "bounding_box": [0, 6, 10, 15, 29, 57], "extent": [0, 6, 10, 15, 16, 18, 24, 57, 58, 60, 70, 71, 72, 80, 82, 94, 95, 98, 102, 103, 120, 121], "minimum": [0, 6, 10, 15, 18, 20, 22, 46, 47, 55, 56, 57, 60, 80, 82, 103, 106], "orient": [0, 6, 8, 9, 10, 15, 16, 18, 24, 57, 72, 81, 82, 91, 94, 97, 102, 103, 106], "primit": [0, 6, 8, 10, 11, 13, 15, 16, 24, 57, 62, 71], "subclass": [0, 6, 10, 19, 82, 104, 106], "automat": [0, 4, 6, 10, 15, 16, 33, 46, 82, 83, 95, 98, 113, 115, 119], "store": [0, 6, 11, 15, 16, 19, 31, 32, 54, 62, 71, 80, 82, 83, 92, 95, 96, 98, 99, 106, 113, 115, 117, 119, 120, 121, 126, 127], "attribut": [0, 6, 13, 15, 19, 27, 46, 58, 71, 77, 80, 82, 83, 89, 106], "bounding_box_ori": [0, 6, 8, 10, 15, 57, 82], "append": [0, 2, 6, 15, 16, 95, 98, 104, 106, 113, 115], "lazili": [0, 6, 10, 82, 123], "evalu": [0, 6, 7, 10, 15, 16, 46, 47, 81, 93, 100, 106], "fill": [0, 6, 10, 15, 16, 19, 58, 71, 72, 73, 91, 120, 121, 122, 124, 125], "press": [0, 6, 102, 110], "w": [0, 6, 9, 19, 88, 99, 102], "see": [0, 2, 6, 7, 15, 16, 18, 19, 29, 58, 70, 71, 75, 91, 102, 103, 106, 108, 109, 120, 121, 122, 123, 124], "sphere": [0, 6, 10, 11, 13, 15, 23, 24, 25, 48, 56, 57, 82, 83, 94, 102], "cylind": [0, 6, 10, 15, 16, 18, 24, 48, 57, 82], "except": [0, 6, 7, 10, 15, 16, 19, 32, 39, 47, 72, 97, 106, 126], "certain": [0, 6, 10, 77], "degener": [0, 6, 10, 15, 16, 46, 82, 103], "case": [0, 6, 7, 10, 15, 16, 19, 33, 62, 77, 82, 88, 89, 94, 106], "where": [0, 2, 6, 9, 10, 11, 15, 16, 18, 19, 29, 31, 46, 47, 55, 59, 62, 67, 71, 72, 75, 76, 77, 80, 85, 86, 92, 94, 95, 97, 98, 99, 102, 103, 106, 120, 121, 122, 126], "thei": [0, 2, 4, 6, 7, 9, 10, 15, 16, 19, 55, 58, 62, 71, 76, 86, 95, 97, 98, 106, 120, 121, 125], "wors": [0, 6, 10], "than": [0, 2, 6, 7, 9, 10, 15, 16, 18, 19, 22, 23, 24, 25, 29, 33, 45, 46, 47, 57, 62, 64, 70, 72, 75, 76, 80, 88, 89, 91, 94, 97, 99, 102, 103, 106, 117], "least": [0, 6, 9, 10, 19, 29, 56, 83, 102], "squar": [0, 6, 10, 15, 16, 56, 88, 97, 102, 119, 124], "fit": [0, 6, 10, 15, 16, 22, 29, 56, 58, 71, 76, 80, 88, 104, 117], "bounding_cylind": [0, 6, 10, 15, 57], "bounding_spher": [0, 6, 10, 15, 57], "binari": [0, 6, 7, 29, 32, 38, 39, 70, 104, 106, 123, 126], "ascii": [0, 6, 38, 39, 44, 106], "wavefront": [0, 6, 35], "obj": [0, 6, 7, 14, 15, 18, 23, 28, 29, 56, 90, 92, 105, 106, 115, 117], "off": [0, 6, 15, 16, 28, 29, 92, 95, 98], "export": [0, 6, 7, 15, 16, 22, 28, 29, 30, 32, 35, 36, 38, 39, 40, 41, 43, 44, 57, 58, 63, 64, 68, 71, 75, 80, 92, 95, 98, 99, 106, 120, 121], "2d": [0, 6, 7, 12, 15, 16, 18, 24, 33, 47, 52, 58, 59, 61, 62, 64, 67, 69, 70, 71, 72, 73, 75, 102, 103, 106, 123], "3d": [0, 6, 9, 12, 15, 16, 18, 20, 24, 33, 43, 45, 52, 54, 58, 59, 62, 67, 69, 70, 71, 74, 75, 80, 82, 83, 90, 102, 106, 110, 120, 121, 125], "dxf": [0, 6, 15, 33, 58, 63, 65, 66, 71], "svg": [0, 6, 7, 12, 15, 46, 58, 65, 66, 68, 71, 75], "geometri": [0, 6, 9, 12, 15, 16, 17, 20, 21, 23, 24, 32, 33, 36, 41, 42, 44, 46, 48, 52, 54, 57, 58, 60, 64, 66, 67, 68, 70, 71, 72, 73, 76, 77, 79, 82, 85, 88, 90, 91, 94, 95, 97, 98, 99, 101, 102, 105, 106, 108, 109, 120, 121, 122], "gmsh": [0, 6, 15, 49], "sdk": [0, 6, 52], "brep": [0, 6, 29, 52], "step": [0, 6, 12, 15, 16, 52, 77, 82, 88, 106], "ig": [0, 6, 52], "inp": [0, 6], "bdf": [0, 6, 52], "collada": [0, 6, 15, 16, 30], "abaqu": [0, 6, 40], "nastran": [0, 6, 52], "line": [0, 2, 6, 11, 12, 15, 19, 22, 24, 25, 29, 54, 58, 59, 60, 61, 62, 64, 66, 67, 69, 71, 72, 74, 75, 76, 77, 82, 104, 106], "jupyt": [0, 6, 15, 95, 98, 108, 109], "three": [0, 4, 6, 9, 15, 16, 52, 57, 59, 62, 75, 79, 102, 103, 106, 108, 109], "j": [0, 6, 9, 15, 47, 52, 61, 76, 77, 89, 101, 102, 106, 108, 109], "hash": [0, 4, 6, 7, 15, 16, 19, 21, 46, 47, 58, 70, 71, 80, 92, 95, 98], "chang": [0, 6, 15, 16, 19, 21, 71, 77, 82, 88, 91, 92, 95, 98, 99, 102, 110, 115], "track": [0, 6, 15, 16, 19, 82, 104], "md5": [0, 6], "zlib": [0, 6], "crc": [0, 6, 15, 80], "intern": [0, 6, 29, 48, 120, 121], "comput": [0, 6, 9, 15, 16, 17, 19, 25, 26, 29, 45, 46, 48, 56, 69, 80, 81, 83, 88, 101, 102, 103, 104, 106, 110, 125], "valid": [0, 6, 7, 9, 15, 16, 28, 32, 33, 48, 54, 58, 62, 71, 72, 82, 95, 98, 103, 105, 106], "calcul": [0, 6, 7, 15, 16, 19, 47, 48, 54, 59, 61, 72, 82, 89, 94, 95, 96, 98, 101, 102, 103, 105, 106, 113, 119], "angl": [0, 6, 15, 16, 22, 23, 24, 25, 45, 46, 47, 58, 59, 60, 62, 64, 70, 72, 75, 80, 95, 96, 97, 98, 99, 102, 103, 106], "defect": [0, 6, 15, 16, 25], "e": [0, 2, 4, 6, 7, 9, 15, 16, 17, 24, 27, 30, 32, 33, 46, 65, 68, 70, 80, 82, 89, 92, 94, 97, 99, 102, 105, 106, 113, 115, 117, 122, 124, 126], "slice": [0, 6, 12, 15, 16, 54, 62, 113, 115], "arbitrari": [0, 6, 13, 15, 16, 24, 48, 80, 105, 106], "plane": [0, 6, 12, 15, 16, 18, 22, 23, 24, 45, 54, 58, 59, 60, 62, 71, 72, 80, 82, 102, 106, 120, 121], "base": [0, 4, 6, 7, 15, 19, 20, 22, 27, 29, 39, 47, 51, 57, 58, 59, 62, 70, 71, 77, 79, 80, 82, 83, 85, 86, 89, 92, 95, 96, 97, 98, 99, 102, 103, 104, 105, 106, 110, 113, 115, 117, 119, 120, 123, 124, 127], "tool": [0, 6, 7, 29, 45, 100], "spars": [0, 2, 6, 7, 9, 15, 16, 25, 45, 46, 101, 120, 121, 123, 125], "princip": [0, 6, 15, 16, 48, 72, 88], "repair": [0, 6, 15, 23, 29, 46, 58, 72, 99, 102, 106], "simpl": [0, 1, 6, 7, 10, 11, 15, 16, 36, 46, 71, 95, 98, 99, 102, 105, 115, 117, 119, 121, 123], "problem": [0, 2, 6, 9, 15, 16, 19, 74, 80, 85], "wind": [0, 6, 15, 16, 24, 46, 91, 102], "normal": [0, 6, 9, 15, 16, 18, 20, 23, 24, 25, 32, 35, 38, 39, 45, 47, 54, 58, 59, 60, 62, 71, 72, 80, 82, 83, 86, 88, 91, 101, 102, 103, 115, 117, 119, 126], "quad": [0, 6, 15, 16, 45, 46, 82], "hole": [0, 6, 15, 16, 46, 58, 71, 72, 91, 120, 121], "rotat": [0, 6, 9, 15, 16, 24, 29, 45, 48, 62, 68, 70, 72, 79, 82, 88, 95, 96, 97, 99, 102, 108, 110, 120, 121], "translat": [0, 6, 9, 15, 16, 28, 29, 48, 57, 68, 71, 79, 88, 99, 102, 110, 120, 121, 127], "tessel": [0, 6, 15, 21, 79, 82], "invari": [0, 6, 15, 16], "identifi": [0, 6, 15, 16, 20, 21, 58, 62, 71, 72, 95, 98, 106], "find": [0, 2, 6, 8, 9, 12, 13, 15, 16, 18, 19, 45, 46, 47, 48, 54, 56, 58, 59, 67, 69, 71, 72, 75, 80, 81, 83, 85, 86, 88, 92, 95, 98, 99, 100, 102, 103, 106, 125], "duplic": [0, 6, 13, 15, 16, 47, 71, 75, 76, 82, 95, 98, 106, 113, 115, 119], "determin": [0, 6, 9, 15, 16, 19, 70, 76, 88, 103], "uniformli": [0, 6, 77, 102], "sampl": [0, 2, 6, 7, 8, 15, 16, 18, 58, 61, 71, 72, 76, 77, 81, 82, 88, 106, 113, 115, 117], "locat": [0, 6, 11, 15, 16, 19, 48, 52, 56, 60, 70, 81, 82, 85, 86, 92, 97, 103, 119, 120, 121, 125], "index": [0, 6, 11, 15, 16, 19, 20, 24, 38, 39, 46, 47, 54, 58, 62, 64, 67, 71, 72, 75, 76, 77, 80, 83, 85, 86, 89, 90, 91, 106, 115, 117, 119, 123, 125], "boolean": [0, 2, 6, 7, 15, 16, 19, 45, 46, 47, 49, 50, 53, 58, 59, 62, 71, 73, 101, 125], "intersect": [0, 2, 6, 7, 11, 12, 15, 16, 17, 20, 25, 29, 50, 55, 58, 70, 71, 72, 83, 85, 86, 96], "union": [0, 2, 6, 7, 15, 16, 17, 50, 52, 55, 72, 75, 95, 98], "differ": [0, 2, 4, 6, 9, 15, 16, 17, 19, 21, 38, 47, 50, 53, 54, 57, 75, 79, 88, 95, 98, 99, 101, 102, 103, 104, 110, 119, 123, 126], "openscad": [0, 6, 53], "blender": [0, 6, 15, 17, 49, 102], "back": [0, 6, 15, 16, 54, 58, 71, 72, 82, 102, 106, 121], "end": [0, 2, 6, 9, 13, 22, 24, 47, 55, 59, 62, 71, 74, 75, 76, 88, 97, 106, 123, 126], "note": [0, 6, 9, 15, 16, 19, 24, 28, 29, 47, 48, 57, 62, 71, 72, 77, 89, 91, 94, 102, 104, 106], "usual": [0, 2, 6, 7, 45, 99, 106, 119], "slow": [0, 2, 6, 7, 15, 16, 17, 80, 86, 89], "unreli": [0, 6], "voxel": [0, 6, 7, 15, 16, 29, 106], "tetgen": [0, 6, 52], "smooth": [0, 6, 9, 11, 15, 16, 46, 58, 71, 76, 88, 89, 90, 95, 98, 120, 121], "laplacian": [0, 6, 101], "algorithm": [0, 2, 6, 7, 9, 15, 16, 19, 52, 77, 83, 88, 102, 120, 121, 125], "classic": [0, 6], "taubin": [0, 6, 101], "humphrei": [0, 6, 101], "subdivid": [0, 6, 15, 16, 24, 79, 89, 122], "approxim": [0, 6, 15, 16, 18, 26, 46, 57, 58, 59, 71, 72, 80, 85, 89, 94, 95, 98], "nearest": [0, 5, 6, 7, 9, 70, 83, 90, 102], "point": [0, 6, 7, 8, 9, 13, 15, 16, 18, 20, 22, 23, 24, 25, 35, 45, 47, 48, 52, 54, 56, 58, 59, 61, 62, 64, 68, 69, 70, 71, 72, 74, 75, 76, 77, 81, 82, 83, 85, 86, 88, 90, 91, 94, 95, 96, 97, 98, 99, 102, 103, 104, 106, 110, 115, 120, 121, 122, 125, 127], "sign": [0, 6, 58, 71, 83, 88, 104, 106], "distanc": [0, 6, 8, 9, 13, 15, 16, 20, 22, 23, 24, 46, 47, 54, 57, 58, 70, 71, 72, 74, 75, 76, 77, 79, 80, 82, 83, 86, 88, 95, 96, 97, 98, 99, 101, 106], "li": [0, 6, 45, 106], "insid": [0, 2, 4, 6, 15, 16, 18, 19, 29, 58, 60, 71, 72, 79, 82, 83, 85, 86, 92, 94, 97, 102, 106], "outsid": [0, 6, 70, 83, 117], "construct": [0, 6, 9, 15, 16, 24, 38, 83, 126], "extrus": [0, 6, 15, 24, 82], "have": [0, 2, 4, 6, 15, 16, 21, 22, 23, 24, 33, 46, 47, 58, 60, 62, 64, 70, 71, 72, 75, 77, 80, 83, 91, 95, 97, 98, 99, 102, 103, 105, 106, 122, 124, 126], "all": [0, 2, 4, 6, 7, 9, 12, 15, 16, 17, 18, 19, 20, 24, 25, 29, 33, 45, 46, 47, 52, 54, 55, 57, 58, 61, 62, 70, 71, 76, 82, 83, 88, 89, 91, 92, 95, 97, 98, 99, 101, 102, 103, 105, 106, 118, 123], "same": [0, 2, 6, 8, 9, 15, 16, 19, 22, 33, 35, 42, 47, 57, 62, 71, 79, 80, 83, 94, 102, 103, 106, 113, 115, 119, 123, 126], "tree": [0, 6, 7, 15, 16, 32, 52, 70, 72, 80, 86, 95, 98, 99, 103, 106], "render": [0, 5, 6, 7, 15, 16, 29, 46, 95, 96, 98, 108, 109, 117], "pyrend": [0, 6, 97], "unit": [0, 4, 6, 7, 12, 15, 16, 24, 29, 32, 45, 47, 58, 59, 60, 62, 71, 74, 75, 80, 82, 85, 94, 95, 97, 98, 102, 106, 127], "row": [0, 2, 6, 9, 15, 16, 45, 47, 48, 90, 102, 106, 125], "option": [0, 4, 6, 7, 9, 15, 16, 19, 20, 23, 24, 29, 34, 35, 43, 47, 52, 54, 75, 80, 82, 85, 86, 88, 90, 94, 95, 97, 98, 99, 103, 106, 117], "debug": [0, 2, 6, 7, 17, 22, 50, 51, 53, 76, 88], "inspect": [0, 6], "In": [0, 2, 6, 9, 15, 16, 19, 45, 47, 69, 92, 102, 106], "view": [0, 6, 19, 80, 95, 96, 102, 108], "open": [0, 2, 6, 15, 16, 33, 37, 38, 39, 40, 43, 44, 52, 58, 62, 66, 68, 71, 80, 92, 95, 98, 102, 104, 106], "follow": [0, 6, 9, 15, 19, 66, 89, 102, 103, 126], "command": [0, 6, 29, 47, 51], "mous": [0, 6, 110], "click": [0, 6, 110], "drag": [0, 6, 15, 102, 108, 110], "ctl": [0, 6], "pan": [0, 6], "wheel": [0, 6, 110], "zoom": [0, 6, 110], "z": [0, 6, 9, 12, 15, 16, 24, 29, 75, 81, 95, 96, 97, 99, 102, 106, 120, 121], "toggl": [0, 6, 19], "wirefram": [0, 6, 29], "mode": [0, 6, 15, 19, 29, 46, 50, 58, 70, 71, 73, 102, 104, 106, 113, 115, 117], "c": [0, 6, 7, 9, 19, 24, 45, 80, 92, 102, 103, 104, 120, 121], "backfac": [0, 6, 72, 117], "cull": [0, 6, 80, 117], "g": [0, 4, 6, 9, 13, 15, 33, 46, 65, 99, 102, 106, 113, 115, 122, 124, 126], "xy": [0, 6, 12, 45, 58, 60, 71, 95, 96, 102, 106], "grid": [0, 6, 15, 29, 58, 60, 82, 106, 120, 121], "lowest": [0, 6], "xyz": [0, 6, 15, 24, 28, 29, 57, 80], "rgb": [0, 6, 113, 115, 116, 117], "marker": [0, 6, 24], "between": [0, 6, 7, 9, 13, 15, 16, 17, 19, 20, 45, 46, 47, 54, 58, 69, 70, 71, 72, 75, 77, 80, 83, 86, 88, 99, 101, 102, 104, 106, 110, 113, 115, 123, 125], "world": [0, 6, 15, 62, 95, 96, 98, 99, 110], "frame": [0, 6, 9, 12, 15, 16, 48, 57, 70, 72, 95, 96, 98, 99, 102, 106], "everi": [0, 2, 4, 6, 12, 15, 16, 25, 45, 46, 57, 58, 70, 71, 79, 80, 83, 85, 89, 91, 95, 98, 99, 106, 119, 125], "f": [0, 6, 9], "fullscreen": [0, 6], "m": [0, 1, 2, 6, 9, 11, 15, 16, 23, 24, 39, 45, 46, 47, 54, 55, 59, 60, 62, 64, 67, 70, 71, 72, 75, 76, 77, 80, 82, 83, 85, 86, 88, 89, 91, 99, 101, 102, 103, 105, 106, 115, 117, 119, 122, 123, 125], "maxim": [0, 6], "q": [0, 6, 9, 29, 47, 69, 77, 89, 102, 125], "close": [0, 6, 7, 12, 15, 22, 24, 58, 59, 62, 64, 71, 72, 73, 74, 76, 77, 94, 102, 104, 106, 127], "call": [0, 6, 7, 9, 15, 16, 19, 27, 28, 29, 33, 58, 62, 71, 80, 88, 90, 92, 106, 126], "displai": [0, 1, 6, 14, 15, 72, 80, 95, 98, 99, 108, 109], "complet": [0, 6, 15, 16], "pbr": [0, 6, 117], "better": [0, 6, 9, 15, 16, 18], "shader": [0, 6], "screen": [0, 6], "design": [0, 6, 71, 83], "interoper": [0, 6, 123], "github": [0, 2, 4, 6, 7, 9, 32, 35, 38, 92, 97], "network": [0, 6, 7, 15, 33], "A": [0, 1, 4, 6, 9, 10, 12, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 32, 45, 53, 54, 57, 58, 62, 64, 65, 71, 79, 80, 82, 83, 86, 92, 95, 97, 98, 99, 101, 102, 105, 106, 110, 117, 119, 120, 121, 122, 124], "select": [0, 6, 19], "few": [0, 6, 7, 106], "nvidia": [0, 6], "kaolin": [0, 6], "deep": [0, 6, 15, 95, 98, 99], "learn": [0, 6], "cura": [0, 6], "popular": [0, 6], "slicer": [0, 6], "berkelei": [0, 6], "dexnet4": [0, 6], "relat": [0, 6, 9, 102], "ambidextr": [0, 6], "ai": [0, 6, 102], "work": [0, 4, 6, 29, 38, 71, 106], "robot": [0, 6], "grasp": [0, 6], "kerf": [0, 6], "engin": [0, 6, 7, 15, 16, 17, 24, 46, 54], "analyz": [0, 6, 7], "assembli": [0, 6], "manufactur": [0, 6, 101], "myminifactori": [0, 6], "p2slice": [0, 6], "prepar": [0, 6], "look": [0, 2, 4, 6, 7, 15, 16, 19, 29, 33, 95, 97, 98, 106, 113, 115], "materi": [0, 6, 15, 16, 29, 32, 33, 35, 70, 90, 113, 115, 119], "urdfpi": [0, 6], "urdf": [0, 6, 15, 28], "descript": [0, 6, 7, 29], "moderngl": [0, 6], "helper": [0, 6], "gl": [0, 6, 15, 90, 95, 98], "context": [0, 2, 6, 12, 15, 16], "vedo": [0, 6], "interact": [0, 2, 6, 12], "galleri": [0, 6], "fsley": [0, 6], "mri": [0, 6], "imag": [0, 6, 7, 14, 15, 16, 30, 58, 70, 71, 73, 88, 90, 92, 95, 96, 98, 110, 113, 115, 116, 117, 119, 120, 121], "brain": [0, 6], "recommend": [0, 6, 7, 15, 16, 88, 102], "time": [0, 2, 6, 15, 16, 22, 24, 47, 81, 89, 103, 106, 115, 126], "replac": [0, 2, 6, 7, 9, 15, 16, 19, 20, 58, 71, 76, 100, 106, 120, 121], "angel": [0, 6], "wing": [0, 6], "textur": [0, 5, 6, 7, 15, 16, 30, 32, 33, 35, 38, 47, 70, 90, 92, 113, 115, 116, 117], "terrif": [0, 6], "choic": [0, 6], "extrem": [0, 6, 7, 85, 91], "specifi": [0, 4, 6, 9, 15, 16, 19, 24, 29, 41, 46, 47, 54, 57, 58, 59, 60, 61, 64, 68, 71, 72, 75, 77, 80, 82, 88, 89, 91, 92, 94, 95, 98, 99, 102, 103, 106, 113, 115, 117, 122, 123, 124], "modern": [0, 6], "fast": [0, 2, 6, 7, 19, 50, 56, 102, 110], "pars": [0, 2, 6, 7, 29, 35, 68, 99], "ha": [0, 2, 4, 6, 7, 15, 16, 19, 24, 33, 34, 35, 48, 54, 57, 62, 64, 67, 70, 72, 77, 88, 91, 92, 95, 98, 102, 106, 113, 115, 120, 121, 126], "json": [0, 6, 15, 16, 32, 33, 34, 82, 93, 100, 105, 106], "header": [0, 6, 29, 32, 35, 99], "describ": [0, 6, 9, 19, 52, 102, 106], "blob": [0, 6, 7, 15, 16, 32, 34, 64, 80, 106], "It": [0, 2, 4, 6, 19, 29, 47, 57, 80, 88], "hierarch": [0, 6], "great": [0, 6], "physic": [0, 6, 42, 97, 105, 117], "system": [0, 6, 9, 15, 16, 35, 71, 92, 94, 95, 98, 102, 104, 105], "dozen": [0, 6], "hundr": [0, 6], "john": [0, 6], "carmack": [0, 6], "endors": [0, 6], "larg": [0, 6, 8, 15, 16, 57, 83, 85, 104], "subset": [0, 6, 15, 16, 55, 80, 106, 113, 115, 123], "NOT": [0, 6, 33, 77, 106, 117], "fancier": [0, 6], "anim": [0, 6], "skeleton": [0, 6], "wild": [0, 6, 62], "perhap": [0, 6], "common": [0, 6, 30, 92, 98, 105, 106, 113, 115, 125], "robust": [0, 6, 15, 16, 21, 57, 88, 103], "good": [0, 4, 6], "pretti": [0, 2, 6, 40, 56], "unfortun": [0, 6], "doesn": [0, 6, 7, 11, 15, 24, 95, 98, 105, 125], "t": [0, 2, 4, 6, 7, 9, 11, 15, 16, 19, 24, 29, 32, 33, 35, 47, 48, 58, 62, 69, 70, 71, 72, 82, 88, 89, 95, 98, 99, 102, 103, 105, 106, 119, 125], "wide": [0, 6, 58, 71, 73, 106], "accept": [0, 6, 22, 34, 76, 90, 106], "implement": [0, 2, 6, 7, 9, 15, 16, 18, 19, 29, 32, 56, 57, 62, 82, 86, 88, 89, 99, 102, 103, 106, 115, 117, 120, 121, 122, 123, 124, 126], "slightli": [0, 6, 7, 24, 29], "tough": [0, 6], "size": [0, 2, 6, 15, 18, 19, 24, 29, 52, 62, 70, 71, 80, 95, 96, 98, 102, 103, 104, 110, 117, 120, 123], "represent": [0, 6, 15, 16, 19, 25, 29, 58, 61, 71, 75, 106, 120, 121], "mess": [0, 6], "refer": [0, 2, 12, 15, 16, 19, 29, 30, 32, 45, 47, 62, 64, 71, 72, 82, 95, 97, 98, 99, 100, 102, 106, 119, 124, 127], "arbitrarili": [0, 6], "interleav": [0, 6, 106], "give": [0, 6, 15, 16, 102, 126], "try": [0, 6, 7, 9, 15, 16, 23, 29, 33, 71, 74, 82, 90, 91, 92, 102, 105, 106], "altern": [0, 6, 7, 126], "question": [0, 6, 20], "come": [0, 6, 9, 15, 19, 95, 98, 106, 119], "frequent": [0, 6], "bibtex": [0, 6], "softwar": [0, 6], "author": [0, 6, 29, 102], "dawson": [0, 6], "haggerti": [0, 6], "et": [0, 6, 9, 88], "al": [0, 6, 9, 88, 102], "titl": [0, 3, 6, 29], "url": [0, 6, 15, 33, 92], "http": [0, 6, 18, 23, 29, 32, 35, 38, 52, 69, 70, 80, 92, 94, 97, 102, 103, 117, 124], "org": [0, 6, 23, 80, 124], "2019": [0, 6, 29], "12": [0, 6, 12, 18, 22, 45, 75, 102, 106, 117, 126], "autom": [0, 6], "debian": [0, 4, 6], "slim": [0, 4, 6], "bullsey": [0, 4, 6], "build": [0, 6, 9, 29, 58, 71], "docker": 0, "hub": [0, 4, 6], "tag": [0, 4, 6], "latest": [0, 4, 6], "git": [0, 2, 4, 6, 117], "short": [0, 4, 6], "commit": [0, 6, 7, 92], "main": [0, 6, 9], "0c1298d": [0, 6], "5": [0, 2, 4, 6, 10, 11, 15, 16, 19, 22, 24, 41, 45, 47, 55, 58, 60, 61, 68, 71, 72, 75, 101, 102, 106, 126], "27": [0, 6], "llvmpipe": [0, 6], "xvfb": [0, 6], "mesh": [1, 2, 3, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 35, 36, 38, 39, 41, 42, 45, 46, 47, 48, 50, 51, 52, 53, 54, 56, 57, 58, 67, 70, 71, 72, 79, 80, 81, 82, 83, 85, 86, 88, 89, 90, 91, 92, 94, 95, 98, 101, 103, 106, 108, 113, 115, 118, 119, 120, 121, 122, 125], "trimesh": [1, 3, 7, 8, 9, 10, 11, 12, 13, 14], "machinist": 1, "kind": [1, 9, 15, 16, 19, 33, 38, 95, 98, 113, 114, 115, 119], "ifram": [1, 8, 10, 11, 12, 13, 14], "srcdoc": [1, 8, 10, 11, 12, 13, 14], "threej": [1, 8, 10, 11, 12, 13, 14], "viewer": [1, 7, 8, 10, 11, 12, 13, 14, 15, 80, 95, 98], "width": [1, 8, 10, 11, 12, 13, 14, 15, 16, 58, 71, 72, 73, 86, 95, 96, 110], "100": [1, 2, 8, 10, 11, 12, 13, 14, 24, 68, 79, 83, 102, 106], "height": [1, 8, 10, 11, 12, 13, 14, 15, 16, 18, 24, 48, 54, 58, 62, 71, 75, 82, 95, 96, 103, 108, 109, 110], "500px": [1, 8, 10, 11, 12, 13, 14], "border": [1, 8, 10, 11, 12, 13, 14], "none": [1, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 44, 45, 46, 47, 48, 52, 54, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 79, 80, 81, 82, 83, 86, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 106, 110, 113, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127], "super": [2, 7], "i": [2, 4, 7, 8, 9, 10, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 29, 30, 31, 32, 33, 35, 38, 40, 45, 46, 47, 48, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 64, 66, 67, 68, 70, 71, 72, 75, 76, 77, 79, 80, 81, 82, 83, 85, 86, 88, 89, 91, 92, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 113, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127], "rel": [2, 15, 24, 83, 93, 95, 98, 102, 103, 110], "small": [2, 54, 85, 122], "sourc": [2, 7, 9, 13, 15, 16, 21, 33, 38, 44, 46, 47, 54, 68, 70, 72, 75, 76, 82, 83, 88, 91, 92, 97, 106, 108, 109, 122], "project": [2, 7, 15, 16, 23, 46, 58, 72, 80, 102], "realli": [2, 19, 91], "benefit": 2, "bugfix": 2, "featur": [2, 7, 15, 126], "stuff": [2, 7, 106], "contributor": 2, "pr": 2, "thank": 2, "how": [2, 15, 16, 18, 19, 22, 24, 47, 58, 60, 71, 72, 75, 88, 101, 106, 117], "new": [2, 7, 9, 15, 16, 19, 20, 23, 29, 48, 52, 54, 55, 62, 64, 70, 71, 76, 77, 79, 81, 82, 89, 91, 95, 96, 98, 99, 102, 104, 110, 113, 117, 119, 120, 121, 124], "environ": [2, 7], "write": [2, 15, 19, 29, 31, 32, 35, 41, 42, 44, 46, 92, 104, 106], "necessari": [2, 15, 16], "thi": [2, 7, 9, 10, 12, 15, 16, 17, 18, 19, 20, 22, 24, 25, 29, 32, 33, 41, 42, 46, 47, 48, 53, 55, 57, 58, 60, 62, 70, 71, 72, 73, 75, 77, 79, 80, 81, 82, 83, 86, 88, 89, 91, 92, 94, 95, 96, 97, 98, 99, 102, 104, 106, 110, 113, 115, 117, 119, 123, 126, 127], "wai": [2, 7, 15, 16, 18, 19, 21, 52, 53, 79, 82, 91, 102, 104, 106, 115, 120, 121, 123], "doe": [2, 15, 16, 19, 29, 62, 72, 83, 86, 95, 97, 98, 104, 106, 113, 115, 126], "easier": [2, 9, 88], "don": [2, 15, 19, 32, 33, 35, 48, 95, 98, 103, 105], "virtual": [2, 102], "solut": [2, 9, 53, 102, 103], "plenti": 2, "poetri": 2, "pipenv": 2, "conda": [2, 6], "us": [2, 7, 8, 9, 12, 13, 15, 16, 17, 18, 19, 22, 24, 27, 28, 29, 31, 32, 34, 38, 41, 44, 45, 46, 47, 48, 50, 52, 53, 56, 57, 58, 59, 61, 62, 68, 69, 70, 71, 72, 73, 77, 80, 81, 82, 85, 86, 88, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 108, 109, 110, 113, 115, 117, 119, 122, 123, 124, 125, 126, 127], "venv": 2, "modul": [2, 19, 27, 71, 102, 106, 115, 117, 126], "built": [2, 4, 7, 9, 120, 121], "standard": [2, 7, 29, 106], "librari": [2, 7, 12, 15, 16, 46, 47, 102, 106], "termin": [2, 10], "echo": 2, "bin": [2, 47, 70], "activ": [2, 7], "bashrc": 2, "Then": [2, 9, 19, 52], "can": [2, 4, 7, 8, 9, 10, 12, 15, 16, 19, 22, 24, 25, 26, 32, 33, 35, 38, 40, 44, 45, 47, 53, 54, 55, 57, 62, 64, 67, 72, 75, 77, 79, 80, 82, 88, 92, 95, 98, 99, 102, 103, 106, 113, 119, 126], "verifi": [2, 15, 19], "got": 2, "right": [2, 9, 62, 70, 102, 106], "which": [2, 4, 7, 9, 10, 12, 15, 16, 17, 18, 19, 22, 24, 25, 26, 27, 30, 32, 33, 35, 38, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 62, 64, 70, 71, 72, 75, 76, 77, 80, 81, 82, 83, 88, 89, 91, 92, 94, 95, 97, 98, 99, 102, 103, 104, 106, 113, 117, 118, 119, 123], "mikedh": [2, 35], "orion": 2, "home": [2, 4, 12, 117], "re": [2, 7, 12, 22, 38, 46, 70, 72, 89, 102, 103], "edit": 2, "might": [2, 19, 105, 106], "fork": [2, 7, 97], "via": [2, 4, 9, 15, 29, 95, 98, 101, 108, 120, 121, 122, 124], "interfac": [2, 15, 19, 24, 29, 83, 92, 102, 104, 123], "instal": [2, 4, 15, 16, 19, 24, 52, 53, 106], "probabl": [2, 4, 7, 15, 16, 24, 28, 81, 88, 92], "clone": 2, "your": [2, 24, 29, 38, 62, 122, 124], "com": [2, 29, 32, 35, 38, 69, 70, 81, 92, 94, 97, 102, 103], "experi": [2, 7, 18], "cd": [2, 102], "much": [2, 15, 16, 18, 58, 71, 82, 88, 99], "repl": 2, "stub": 2, "def": [2, 19], "fancy_funct": 2, "blah": 2, "rais": [2, 7, 15, 16, 17, 19, 27, 29, 32, 33, 58, 71, 72, 99, 102, 104, 120, 121, 126], "valueerror": [2, 19, 33, 58, 71, 72, 99, 102, 104, 126], "input": [2, 15, 18, 19, 20, 23, 32, 33, 34, 39, 42, 46, 47, 52, 54, 55, 56, 58, 64, 67, 68, 70, 71, 72, 73, 76, 77, 79, 80, 90, 101, 102, 103, 104, 106, 119, 125, 126], "wa": [2, 7, 9, 15, 16, 19, 20, 23, 54, 57, 70, 71, 75, 92, 95, 98, 103, 113, 115, 120, 121, 123, 125], "goofi": [2, 80], "obviou": 2, "whatnot": 2, "dot": [2, 9, 15, 16, 46, 54, 102, 106], "my": 2, "copi": [2, 4, 15, 16, 19, 32, 57, 58, 62, 71, 80, 82, 95, 96, 98, 99, 102, 113, 114, 115, 117, 119, 120, 121, 123, 127], "past": 2, "emb": [2, 32], "__name__": 2, "__main__": 2, "go": [2, 7, 12, 15, 16, 75, 80, 91], "need": [2, 4, 9, 19, 24, 35, 62, 70, 72, 102, 119, 126], "pyinstrument": [2, 7], "low": [2, 19], "overhead": 2, "profil": [2, 7, 15, 16, 24, 58, 71, 82], "nest": 2, "statement": [2, 15, 16], "cprofil": 2, "tweak": [2, 7], "befor": [2, 15, 16, 19, 22, 29, 32, 70, 72, 75, 82, 106, 126], "finish": 2, "ruff": [2, 7], "both": [2, 9, 19, 33, 38, 46, 47, 60, 75, 88, 95, 96, 102, 103, 106, 115, 126], "lint": 2, "configur": [2, 7, 29], "pyproject": [2, 7, 107], "toml": [2, 7, 107], "run": [2, 4, 7, 11, 13, 15, 16, 17, 19, 22, 29, 32, 49, 50, 51, 53, 58, 70, 71, 89, 93, 101, 123, 125, 126], "fix": [2, 15, 16, 74, 91], "sphinx": 2, "page": [2, 29, 88], "littl": 2, "possibl": [2, 7, 15, 16, 19, 52, 88, 104, 106, 115, 126], "ever": [2, 19], "block": [2, 15, 29, 47, 64, 106], "loop": [2, 9, 15, 16, 19, 47, 58, 71, 72, 76, 89, 106], "basic": [2, 7, 9, 21, 53, 62, 71, 75, 86, 97, 105, 106, 124], "unus": [2, 29], "even": [2, 7, 15, 16, 18, 19, 46, 89, 102, 119, 126], "moder": 2, "should": [2, 4, 7, 9, 15, 16, 18, 19, 22, 24, 25, 28, 31, 48, 56, 58, 60, 70, 71, 72, 77, 80, 82, 85, 86, 90, 95, 98, 106, 113, 115, 122, 124], "unless": [2, 102], "absolut": [2, 72, 75, 102, 104], "unavoid": 2, "figur": [2, 3, 15, 95, 98, 106], "advic": 2, "script": [2, 51, 53], "newstuff": 2, "py": [2, 4, 9, 12, 15, 23, 28, 58, 95, 107, 108, 113, 120], "magic": [2, 33], "timeit": [2, 19, 106], "var": 2, "fromstr": 2, "frombuff": 2, "str": [2, 15, 16, 17, 19, 20, 21, 22, 23, 24, 29, 30, 31, 33, 34, 35, 36, 38, 39, 42, 44, 46, 47, 48, 50, 52, 54, 58, 59, 62, 64, 65, 66, 68, 70, 71, 75, 80, 88, 90, 92, 93, 95, 96, 97, 98, 99, 103, 104, 105, 106, 108, 109, 113, 115, 117, 119, 120, 121], "6": [2, 10, 15, 16, 18, 19, 29, 45, 47, 102, 106, 126], "text": [2, 7, 9, 15, 35, 36, 58, 62, 70, 103, 104, 106], "dtype": [2, 10, 15, 16, 19, 45, 47, 55, 58, 59, 71, 72, 75, 95, 98, 102, 103, 106, 113, 115, 116, 117, 120, 123, 126], "float64": [2, 15, 16, 55, 58, 59, 71, 72, 75, 82, 95, 98, 102, 103, 104, 116], "1000": [2, 79, 80, 95, 96, 106], "best": [2, 56, 76, 102, 105, 106], "209": 2, "\u00b5": 2, "per": [2, 9, 15, 16, 19, 22, 24, 41, 46, 47, 54, 58, 60, 71, 72, 75, 79, 80, 82, 85, 88, 95, 96, 97, 98, 103, 106, 113, 115, 119, 120, 121], "sep": 2, "10000": [2, 102, 106], "139": 2, "giant": [2, 7], "string": [2, 7, 15, 16, 19, 22, 24, 29, 30, 32, 33, 35, 44, 46, 53, 65, 68, 71, 75, 83, 99, 102, 105, 106, 115], "rather": [2, 15, 16, 33, 62, 64, 80, 91, 106], "iter": [2, 15, 16, 19, 29, 70, 88, 89, 92, 98, 101, 106, 123, 126], "join": 2, "14": [2, 12, 102], "15": [2, 4, 19, 102, 124], "10": [2, 3, 8, 12, 15, 16, 24, 26, 36, 46, 52, 68, 72, 75, 82, 83, 88, 89, 101, 102, 104, 106], "60": 2, "16": [2, 10, 19, 90, 102], "len": [2, 11, 12, 13, 15, 16, 23, 25, 45, 46, 47, 58, 71, 80, 82, 94, 95, 97, 98, 102, 113, 115, 119, 126], "flatten": [2, 123], "34": 2, "sometim": [2, 4, 15, 16, 19, 32, 106, 119], "matric": [2, 9, 15, 16, 68, 81, 97, 99, 102, 125], "huge": 2, "speedup": [2, 18, 46, 72, 102, 103], "two": [2, 8, 13, 15, 16, 19, 20, 22, 24, 46, 47, 55, 62, 69, 70, 74, 75, 90, 97, 102, 103, 106, 113, 115, 119, 125, 126], "product": [2, 9, 15, 16, 40, 54, 103, 106], "tight": [2, 106], "sum": [2, 9, 12, 15, 16, 25, 45, 47, 70, 71, 75, 88, 95, 98, 102, 103, 106, 120, 123], "often": [2, 9, 15, 16, 80, 88], "pop": [2, 15, 19], "slowest": 2, "ones": [2, 7, 106, 123, 126], "veri": [2, 53, 83, 94, 105, 106, 125], "optim": [2, 18, 88, 101, 102, 126], "substanti": [2, 18, 72], "157": 2, "25": [2, 19, 38, 46, 102, 104], "vstack": [2, 106], "column_stack": 2, "seq": 2, "int": [2, 13, 15, 16, 18, 19, 20, 22, 24, 29, 34, 35, 36, 38, 39, 41, 45, 46, 47, 52, 54, 58, 59, 60, 61, 62, 67, 68, 70, 71, 72, 73, 75, 76, 77, 80, 81, 82, 83, 85, 86, 88, 89, 90, 91, 94, 95, 96, 98, 99, 101, 104, 106, 110, 113, 115, 117, 119, 120, 121, 122, 123, 125, 126], "rang": [2, 9, 15, 16, 55, 75, 101, 102, 113, 115, 116, 117], "48": [2, 102], "33": 2, "bincount": 2, "instead": [2, 9, 29, 45, 46, 106], "uniqu": [2, 8, 13, 15, 16, 47, 58, 71, 72, 75, 86, 95, 98, 103, 106, 115], "45": [2, 68, 126], "astyp": [2, 45], "46": [2, 45], "bool": [2, 15, 16, 17, 18, 19, 20, 22, 23, 29, 30, 32, 33, 35, 38, 44, 45, 46, 47, 48, 50, 54, 55, 56, 57, 58, 59, 60, 62, 64, 68, 69, 70, 71, 72, 73, 75, 76, 80, 82, 83, 85, 86, 88, 89, 90, 91, 93, 94, 95, 98, 99, 102, 103, 104, 105, 106, 108, 109, 113, 115, 117, 119, 120, 121, 123, 125, 126], "true": [2, 9, 10, 15, 16, 17, 18, 19, 20, 22, 23, 26, 29, 30, 31, 32, 35, 38, 41, 44, 46, 47, 54, 55, 56, 58, 59, 60, 62, 64, 68, 70, 71, 72, 73, 75, 77, 80, 82, 83, 85, 86, 88, 89, 90, 91, 93, 94, 95, 98, 99, 101, 102, 103, 104, 105, 106, 108, 109, 117, 119, 122, 123, 126], "47": 2, "100000": 2, "81": 2, "31": 2, "especi": [2, 9], "could": [2, 4], "element": [2, 19, 29, 40, 47, 52, 99, 106, 117, 120, 121, 124, 126], "high": [2, 9], "mai": [2, 7, 9, 15, 16, 17, 18, 29, 35, 47, 57, 58, 71, 72, 77, 80, 86, 94, 95, 97, 98, 102, 106, 122], "comprehens": 2, "quit": 2, "though": [2, 9, 97, 106], "definit": [2, 15, 16], "first": [2, 4, 9, 15, 16, 19, 20, 46, 47, 52, 62, 64, 72, 77, 81, 85, 86, 99, 102, 103, 106, 123], "scope": 2, "reason": [2, 7, 32, 61, 76, 88, 106], "seem": 2, "answer": 2, "nearli": [2, 26], "flaki": 2, "restructur": 2, "form": [2, 9, 15, 16, 19, 34, 39, 46, 47, 61, 62, 68, 75, 90, 102, 103, 105, 106, 126], "didn": 2, "discret": [3, 15, 16, 22, 25, 58, 59, 61, 62, 70, 71, 76, 77], "gaussian": [3, 15, 16, 25, 79, 81], "measur": [3, 23, 25, 120, 121], "discrete_gaussian_curvature_measur": [3, 15, 25], "discrete_mean_curvature_measur": [3, 15, 25], "sphere_ball_intersect": [3, 15, 25], "matplotlib": [3, 12, 58, 62, 71, 72, 80, 99, 113, 115], "pyplot": [3, 113, 115], "plt": [3, 12, 62, 72, 80], "inlin": [3, 10, 12, 108], "creation": [3, 9, 11, 15, 16, 58, 71, 82, 120], "icospher": [3, 11, 15, 24, 82], "radii": [3, 15, 16, 46, 83], "linspac": [3, 77, 82, 106], "gauss": 3, "r": [3, 4, 9, 12, 15, 16, 25, 47, 52, 72, 86, 101, 102, 103, 106], "plot": [3, 12, 15, 58, 62, 71, 72, 80, 99], "ubuntu": 4, "typic": [4, 25], "dockerfil": 4, "idea": [4, 7, 9], "parti": 4, "buster": 4, "deriv": [4, 9, 15, 16, 82, 101, 123], "unmaintain": 4, "unknow": 4, "black": [4, 7, 12], "fine": [4, 7], "11": [4, 104], "offici": 4, "push": 4, "action": 4, "releas": [4, 7], "demand": 4, "semant": 4, "1c6178d": 4, "These": [4, 15, 16, 19, 58, 71], "embre": [4, 7], "multi": [4, 19, 42, 67, 71, 99], "stage": 4, "avoid": [4, 15, 16, 19, 54, 70, 72, 80, 82, 85, 89, 90, 103, 106, 126], "intermedi": [4, 83, 88], "final": [4, 15, 18, 19, 70, 72, 76, 95, 98], "non": [4, 15, 16, 32, 46, 47, 75, 83, 88, 91, 102, 106, 120, 121, 122, 126], "root": [4, 15, 58, 70, 71, 72, 77, 92, 95, 98, 99], "user": [4, 9, 12, 15, 16, 17, 19, 27, 33, 82, 115, 117], "directori": [4, 32, 35, 42, 92], "txt": 4, "app": 4, "cmd": 4, "save": [4, 15, 16, 29, 35, 52, 80, 92, 115, 126], "multistag": 4, "explicitli": [4, 9, 15, 16, 33, 81], "output": [4, 9, 15, 16, 29, 30, 32, 35, 36, 50, 52, 70, 76, 115], "target": [4, 9, 13, 20, 81, 88, 106, 110], "enabl": [4, 7, 9, 17, 48, 89], "buildkit": 4, "docker_buildkit": 4, "There": [4, 7, 19, 106, 115], "makefil": 4, "access": [4, 9, 19, 27, 29, 92], "doc": [4, 52, 124], "help": [4, 19, 29, 88], "eject": 4, "html": [4, 23, 29, 52, 69, 94, 102, 108, 109, 124], "sever": [5, 9], "quick": [5, 7, 23], "start": [5, 9, 13, 15, 16, 46, 55, 59, 64, 74, 75, 80, 88, 92, 106, 123, 126], "curvatur": [5, 15, 16, 24, 101], "shortest": [5, 47, 99], "overview": 6, "ad": [6, 9, 15, 19, 62, 77, 91, 92, 95, 98, 117], "importerror": 7, "runtim": 7, "isn": [7, 15, 16, 19, 47, 48, 72], "format": [7, 15, 16, 22, 23, 28, 30, 32, 33, 35, 36, 38, 40, 41, 44, 46, 47, 52, 64, 66, 68, 80, 90, 92, 99, 102, 106, 117], "mac": 7, "extra": [7, 9, 20, 32, 99], "Or": [7, 52], "prefer": [7, 38], "forg": 7, "feedstock": 7, "repo": [7, 92], "miniconda": 7, "lot": [7, 46, 99, 106, 115], "upstream": 7, "sure": [7, 15, 16, 19, 72, 91, 102], "maintain": [7, 79], "summari": 7, "level": [7, 41, 106], "contain": [7, 8, 9, 12, 15, 16, 17, 18, 19, 20, 22, 24, 25, 28, 29, 30, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 45, 46, 47, 57, 58, 60, 64, 67, 68, 70, 71, 72, 80, 82, 83, 85, 86, 88, 89, 92, 95, 98, 100, 105, 106, 108, 109, 113, 115, 116, 117, 119, 122, 126], "type": [7, 9, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 82, 83, 85, 86, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 108, 109, 110, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127], "spatial": [7, 15, 16, 70, 71, 80, 95, 98], "convexhul": 7, "csgraph": [7, 46], "ckdtree": [7, 15, 16, 71, 80, 88], "b": [7, 9, 12, 15, 16, 19, 45, 47, 55, 58, 61, 62, 64, 71, 76, 88, 89, 92, 101, 102, 106, 120, 121, 125], "spline": [7, 22, 58, 61, 62, 71, 76], "interpol": [7, 15, 88, 102, 113, 115], "over": [7, 9, 15, 16, 60, 81, 91, 113, 115], "annoi": 7, "abil": 7, "parent": [7, 15, 58, 62, 70, 71, 82, 95, 98, 99, 114], "node": [7, 15, 16, 20, 41, 46, 58, 62, 70, 71, 77, 95, 96, 97, 98, 99, 103], "understand": 7, "bind": [7, 53], "geo": 7, "theoret": 7, "planar": [7, 15, 16, 22, 58, 71, 81], "offset": [7, 15, 16, 54, 70, 95, 98, 102, 104], "clipper": 7, "nd": [7, 80, 123], "rectangl": [7, 15, 18, 58, 60, 70], "broad": [7, 86, 103, 106], "phase": [7, 86, 103, 106], "given": [7, 9, 13, 15, 16, 18, 20, 24, 33, 45, 46, 47, 54, 55, 58, 59, 61, 64, 67, 71, 72, 76, 77, 80, 83, 86, 90, 95, 96, 98, 100, 102, 103, 106, 110, 113, 115, 117, 120, 121, 122, 124, 125, 126], "curv": [7, 12, 15, 16, 22, 23, 24, 58, 62, 67, 71, 72, 76, 77], "fcl": [7, 20], "mayb": 7, "httpx": 7, "exchang": [7, 15, 51, 58], "load_remot": [7, 15, 28, 33], "aiohttp": 7, "sympi": [7, 102, 105], "symbol": [7, 102], "algebra": 7, "quickli": [7, 15, 16, 21, 72, 76, 80, 83, 125], "chardet": [7, 106], "fail": [7, 15, 16, 18, 27, 72, 102, 105, 106, 107], "decod": [7, 93, 106, 126], "utf": [7, 93, 106], "guess": [7, 15, 16, 56, 71, 76, 95, 98, 105, 106], "encod": [7, 15, 29, 31, 34, 38, 71, 95, 98, 102, 106, 108, 109, 115, 120, 121, 122, 124, 126], "u": [7, 19, 99, 106], "weird": [7, 90], "colorlog": [7, 106], "log": [7, 22, 56, 58, 71, 76, 94, 106], "pillow": [7, 73], "read": [7, 15, 19, 29, 64, 104], "raster": [7, 15, 58, 71], "jsonschema": [7, 32, 100], "pycollada": 7, "dae": [7, 15, 28, 33], "xatla": [7, 15, 16], "unwrap": [7, 15, 16, 49, 50], "uv": [7, 14, 15, 16, 24, 38, 47, 54, 113, 115, 117, 119], "coordin": [7, 9, 14, 15, 16, 38, 47, 54, 62, 71, 82, 88, 95, 96, 98, 102, 103, 106, 110, 113, 115, 117, 119, 125], "collis": [7, 15, 103, 106], "glooei": 7, "widget": [7, 15, 108], "meshio": [7, 34], "addit": [7, 15, 16, 17, 22, 30, 46, 50, 101, 106, 120, 121, 122, 124], "scikit": [7, 120, 121], "op": [7, 15, 119, 120, 123], "mapbox": [7, 24], "earcut": [7, 24], "triangul": [7, 15, 16, 24, 25, 54, 58, 67, 71, 82, 89], "unusu": 7, "licens": 7, "psutil": 7, "memori": [7, 15, 16, 19, 80, 122], "usag": [7, 106], "instanti": [7, 32, 71], "static": [7, 15, 16, 81, 102, 123], "code": [7, 15, 16, 19, 57, 64, 102, 104, 126], "formatt": [7, 106], "flake8": 7, "pytest": 7, "runner": 7, "cov": [7, 15, 16], "plugin": 7, "coverag": 7, "perform": [7, 9, 52, 72, 88, 102, 106, 126], "vhacdx": 7, "vhacd": [7, 15, 16, 26], "decomposit": [7, 15, 16, 42], "manifold3d": [7, 15, 16], "manifold": [7, 15, 16, 17], "matur": 7, "rust": 7, "complic": [7, 19], "major": [7, 24, 80, 90, 102], "jinja2": 7, "otherwis": [7, 20, 33, 70, 94, 102, 103, 104, 106, 117, 126], "intel": [7, 102], "50": [7, 22, 68, 70, 88], "100x": 7, "ve": 7, "organ": [7, 102], "take": [7, 12, 15, 16, 46, 60, 70, 77, 83, 99, 106, 125], "compil": [7, 19], "mit": [7, 48], "bsd": 7, "compat": [7, 19, 90, 104], "repositori": [7, 9, 92], "submodul": 7, "mysteri": 7, "pybind11": 7, "nanobind": 7, "maturin": 7, "py03": 7, "cython": 7, "ok": [7, 113, 115], "cibuildwheel": 7, "publish": [7, 29], "ci": 7, "ideal": [7, 9, 19], "pointcloud": [8, 9, 15, 16, 44, 57, 80, 88, 95, 98, 115], "ish": [8, 11], "cycloid": 8, "sample_volum": [8, 15, 82], "count": [8, 15, 16, 24, 46, 47, 58, 60, 61, 62, 71, 72, 75, 76, 77, 82, 86, 90, 94, 106, 115, 126], "closest": [8, 9, 15, 16, 20, 74, 75, 80, 83, 88, 95, 96, 103], "closest_point": [8, 15, 83, 88, 103], "triangle_id": [8, 83], "on_surfac": [8, 15, 83], "meshdist": 8, "cloud_origin": 8, "cloud_clos": 8, "cloud_color": 8, "vertices_color": 8, "wuse": 8, "capabl": 9, "superimpos": [9, 102], "structur": [9, 15, 16, 19, 20, 32, 89, 99, 120, 121, 124], "either": [9, 17, 19, 29, 34, 59, 64, 71, 72, 82, 92, 95, 96, 102, 105, 106, 116], "cloud": [9, 15, 44, 80, 88], "dens": [9, 15, 18, 45, 120, 121, 123, 124, 125, 126], "correspond": [9, 15, 16, 20, 32, 46, 47, 58, 71, 82, 86, 88, 95, 96, 98, 103, 119, 126], "morphabl": 9, "part": [9, 15, 19, 26, 29, 88, 95, 98, 102, 106], "scale": [9, 15, 22, 28, 29, 42, 57, 58, 59, 61, 62, 68, 71, 72, 76, 77, 79, 82, 85, 88, 95, 97, 98, 102, 105, 110, 116, 120, 121, 127], "togeth": [9, 94], "match": [9, 15, 16, 82, 85, 88, 95, 98, 106, 119], "icp": [9, 15, 16, 88], "move": [9, 12, 15, 16, 18, 19, 24, 45, 54, 57, 58, 60, 70, 71, 72, 82, 95, 98], "less": [9, 18, 23, 57, 88, 97, 99, 106, 117], "independ": [9, 58, 71, 102], "land": [9, 15, 16, 81], "extens": [9, 15, 32, 33, 34, 66, 106], "associ": [9, 15, 29, 64, 67, 72, 80, 99, 103, 113, 115, 126, 127], "sumner": [9, 88], "popov": [9, 88], "2004": [9, 29, 88, 102], "nonrigid": [9, 88], "amberg": [9, 88], "2007": [9, 88], "introduc": 9, "allen": 9, "colleagu": 9, "2003": [9, 29], "modifi": [9, 15, 16, 19, 76, 89, 95, 98, 113, 119, 122, 124], "adapt": 9, "defin": [9, 15, 16, 19, 23, 24, 38, 54, 55, 57, 60, 62, 71, 74, 75, 80, 82, 95, 96, 97, 98, 102, 106, 113, 115, 117, 119, 127], "mathcal": 9, "mathbf": 9, "v": [9, 89, 99, 101, 102, 104, 119], "mathbb": 9, "times3": 9, "being": [9, 15, 16, 19, 46, 70, 103, 106, 127], "indic": [9, 13, 15, 16, 19, 20, 24, 45, 46, 47, 54, 62, 64, 67, 71, 72, 75, 77, 88, 89, 94, 106, 110, 113, 115, 119, 120, 121, 123, 125, 126], "seek": [9, 15, 104], "tild": 9, "underform": 9, "affin": [9, 102], "At": [9, 29], "solv": [9, 88], "constraint": [9, 52, 88], "next": [9, 15, 80, 102], "return_record": [9, 88], "_i": 9, "x": [9, 15, 16, 19, 24, 29, 72, 96, 99, 102, 104, 106, 110, 120, 121], "_1": 9, "_2": 9, "_3": 9, "_4": 9, "tetrahedron": 9, "times4": 9, "frac": 9, "sqrt": [9, 102], "lvert": 9, "rvert": 9, "tip": 9, "subtract": 9, "previou": 9, "equat": 9, "obtain": [9, 102], "begin": [9, 97], "impli": [9, 15, 16], "now": [9, 105], "energi": 9, "directli": [9, 15, 16, 28, 58, 67, 71, 80, 95, 98], "term": [9, 88, 106], "e_c": 9, "equal": [9, 15, 16, 19, 47, 80, 81, 97, 101, 102, 104, 117], "error": [9, 15, 16, 17, 27, 29, 56, 88, 102, 106], "weight": [9, 13, 15, 16, 88, 94, 101, 102], "boldsymbol": 9, "alpha": [9, 72, 101, 102, 117], "limit": [9, 54, 101, 104], "n_": 9, "ident": [9, 15, 16, 47, 70, 71, 81, 88, 95, 98, 99, 102, 106, 126], "e_i": 9, "_": 9, "stiff": 9, "e_": 9, "adj": 9, "argument": [9, 15, 16, 19, 26, 32, 33, 35, 37, 38, 41, 67, 80, 90, 95, 98, 99, 102, 103, 113, 118], "face_pairs_typ": [9, 88], "edg": [9, 13, 15, 16, 24, 25, 45, 46, 58, 60, 62, 67, 70, 71, 72, 73, 80, 86, 88, 89, 91, 95, 98, 99, 103, 106, 125], "With": [9, 15, 16, 18, 29, 47, 62, 68, 72, 92, 99, 106, 116], "consid": [9, 15, 16, 18, 19, 22, 46, 47, 50, 71, 75, 86, 88, 97, 101, 106, 115, 119], "wherea": [9, 88], "stronger": 9, "landmark": [9, 88], "consist": [9, 15, 16, 18, 21, 24, 32, 48, 58, 59, 62, 71, 76, 82], "e_l": 9, "p": [9, 11, 24, 46, 47, 69, 72, 77, 80, 85, 89, 91, 101, 102, 106, 117, 119, 125], "barycentr": [9, 15, 16, 88, 103], "respect": [9, 15, 16, 19, 45, 52, 95, 98, 102], "q_": 9, "f_i": 9, "cdot": 9, "paper": [9, 88, 103], "decid": 9, "source_landmark": [9, 88], "tupl": [9, 15, 16, 19, 20, 29, 76, 88, 90, 95, 96, 98, 99, 102, 106, 120, 121, 126], "simultan": [9, 80], "fourth": [9, 64], "min": [9, 15, 16, 20, 29, 55, 58, 62, 70, 71, 72, 82, 86, 95, 98, 106], "limits_": 9, "w_ce_c": 9, "w_ie_i": 9, "w_se_": 9, "w_le_l": 9, "w_c": 9, "w_i": 9, "w_": 9, "w_l": 9, "factor": [9, 15, 16, 29, 57, 58, 71, 72, 94, 95, 98, 102, 105, 116, 117, 120, 121, 127], "linear": [9, 97, 102, 117], "vmatrix": 9, "bmatrix": 9, "_c": 9, "_l": 9, "y": [9, 15, 16, 19, 24, 29, 72, 96, 99, 102, 106, 110, 120, 121], "l": [9, 13, 75, 104, 126], "hand": [9, 15, 16, 21], "side": [9, 15, 16, 54, 60, 72, 82, 94, 95, 98, 103, 106, 117, 120, 121, 122], "lu": 9, "th": 9, "length": [9, 13, 15, 16, 24, 25, 29, 46, 47, 52, 58, 60, 62, 70, 71, 72, 73, 75, 80, 82, 83, 89, 94, 95, 96, 98, 102, 103, 106, 120, 121, 122, 123, 125, 126], "five": 9, "float": [9, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 29, 34, 35, 36, 39, 45, 46, 47, 48, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 85, 86, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 110, 113, 115, 116, 117, 119, 120, 121, 122, 125, 127], "wc_1": 9, "wi_1": 9, "ws_1": 9, "wl_1": 9, "wn_1": 9, "wc_n": 9, "wi_n": 9, "ws_n": 9, "wl_n": 9, "wn_n": 9, "w_n": 9, "noisi": [9, 88, 101], "incomplet": 9, "lead": [9, 15, 16, 80, 120, 121, 126], "bad": [9, 106], "remedi": 9, "issu": [9, 15, 16, 80], "greater": [9, 19, 25, 97, 117], "threshold": [9, 15, 16, 22, 70, 81, 83, 88, 106, 117], "distance_threshold": [9, 88], "multipli": [9, 22, 99, 102, 105, 106, 117], "second": [9, 19, 20, 72, 80, 102, 106, 123], "coincid": 9, "power": [9, 29, 46, 70, 90, 119], "eventu": [9, 24], "left": [9, 62, 99, 102, 122, 124], "ll": 9, "d_": 9, "max": [9, 15, 16, 29, 45, 46, 47, 55, 58, 62, 70, 71, 72, 82, 86, 95, 98, 106, 126], "_v": 9, "everywher": 9, "els": [9, 76, 88, 103, 106, 107, 126], "mention": 9, "abov": [9, 15, 16, 33, 52, 70, 82], "nbstep": 9, "notat": 9, "detail": [9, 23, 25, 29, 48, 52, 58, 71, 123], "unlik": [9, 15, 16, 46], "map": [9, 15, 16, 19, 88, 99, 106, 117, 123, 126], "express": 9, "homogen": [9, 15, 16, 18, 20, 45, 48, 58, 70, 71, 72, 75, 80, 81, 82, 90, 94, 95, 98, 99, 102, 120, 121, 127], "formul": 9, "gamma": [9, 88, 102], "skew": [9, 88, 95, 96], "_j": 9, "absenc": 9, "framework": 9, "rewritten": 9, "explain": [9, 88, 102], "link": 9, "subject": [9, 88], "yet": [9, 102], "outer": [9, 24], "inner": [9, 24, 102], "similar": [9, 102, 106], "until": [9, 15, 16, 19, 75, 80, 89], "converg": 9, "reach": [9, 83, 97], "As": [9, 97, 103], "dictat": 9, "max_iter_1": 9, "max_iter_n": 9, "last": [9, 19, 47, 62, 91, 99, 102, 106], "integ": [9, 47, 70, 94, 104, 106, 115, 123, 125, 126], "n_i": 9, "maximum": [9, 15, 16, 18, 22, 47, 52, 58, 60, 70, 71, 72, 75, 79, 80, 85, 88, 89, 90, 102, 117, 123, 126], "initi": [9, 15, 16, 20, 33, 52, 80, 88, 92, 95, 96, 98, 102, 106, 110, 117, 127], "while": [9, 13, 57, 97, 126], "2_": 9, "epsilon": [9, 70, 102, 106], "contrast": 9, "onc": [9, 15, 18, 19, 47, 70, 95, 98, 106], "involv": 9, "implicitli": 9, "act": [9, 97], "cost": [9, 15, 16, 88, 122], "tend": [9, 88], "smoother": [9, 88], "frequenc": 9, "advis": 9, "paramet": [9, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 108, 109, 110, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127], "suit": 9, "appear": [9, 15, 16, 19, 46, 47], "tune": [9, 15, 16, 21, 88], "found": [9, 88], "borrow": 9, "mickar": 9, "nonrigid_icp": 9, "saikiran321": 9, "1999": 9, "blanz": 9, "vetter": 9, "synthesi": 9, "Of": [9, 72, 99, 120, 121], "space": [9, 12, 15, 16, 18, 24, 25, 44, 54, 56, 58, 59, 60, 62, 70, 71, 72, 73, 75, 76, 77, 79, 80, 82, 83, 85, 86, 88, 89, 91, 94, 95, 96, 97, 98, 102, 103, 106, 120, 121, 122, 125, 127], "human": 9, "reconstruct": [9, 15, 16, 47], "parameter": [9, 82], "scan": 9, "variou": [10, 28, 90, 119, 123, 126], "load_mesh": [10, 12, 15, 28, 33], "raw": [10, 29], "intact": 10, "disabl": [10, 117], "divid": [10, 15, 16, 89, 102, 106], "7792407744466932": 10, "93059627e": 10, "00": 10, "43877613e": 10, "03": [10, 102], "49424850e": 10, "01": [10, 72, 75, 95, 96], "19191960e": 10, "25194047e": 10, "04": [10, 24], "62344872e": 10, "1722": 10, "3476": 10, "trackedarrai": [10, 15, 16, 19], "36363514": 10, "34704237": 10, "98829165": 10, "375": 10, "26570846": 10, "8878505": 10, "37566008": 10, "0408668": 10, "34569611": 10, "27600506": 10, "89683633": 10, "04235657": 10, "89994067": 10, "36816123": 10, "23358958": 10, "13047559": 10, "17": [10, 102], "18750000000002": 10, "28": [10, 38, 102], "558780321594202": 10, "95": 10, "89438997522058": 10, "ray_origin": [11, 85, 86], "ray_direct": [11, 85, 86], "docstr": 11, "intersects_loc": [11, 15, 84, 85, 86], "__doc__": 11, "hit": [11, 12, 58, 70, 71, 72, 85, 86], "nn": 11, "parametersn": 11, "floatn": 11, "raysn": 11, "direct": [11, 15, 16, 46, 47, 54, 58, 62, 69, 71, 72, 74, 75, 80, 82, 83, 85, 86, 91, 95, 96, 97, 98, 99, 102, 122], "raysnn": 11, "returnsn": 11, "sequenc": [11, 15, 16, 17, 19, 46, 47, 50, 54, 71, 72, 77, 83, 85, 86, 95, 98, 99, 102, 106, 126], "pointsn": 11, "index_rai": [11, 85, 86], "intn": 11, "rayn": 11, "index_tri": [11, 85, 86], "facesn": 11, "coordinatesloc": 11, "stack": [11, 72, 106], "segment": [11, 15, 22, 24, 25, 54, 58, 59, 61, 62, 64, 66, 67, 71, 72, 74, 76, 77, 82, 106], "path3d": [11, 13, 15, 16, 24, 32, 33, 58, 60, 66, 67, 71, 78, 82, 90, 95, 98], "ray_visu": 11, "load_path": [11, 13, 15, 58, 63, 66], "hstack": 11, "reshap": [11, 15, 96, 102, 120, 123], "unmerg": 11, "unmerge_vertic": [11, 15, 16], "white": [11, 13], "255": [11, 13, 29, 126], "demonstr": 12, "commonli": [12, 113, 115], "linestr": [12, 24, 67], "pylab": 12, "config": 12, "inlinebackend": 12, "figure_format": 12, "deprec": [12, 15, 16, 19, 46, 106], "popul": [12, 32], "namespac": [12, 15, 92], "filenam": [12, 15, 16, 31, 65, 80, 93], "plane_origin": [12, 15, 16, 54, 60, 80], "centroid": [12, 15, 16, 58, 71, 72, 80, 95, 98, 106], "plane_norm": [12, 15, 16, 54, 60, 69, 80], "path2d": [12, 15, 16, 32, 33, 58, 60, 64, 66, 67, 68, 70, 71, 73, 76, 77, 78, 90, 95, 98], "easili": [12, 27], "slice_2d": 12, "to_3d": [12, 15, 16, 54, 58, 71], "to_planar": [12, 15, 58, 71], "bunch": 12, "parallel": [12, 15, 16, 46, 48, 52, 54, 69, 80, 83, 102], "printer": 12, "section_multiplan": [12, 15, 16], "evenli": [12, 58, 60, 71, 72, 77, 94, 106], "chunk": [12, 64], "along": [12, 13, 15, 16, 19, 24, 45, 46, 48, 62, 72, 74, 75, 76, 77, 80, 82, 85, 102, 106, 123], "minz": [12, 29], "maxz": [12, 29], "z_extent": 12, "125": [12, 22], "eg": [12, 15, 16, 31, 33, 38, 47, 90, 95, 98, 99, 105, 106], "inch": [12, 15, 16, 95, 98, 105], "z_level": 12, "arang": [12, 77, 82], "304": 12, "entiti": [12, 15, 58, 64, 67, 71, 76, 77, 115], "9": [12, 15, 16, 19, 29, 41, 47, 52, 88, 102, 126], "636": 12, "616": 12, "610": 12, "739": 12, "547": 12, "735": 12, "18": 12, "186": 12, "put": [12, 15, 19, 32, 47, 62, 105], "combin": [12, 15, 16, 47, 88, 106, 117, 119], "local": [12, 15, 16, 19, 33, 92, 97, 117], "lib": [12, 117], "python3": [12, 117], "site": [12, 56, 92, 117], "predic": 12, "526": 12, "runtimewarn": 12, "invalid": [12, 29, 32, 57, 71], "encount": [12, 106], "polygons_ful": [12, 15, 58, 71], "class": [12, 15, 16, 19, 20, 22, 27, 29, 33, 45, 51, 57, 58, 59, 62, 70, 71, 77, 79, 80, 82, 83, 85, 86, 92, 95, 96, 97, 98, 99, 102, 103, 104, 106, 110, 113, 114, 115, 117, 119, 120, 121, 123, 126, 127], "__class__": 12, "multilinestr": [12, 15, 66, 67], "red": [12, 113, 115], "green": [12, 113, 115], "ax": [12, 15, 16, 29, 48, 72, 88, 102, 123], "gca": 12, "h": [12, 52, 86, 101], "geom": 12, "medial": [12, 58, 71, 72], "medial_axi": [12, 15, 58, 71, 72], "travel": [13, 80], "search": [13, 15, 16, 18, 29, 46, 86, 88], "nx": [13, 15, 16, 46, 77], "edges_uniqu": [13, 15, 16], "actual": [13, 15, 16, 19, 27, 71, 100, 106, 127], "edges_unique_length": [13, 15, 16], "zip": [13, 15, 30, 41, 92, 106], "add_edg": [13, 15, 95, 99], "shortest_path": [13, 15, 95, 99], "path_visu": 13, "fuze": 14, "664": 14, "binvox": [15, 28, 120, 121], "rle_data": [15, 28, 29, 123, 126], "supported_input_typ": [15, 28, 29], "supported_output_typ": [15, 28, 29], "__init__": [15, 16, 19, 20, 22, 27, 28, 29, 30, 33, 49, 51, 58, 59, 62, 70, 71, 77, 79, 80, 82, 83, 84, 85, 86, 92, 95, 96, 97, 98, 99, 102, 103, 106, 108, 110, 113, 115, 117, 119, 120, 121, 123, 127], "file_typ": [15, 16, 28, 29, 31, 33, 34, 37, 57, 65, 66, 68, 71, 80, 95, 98, 106, 120, 121], "binvox_byt": [15, 28, 29], "binvox_head": [15, 28, 29], "export_binvox": [15, 28, 29], "load_binvox": [15, 28, 29], "parse_binvox": [15, 28, 29], "parse_binvox_head": [15, 28, 29], "voxel_from_binvox": [15, 28, 29], "voxelize_mesh": [15, 28, 29], "export_collada": [15, 28, 30], "load_collada": [15, 28, 30], "load_za": [15, 28, 30], "export_dict": [15, 28, 31, 58, 63, 65], "export_dict64": [15, 28, 31], "export_mesh": [15, 28, 31], "export_scen": [15, 28, 31], "scene_to_dict": [15, 28, 31], "export_glb": [15, 28, 32], "export_gltf": [15, 28, 32], "get_schema": [15, 28, 32, 93], "load_glb": [15, 28, 32], "load_gltf": [15, 28, 32], "available_format": [15, 28, 33], "load_compress": [15, 28, 33], "load_kwarg": [15, 28, 33, 35, 40], "mesh_format": [15, 28, 33], "parse_file_arg": [15, 28, 33], "misc": [15, 28, 29, 58, 63], "load_dict": [15, 28, 34], "load_meshio": [15, 28, 34], "export_obj": [15, 28, 35], "load_obj": [15, 28, 35], "parse_mtl": [15, 28, 35], "export_off": [15, 28, 36], "load_off": [15, 28, 36], "openctm": [15, 28], "load_ctm": [15, 28, 37], "export_draco": [15, 28, 38], "export_pli": [15, 28, 38], "load_draco": [15, 28, 38], "load_pli": [15, 28, 38], "headererror": [15, 28, 39], "export_stl": [15, 28, 39], "export_stl_ascii": [15, 28, 39], "load_stl": [15, 28, 39], "load_stl_ascii": [15, 28, 39], "load_stl_binari": [15, 28, 39], "threedxml": [15, 28], "load_3dxml": [15, 28, 40], "print_el": [15, 28, 40], "threemf": [15, 28], "export_3mf": [15, 28, 41], "load_3mf": [15, 28, 41], "export_urdf": [15, 28, 42], "load_xaml": [15, 28, 43], "export_xyz": [15, 28, 44], "load_xyz": [15, 28, 44], "meshscript": [15, 49, 51], "load_gmsh": [15, 49, 52], "to_volum": [15, 49, 52], "scad": [15, 49], "interface_scad": [15, 49, 53], "bulge_to_arc": [15, 58, 63, 64], "convert_ent": [15, 58, 63, 64], "export_dxf": [15, 58, 63, 64], "get_kei": [15, 58, 63, 64], "load_dxf": [15, 58, 63, 64], "export_path": [15, 58, 63, 65], "path_format": [15, 58, 63, 66], "dict_to_path": [15, 58, 63, 67], "edges_to_path": [15, 58, 63, 67], "faces_to_path": [15, 58, 63, 67], "lines_to_path": [15, 58, 63, 67], "linestrings_to_path": [15, 58, 63, 67], "polygon_to_path": [15, 58, 63, 67], "svg_io": [15, 58, 63], "export_svg": [15, 58, 63, 68], "svg_to_path": [15, 58, 63, 68], "transform_to_matric": [15, 58, 63, 68], "arc": [15, 22, 58, 62, 64, 71, 76, 77, 102], "arcinfo": [15, 58, 59], "radiu": [15, 16, 18, 22, 24, 25, 46, 47, 48, 56, 58, 59, 60, 62, 72, 75, 76, 80, 82, 83, 94, 95, 97, 102, 122], "span": [15, 16, 22, 46, 58, 59, 60, 76], "arc_cent": [15, 58, 59], "discretize_arc": [15, 58, 59], "to_threepoint": [15, 58, 59], "box_outlin": [15, 58, 60], "circl": [15, 22, 23, 56, 58, 59, 60, 62, 71, 76, 82], "circle_pattern": [15, 58, 60], "binomi": [15, 58, 61], "discretize_bezi": [15, 58, 61], "discretize_bsplin": [15, 58, 61], "is_valid": [15, 58, 62, 95, 98], "bspline": [15, 58, 62, 71, 76], "to_dict": [15, 16, 58, 62, 71, 82], "bezier": [15, 58, 61, 62], "end_point": [15, 25, 58, 62], "explod": [15, 58, 62, 71, 72, 95, 98], "layer": [15, 58, 62, 64, 68, 71], "metadata": [15, 16, 33, 58, 62, 64, 71, 80, 82, 95, 98, 99, 105, 107, 120, 121, 127], "revers": [15, 16, 46, 58, 62, 77, 106, 126], "line_lin": [15, 58, 69], "pack": [15, 58, 113, 115, 117], "rectanglebin": [15, 58, 70], "insert": [15, 19, 52, 58, 64, 70, 91], "bounds_overlap": [15, 58, 70], "rectangles_singl": [15, 58, 70], "roll_transform": [15, 58, 70], "apply_lay": [15, 58, 71], "convert_unit": [15, 16, 58, 71, 95, 98], "dangl": [15, 58, 71], "fill_gap": [15, 58, 71, 74], "is_clos": [15, 58, 64, 71], "is_empti": [15, 16, 19, 57, 58, 71, 80, 95, 98, 120, 121, 123], "kdtree": [15, 16, 58, 71, 80], "merge_vertic": [15, 16, 47, 58, 71, 80], "referenced_vertic": [15, 16, 58, 71], "remove_duplicate_ent": [15, 58, 71], "remove_ent": [15, 58, 71], "remove_invalid": [15, 58, 71], "remove_unreferenced_vertic": [15, 16, 58, 71], "replace_vertex_refer": [15, 58, 71], "rezero": [15, 16, 58, 71, 95, 98], "vertex_graph": [15, 58, 71, 77], "vertex_nod": [15, 58, 71], "apply_obb": [15, 57, 58, 71], "apply_scal": [15, 57, 58, 71, 120, 127], "area": [15, 16, 19, 25, 46, 58, 71, 72, 79, 82, 94, 95, 98, 103, 106], "body_count": [15, 16, 58, 71], "connected_path": [15, 58, 71], "enclosur": [15, 58, 71], "enclosure_direct": [15, 58, 71], "enclosure_shel": [15, 58, 71], "extrud": [15, 24, 58, 71, 75, 82], "identifier_hash": [15, 16, 21, 58, 71], "obb": [15, 57, 58, 70, 71, 72, 82], "path_valid": [15, 58, 71], "plot_discret": [15, 58, 71], "plot_ent": [15, 58, 71], "polygons_clos": [15, 58, 71], "simplifi": [15, 16, 22, 58, 71], "simplify_splin": [15, 58, 71, 76], "edges_to_polygon": [15, 58, 72], "enclosure_tre": [15, 58, 72], "paths_to_polygon": [15, 58, 72], "polygon_bound": [15, 58, 72], "polygon_obb": [15, 58, 72], "polygon_scal": [15, 58, 72], "polygons_obb": [15, 58, 72], "random_polygon": [15, 58, 72], "repair_invalid": [15, 58, 72], "resample_boundari": [15, 58, 72], "second_mo": [15, 58, 72], "stack_boundari": [15, 58, 72], "transform_polygon": [15, 58, 72], "clean": [15, 58, 71, 75, 120, 121], "colinear_pair": [15, 58, 75], "parameters_to_seg": [15, 58, 75], "resampl": [15, 58, 75, 76, 77, 119], "segments_to_paramet": [15, 58, 75], "to_svg": [15, 58, 75], "fit_circle_check": [15, 58, 76], "is_circl": [15, 58, 76], "merge_colinear": [15, 58, 76], "points_to_spline_ent": [15, 58, 76], "resample_splin": [15, 58, 76], "simplify_bas": [15, 58, 76], "travers": [15, 46, 58, 80, 91, 99], "pathsampl": [15, 58, 77], "truncat": [15, 24, 58, 77, 102, 104], "closed_path": [15, 58, 77], "discretize_path": [15, 58, 77], "resample_path": [15, 58, 77], "vertex_to_entity_path": [15, 58, 77], "ray_pyembre": [15, 84], "raymeshintersector": [15, 84, 85, 86], "contains_point": [15, 84, 85, 86], "intersects_ani": [15, 84, 85, 86], "intersects_first": [15, 84, 85, 86], "intersects_id": [15, 84, 85, 86], "ray_triangl": [15, 84], "ray_bound": [15, 84, 86], "ray_triangle_candid": [15, 84, 86], "ray_triangle_id": [15, 84, 86], "ray_util": [15, 84], "resourc": [15, 16, 82, 92], "camera": [15, 24, 95, 98, 110], "k": [15, 80, 83, 89, 95, 96], "focal": [15, 95, 96], "fov": [15, 24, 95, 96, 98], "look_at": [15, 95, 96], "resolut": [15, 26, 58, 71, 72, 73, 90, 95, 96, 98, 122], "to_rai": [15, 95, 96], "camera_to_rai": [15, 95, 96], "ray_pixel_coord": [15, 95, 96], "directionallight": [15, 95, 97], "intens": [15, 95, 97], "pointlight": [15, 95, 97], "spotlight": [15, 95, 97], "innerconeangl": [15, 95, 97], "outerconeangl": [15, 95, 97], "autolight": [15, 95, 97], "add_geometri": [15, 95, 98], "bounds_corn": [15, 95, 98], "camera_rai": [15, 95, 98], "camera_transform": [15, 95, 96, 98], "dedupl": [15, 70, 95, 98, 117], "delete_geometri": [15, 95, 98], "dump": [15, 16, 29, 95, 98, 106], "duplicate_nod": [15, 95, 98], "geometry_identifi": [15, 95, 98], "has_camera": [15, 95, 98], "moment_inertia_fram": [15, 16, 95, 98], "save_imag": [15, 95, 98], "set_camera": [15, 95, 98], "strip_visu": [15, 95, 98], "subscen": [15, 95, 98], "triangles_nod": [15, 95, 98], "append_scen": [15, 95, 98], "split_scen": [15, 95, 98], "enforcedforest": [15, 95, 99], "children": [15, 95, 98, 99], "remove_nod": [15, 95, 99], "successor": [15, 95, 99], "scenegraph": [15, 95, 98, 99], "clear": [15, 16, 19, 80, 82, 95, 99], "from_edgelist": [15, 16, 95, 99], "geometry_nod": [15, 95, 99], "nodes_geometri": [15, 95, 99], "remove_geometri": [15, 95, 99], "to_edgelist": [15, 95, 99], "to_flatten": [15, 95, 99], "to_gltf": [15, 95, 99], "to_networkx": [15, 95, 99], "updat": [15, 16, 19, 71, 95, 98, 99, 102, 110], "kwargs_to_matrix": [15, 95, 99], "in_notebook": [15, 108, 109], "scene_to_html": [15, 108, 109], "scene_to_notebook": [15, 108, 109], "trackbal": [15, 102, 108], "state_pan": [15, 108, 110], "state_rol": [15, 108, 110], "state_rot": [15, 108, 110], "state_zoom": [15, 108, 110], "down": [15, 102, 108, 110, 123], "pose": [15, 16, 108, 110], "resiz": [15, 108, 110, 119], "scroll": [15, 108, 110], "set_stat": [15, 108, 110], "update_fac": [15, 16, 113, 114, 115, 119], "update_vertic": [15, 16, 113, 114, 115, 119], "colorvisu": [15, 16, 82, 95, 98, 113, 115, 118, 119], "face_subset": [15, 113, 115, 119], "main_color": [15, 113, 115, 117], "to_textur": [15, 113, 115], "transpar": [15, 113, 115, 117], "vertex_color": [15, 16, 113, 115, 118], "vertexcolor": [15, 113, 115], "color_to_uv": [15, 113, 115], "colors_to_materi": [15, 113, 115], "face_to_vertex_color": [15, 113, 115], "hex_to_rgba": [15, 113, 115], "linear_color_map": [15, 113, 115], "to_float": [15, 113, 115], "to_rgba": [15, 113, 115], "uv_to_color": [15, 113, 115], "uv_to_interpolated_color": [15, 113, 115], "vertex_to_face_color": [15, 113, 115], "gloss": [15, 113], "specular_to_pbr": [15, 113, 116], "multimateri": [15, 113, 117], "to_pbr": [15, 113, 117], "pbrmateri": [15, 113, 116, 117], "alphacutoff": [15, 113, 117], "alphamod": [15, 113, 117], "basecolorfactor": [15, 113, 116, 117], "basecolortextur": [15, 113, 116, 117], "doublesid": [15, 113, 117], "emissivefactor": [15, 113, 117], "emissivetextur": [15, 113, 117], "metallicfactor": [15, 113, 116, 117], "metallicroughnesstextur": [15, 113, 116, 117], "normaltextur": [15, 113, 117], "occlusiontextur": [15, 113, 117], "roughnessfactor": [15, 113, 116, 117], "to_color": [15, 113, 117, 119], "to_simpl": [15, 113, 117], "simplemateri": [15, 113, 115, 117, 119], "glossi": [15, 113, 116, 117], "to_obj": [15, 113, 117], "color_imag": [15, 113, 117], "empty_materi": [15, 113, 117], "create_visu": [15, 113, 118], "texturevisu": [15, 16, 82, 113, 115, 118, 119], "power_res": [15, 70, 113, 119], "unmerge_fac": [15, 113, 119], "voxelgrid": [15, 16, 29, 120, 121, 122], "as_box": [15, 120, 121], "element_volum": [15, 120, 121], "filled_count": [15, 120, 121], "hollow": [15, 120, 121], "indices_to_point": [15, 120, 121, 125], "is_fil": [15, 106, 120, 121], "marching_cub": [15, 120, 121, 125], "pitch": [15, 16, 58, 71, 73, 102, 120, 121, 122, 125, 127], "points_to_indic": [15, 120, 121, 125], "revoxel": [15, 120, 121], "sparse_indic": [15, 120, 121, 123, 125], "strip": [15, 95, 98, 106, 120, 121, 123, 126], "local_voxel": [15, 120, 122], "binaryrunlengthencod": [15, 120, 123], "binary_run_length_data": [15, 120, 123], "from_brl": [15, 120, 123], "from_dens": [15, 120, 123], "from_rl": [15, 120, 123], "gather": [15, 33, 120, 123, 126], "gather_nd": [15, 120, 123], "mask": [15, 16, 54, 71, 80, 106, 113, 114, 115, 117, 119, 120, 123, 126], "run_length_data": [15, 120, 123], "sorted_gath": [15, 120, 123], "sparse_compon": [15, 120, 123], "sparse_valu": [15, 120, 123], "denseencod": [15, 120, 123], "flat": [15, 16, 19, 29, 72, 90, 99, 102, 106, 120, 123], "get_valu": [15, 120, 123], "flip": [15, 91, 102, 120, 123], "mutabl": [15, 16, 19, 82, 101, 120, 123], "ndim": [15, 102, 120, 123], "transpos": [15, 102, 120, 123], "flattenedencod": [15, 120, 123], "flippedencod": [15, 120, 123], "lazyindexmap": [15, 120, 123], "runlengthencod": [15, 29, 120, 123], "shapedencod": [15, 120, 123], "sparsebinaryencod": [15, 120, 123], "sparseencod": [15, 120, 123], "transposedencod": [15, 120, 123], "perm": [15, 120, 123], "morphologi": [15, 106, 120, 121], "binary_clos": [15, 120, 124], "binary_dil": [15, 120, 124], "boolean_spars": [15, 120, 125], "fill_bas": [15, 120, 125], "fill_orthograph": [15, 120, 125], "fill_voxel": [15, 120, 125], "matrix_to_marching_cub": [15, 120, 125], "matrix_to_point": [15, 120, 125], "multibox": [15, 120, 125], "points_to_marching_cub": [15, 120, 125], "sparse_to_matrix": [15, 120, 125], "strip_arrai": [15, 120, 125], "runlength": [15, 120, 123], "brle_gather_1d": [15, 120, 126], "brle_gatherer_1d": [15, 120, 126], "brle_length": [15, 120, 126], "brle_logical_not": [15, 120, 126], "brle_mask": [15, 120, 126], "brle_revers": [15, 120, 126], "brle_strip": [15, 120, 126], "brle_to_brl": [15, 120, 126], "brle_to_dens": [15, 120, 126], "brle_to_rl": [15, 120, 126], "brle_to_spars": [15, 120, 126], "dense_to_brl": [15, 120, 126], "dense_to_rl": [15, 120, 126], "merge_brle_length": [15, 120, 126], "merge_rle_length": [15, 120, 126], "rle_gather_1d": [15, 120, 126], "rle_gatherer_1d": [15, 120, 126], "rle_length": [15, 120, 126], "rle_mask": [15, 120, 126], "rle_revers": [15, 120, 126], "rle_strip": [15, 120, 126], "rle_to_brl": [15, 120, 126], "rle_to_dens": [15, 120, 126], "rle_to_rl": [15, 120, 126], "rle_to_spars": [15, 120, 126], "sorted_brle_gather_1d": [15, 120, 126], "sorted_rle_gather_1d": [15, 120, 126], "split_long_brle_length": [15, 120, 126], "split_long_rle_length": [15, 120, 126], "apply_transl": [15, 57, 120, 127], "inverse_matrix": [15, 102, 120, 127], "inverse_transform_point": [15, 120, 127], "is_ident": [15, 120, 127], "transform_point": [15, 102, 120, 127], "unit_volum": [15, 120, 127], "area_fac": [15, 16], "as_open3d": [15, 16], "compute_stable_pos": [15, 16, 81], "convex_decomposit": [15, 16, 26], "densiti": [15, 16, 70, 81, 103], "edges_fac": [15, 16], "edges_sort": [15, 16, 46], "edges_sorted_tre": [15, 16], "edges_spars": [15, 16], "edges_unique_invers": [15, 16], "eval_cach": [15, 16], "face_adjac": [15, 16, 23, 46], "face_adjacency_angl": [15, 16], "face_adjacency_convex": [15, 16], "face_adjacency_edg": [15, 16], "face_adjacency_edges_tre": [15, 16], "face_adjacency_project": [15, 16], "face_adjacency_radiu": [15, 16, 46], "face_adjacency_span": [15, 16], "face_adjacency_tre": [15, 16], "face_adjacency_unshar": [15, 16, 46], "face_angl": [15, 16, 45], "face_angles_spars": [15, 16, 25], "face_neighborhood": [15, 16, 46], "face_norm": [15, 16, 34, 39, 45, 82], "faces_spars": [15, 16, 45, 46], "faces_unique_edg": [15, 16], "facets_area": [15, 16], "facets_boundari": [15, 16], "facets_norm": [15, 16], "facets_on_hul": [15, 16], "facets_origin": [15, 16], "fill_hol": [15, 16, 91], "fix_norm": [15, 16, 91], "integral_mean_curvatur": [15, 16], "invert": [15, 16, 91, 102], "is_convex": [15, 16, 23], "is_volum": [15, 16], "is_winding_consist": [15, 16], "mass_properti": [15, 16, 103], "nondegenerate_fac": [15, 16], "outlin": [15, 16, 23, 58, 60, 67, 71, 72, 73, 82], "principal_inertia_compon": [15, 16], "principal_inertia_transform": [15, 16], "principal_inertia_vector": [15, 16], "remove_degenerate_fac": [15, 16], "remove_duplicate_fac": [15, 16], "remove_infinite_valu": [15, 16], "simplify_quadratic_decim": [15, 16], "simplify_quadric_decim": [15, 16], "slice_plan": [15, 16], "smooth_shad": [15, 16, 46], "subdivide_loop": [15, 16, 89], "subdivide_to_s": [15, 16, 89], "submesh": [15, 16, 106], "symmetri": [15, 16, 48, 102], "symmetry_axi": [15, 16], "symmetry_sect": [15, 16], "triangles_cent": [15, 16], "triangles_cross": [15, 16], "triangles_tre": [15, 16], "unique_fac": [15, 16], "vertex_adjacency_graph": [15, 16, 46], "vertex_defect": [15, 16, 25], "vertex_degre": [15, 16], "vertex_fac": [15, 16, 45], "vertex_neighbor": [15, 16], "vertex_norm": [15, 16, 34, 38, 45, 82, 101], "boolean_manifold": [15, 17], "boolean_scad": [15, 17], "corner": [15, 18, 24, 45, 77, 95, 98], "minimum_cylind": [15, 18], "oriented_bound": [15, 18, 57], "oriented_bounds_2d": [15, 18], "to_ext": [15, 18], "delet": [15, 19, 20, 95, 98, 99], "id_set": [15, 19], "datastor": [15, 19, 127], "diskcach": [15, 19], "byteswap": [15, 19], "itemset": [15, 19], "partit": [15, 19, 70, 102], "setflag": [15, 19], "sort": [15, 16, 19, 46, 55, 80, 81, 126], "cache_decor": [15, 19], "hash_fallback": [15, 19], "sha256": [15, 16, 19, 21, 58, 71], "tracked_arrai": [15, 19], "collisionmanag": [15, 20], "add_object": [15, 20], "in_collision_intern": [15, 20], "in_collision_oth": [15, 20], "in_collision_singl": [15, 20], "min_distance_intern": [15, 20], "min_distance_oth": [15, 20], "min_distance_singl": [15, 20], "remove_object": [15, 20], "set_transform": [15, 20], "contactdata": [15, 20], "depth": [15, 20, 46, 102, 106], "distancedata": [15, 20], "mesh_to_bvh": [15, 20], "mesh_to_convex": [15, 20], "scene_to_collis": [15, 20], "comparison": [15, 62, 88], "identifier_simpl": [15, 21], "constant": [15, 77, 101], "resolutionpath": [15, 22], "max_sect": [15, 22], "min_sect": [15, 22], "seg_angl": [15, 22, 76], "seg_frac": [15, 22, 76], "tolerancemesh": [15, 22], "facet_threshold": [15, 22], "strict": [15, 22, 99], "zero": [15, 16, 22, 25, 45, 46, 47, 55, 72, 74, 75, 76, 82, 86, 97, 99, 103, 106, 120, 121, 123, 126], "tolerancepath": [15, 22], "aspect_frac": [15, 22], "radius_frac": [15, 22, 76], "radius_max": [15, 22, 76], "radius_min": [15, 22, 76], "seg_angle_frac": [15, 22], "seg_angle_min": [15, 22], "tangent": [15, 22, 64, 76, 83], "log_tim": [15, 22], "adjacency_project": [15, 23], "hull_point": [15, 23], "annulu": [15, 24], "camera_mark": [15, 24], "capsul": [15, 24, 82], "cone": [15, 24, 97], "extrude_polygon": [15, 24], "extrude_triangul": [15, 24], "icosahedron": [15, 24], "random_soup": [15, 24], "revolv": [15, 16, 24, 110], "sweep_polygon": [15, 24], "toru": [15, 24], "triangulate_polygon": [15, 24, 54, 58, 71], "truncated_pr": [15, 24], "uv_spher": [15, 24], "line_ball_intersect": [15, 25], "exceptionwrapp": [15, 27], "align_vector": [15, 45], "faces_to_edg": [15, 45], "index_spars": [15, 45], "mean_vertex_norm": [15, 45], "plane_transform": [15, 45], "triangulate_quad": [15, 45], "vector_angl": [15, 45], "vertex_face_indic": [15, 45], "weighted_vertex_norm": [15, 45], "connected_component_label": [15, 46], "connected_compon": [15, 16, 46], "edges_to_coo": [15, 46], "fill_travers": [15, 46], "graph_to_svg": [15, 46], "multigraph_collect": [15, 46], "multigraph_path": [15, 46], "neighbor": [15, 16, 46, 88, 89, 101], "shared_edg": [15, 46], "split_travers": [15, 46], "boolean_row": [15, 47], "cluster": [15, 47, 80], "float_to_int": [15, 47], "group_dist": [15, 47], "group_min": [15, 47], "group_row": [15, 47], "group_vector": [15, 47], "hashable_row": [15, 46, 47], "merge_run": [15, 47], "unique_bincount": [15, 47], "unique_float": [15, 47], "unique_ord": [15, 47], "unique_row": [15, 47], "unique_value_in_row": [15, 47], "cylinder_inertia": [15, 48], "principal_axi": [15, 48], "radial_symmetri": [15, 48], "scene_inertia": [15, 48], "sphere_inertia": [15, 48], "transform_inertia": [15, 48], "mesh_multiplan": [15, 54], "mesh_plan": [15, 54], "plane_lin": [15, 54], "planes_lin": [15, 54], "slice_faces_plan": [15, 54], "slice_mesh_plan": [15, 54], "interv": [15, 70, 102], "nsphere": 15, "fit_nspher": [15, 56], "is_nspher": [15, 56], "minimum_nspher": [15, 56], "geometry3d": [15, 16, 57, 80, 95, 98], "bounding_primit": [15, 57], "permut": [15, 92], "nois": [15, 79], "k_mean": [15, 80], "major_axi": [15, 80], "plane_fit": [15, 80], "plot_point": [15, 80], "point_plane_dist": [15, 80], "project_to_plan": [15, 80], "radial_sort": [15, 80], "remove_clos": [15, 80], "tsp": [15, 80], "as_outlin": [15, 82], "is_ori": [15, 82], "sample_grid": [15, 82], "slide": [15, 82], "to_mesh": [15, 82], "primitiveattribut": [15, 82], "proxim": [15, 80, 88, 122], "nearestqueryresult": [15, 80, 83], "has_norm": [15, 83], "proximityqueri": [15, 83], "signed_dist": [15, 83], "closest_point_na": [15, 83], "longest_rai": [15, 83], "max_tangent_spher": [15, 83], "nearby_fac": [15, 83], "thick": [15, 83], "registr": 15, "mesh_oth": [15, 88], "nricp_amberg": [15, 88], "nricp_sumn": [15, 88], "procrust": [15, 88], "remesh": [15, 79], "colors_to_gl": [15, 90], "convert_to_vertexlist": [15, 90], "light_to_gl": [15, 90], "material_to_textur": [15, 90], "matrix_to_gl": [15, 90], "mesh_to_vertexlist": [15, 90], "path_to_vertexlist": [15, 90], "points_to_vertexlist": [15, 90], "vector_to_gl": [15, 90], "broken_fac": [15, 91], "fix_invers": [15, 91], "fix_wind": [15, 91], "stitch": [15, 91], "resolv": [15, 29, 30, 31, 32, 33, 35, 38, 93, 100], "filepathresolv": [15, 92], "kei": [15, 16, 18, 19, 34, 35, 39, 46, 62, 64, 67, 72, 92, 95, 98, 99, 100, 102, 103, 105, 106, 113, 115, 120, 121], "githubresolv": [15, 92], "webresolv": [15, 92], "zipresolv": [15, 92], "nearby_nam": [15, 92], "sample_surfac": [15, 94], "sample_surface_even": [15, 94], "sample_surface_spher": [15, 94], "volume_mesh": [15, 94], "volume_rectangular": [15, 94], "schema": [15, 16, 32, 82, 93], "dilate_slop": [15, 101], "filter_humphrei": [15, 101], "filter_laplacian": [15, 101], "filter_mut_dif_laplacian": [15, 101], "filter_taubin": [15, 101], "get_vertices_norm": [15, 101], "laplacian_calcul": [15, 101], "arcbal": [15, 102], "constrain": [15, 102], "place": [15, 16, 19, 32, 47, 58, 62, 70, 71, 77, 79, 80, 81, 91, 95, 98, 101, 102, 106, 120, 121, 127], "setax": [15, 102], "affine_matrix_from_point": [15, 102], "angle_between_vector": [15, 102], "arcball_constrain_to_axi": [15, 102], "arcball_map_to_spher": [15, 102], "arcball_nearest_axi": [15, 102], "clip_matrix": [15, 102], "compose_matrix": [15, 102], "concatenate_matric": [15, 102], "decompose_matrix": [15, 102], "euler_from_matrix": [15, 102], "euler_from_quaternion": [15, 102], "euler_matrix": [15, 102], "fix_rigid": [15, 102], "flips_wind": [15, 102], "identity_matrix": [15, 102], "is_rigid": [15, 102], "is_same_quaternion": [15, 102], "is_same_transform": [15, 102], "orthogonalization_matrix": [15, 102], "planar_matrix": [15, 102], "planar_matrix_to_3d": [15, 102], "projection_from_matrix": [15, 102], "projection_matrix": [15, 102], "quaternion_about_axi": [15, 102], "quaternion_conjug": [15, 102], "quaternion_from_eul": [15, 102], "quaternion_from_matrix": [15, 102], "quaternion_imag": [15, 102], "quaternion_invers": [15, 102], "quaternion_matrix": [15, 102], "quaternion_multipli": [15, 102], "quaternion_r": [15, 102], "quaternion_slerp": [15, 102], "random_quaternion": [15, 102], "random_vector": [15, 102], "reflection_from_matrix": [15, 102], "reflection_matrix": [15, 102], "rotation_from_matrix": [15, 102], "rotation_matrix": [15, 102], "scale_and_transl": [15, 102], "scale_from_matrix": [15, 102], "scale_matrix": [15, 102], "shear_from_matrix": [15, 102], "shear_matrix": [15, 102], "spherical_matrix": [15, 102], "superimposition_matrix": [15, 102], "transform_around": [15, 102], "translation_from_matrix": [15, 102], "translation_matrix": [15, 102], "unit_vector": [15, 102], "vector_norm": [15, 102], "vector_product": [15, 102], "massproperti": [15, 16, 103], "all_coplanar": [15, 103], "any_coplanar": [15, 103], "barycentric_to_point": [15, 103], "bounds_tre": [15, 103, 106], "nondegener": [15, 16, 103], "points_to_barycentr": [15, 103], "to_kwarg": [15, 103], "windings_align": [15, 103], "io": [15, 33, 104, 106, 117], "fileno": [15, 104], "flush": [15, 104], "isatti": [15, 104], "readabl": [15, 104], "readlin": [15, 104], "seekabl": [15, 104], "tell": [15, 104], "writabl": [15, 35, 104], "writelin": [15, 104], "as_integer_ratio": [15, 104], "is_integ": [15, 104], "int64": [15, 16, 45, 82, 95, 98, 104, 123, 126], "bit_count": [15, 104], "to_inch": [15, 105], "unit_convers": [15, 105], "units_from_metadata": [15, 105], "functionregistri": [15, 106], "allclos": [15, 102, 106], "append_fac": [15, 106], "array_to_encod": [15, 34, 106], "array_to_str": [15, 106], "comment_strip": [15, 106], "compress": [15, 33, 38, 41, 92, 106], "convert_lik": [15, 106], "decimal_to_digit": [15, 106], "decode_kei": [15, 106], "decode_text": [15, 106], "decompress": [15, 92, 106], "diagonal_dot": [15, 106], "distance_to_end": [15, 106], "encoded_to_arrai": [15, 34, 106], "euclidean": [15, 20, 80, 102, 106], "generate_basi": [15, 106], "grid_arang": [15, 106], "grid_linspac": [15, 106], "has_modul": [15, 106], "is_binary_fil": [15, 106], "is_ccw": [15, 106], "is_instance_nam": [15, 106], "is_non": [15, 106], "is_pathlib": [15, 106], "is_sequ": [15, 106], "is_shap": [15, 106], "is_str": [15, 106], "isclos": [15, 106], "jsonifi": [15, 106], "make_sequ": [15, 106], "multi_dict": [15, 106], "pairwis": [15, 20, 106], "row_norm": [15, 106], "sigfig_int": [15, 106], "sigfig_round": [15, 106], "spherical_to_vector": [15, 106], "split_extens": [15, 106], "stack_3d": [15, 106], "stack_lin": [15, 106], "structured_array_to_str": [15, 106], "to_ascii": [15, 106], "tolist": [15, 106], "triangle_fans_to_fac": [15, 106], "triangle_strips_to_fac": [15, 106], "type_bas": [15, 106], "type_nam": [15, 106], "unique_id": [15, 106], "unique_nam": [15, 106], "vector_hemispher": [15, 106], "vector_to_spher": [15, 106], "vstack_empti": [15, 106], "wrap_as_stream": [15, 106], "write_encod": [15, 106], "zero_pad": [15, 106], "fulli": [15, 58, 71, 80, 117], "hold": [15, 20, 22, 47, 58, 71, 80, 82, 86, 97, 99, 115, 117, 118], "dict": [15, 16, 18, 19, 24, 26, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 46, 54, 58, 62, 64, 65, 66, 67, 68, 70, 71, 72, 80, 82, 88, 89, 92, 93, 95, 98, 99, 103, 106, 116, 117, 120, 121], "about": [15, 16, 18, 19, 20, 22, 48, 62, 70, 71, 80, 82, 95, 97, 98, 99, 102, 110, 113, 115], "verteex": [15, 80], "self": [15, 16, 19, 25, 46, 50, 58, 62, 71, 80, 82, 95, 96, 98, 99, 113, 115, 120, 121, 127], "safe": [15, 16, 80, 95, 96], "empti": [15, 16, 19, 29, 71, 80, 82, 95, 98, 102, 106, 117, 120, 121, 122, 124], "regener": [15, 16, 80, 82], "file_obj": [15, 16, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 57, 64, 65, 66, 68, 71, 80, 95, 98, 106, 120, 121], "written": [15, 16, 19, 62, 80, 106], "param": [15, 26, 80, 101], "Not": [15, 16, 68, 70, 80], "observ": [15, 16, 80], "segfault": [15, 16, 80], "closer": [15, 22, 47, 80], "tol": [15, 16, 22, 38, 47, 76, 80, 83], "1e": [15, 16, 18, 22, 38, 70, 72, 75, 80, 83, 86, 88, 99, 102, 106], "input_point": [15, 80], "query_from_point": [15, 80], "base_fram": [15, 95, 98, 99], "ndarrai": [15, 16, 19, 47, 55, 58, 59, 71, 72, 75, 82, 95, 98, 102, 103, 106, 116, 117, 123], "_scalartype_co": [15, 16, 95, 98], "endpoint": [15, 24, 54, 62, 64, 71, 75, 77, 95, 98, 126], "raytrac": [15, 16, 82, 85, 95, 98], "node_nam": [15, 95, 98], "geom_nam": [15, 95, 98], "parent_node_nam": [15, 95, 98], "transformforest": [15, 95, 98, 99], "null": [15, 95, 98], "overal": [15, 59, 62, 76, 77, 89, 95, 98], "post": [15, 32, 48, 95, 98], "aabb": [15, 18, 24, 57, 62, 70, 71, 72, 86, 95, 98], "manual": [15, 76, 88, 95, 98], "ab": [15, 95, 98], "pixel": [15, 58, 71, 73, 95, 96, 98, 110, 113, 117, 119], "desir": [15, 16, 24, 71, 72, 76, 95, 98, 105, 106], "convert": [15, 16, 18, 29, 33, 39, 41, 42, 46, 52, 58, 59, 64, 68, 70, 71, 75, 76, 77, 90, 95, 98, 102, 103, 106, 108, 109, 113, 115, 116, 117, 119, 120, 121, 125, 126], "them": [15, 16, 19, 42, 45, 46, 47, 54, 55, 58, 59, 67, 71, 72, 74, 75, 77, 82, 95, 98, 99, 106, 117, 123, 125], "mm": [15, 29, 95, 98, 105], "whole": [15, 95, 98], "discard": [15, 16, 72, 95, 98], "dedup": [15, 95, 98], "One": [15, 66, 83, 95, 96, 98, 102, 103, 110, 113, 115, 117], "hashabl": [15, 19, 46, 47, 62, 92, 95, 98, 99, 120, 121], "freez": [15, 95, 98], "drop": [15, 16, 81, 95, 98], "Will": [15, 16, 32, 88, 89, 91, 95, 96, 98, 101, 106], "repeat": [15, 47, 62, 95, 98, 126], "around": [15, 16, 24, 29, 48, 80, 82, 95, 98, 102, 110, 122, 123, 124], "radial": [15, 16, 24, 48, 80, 95, 98], "spheric": [15, 16, 48, 95, 96, 98, 102, 106], "snapshot": [15, 31, 95, 98], "ie": [15, 31, 46, 47, 58, 66, 71, 75, 95, 98, 125], "dict64": [15, 16, 31, 95, 98], "byte": [15, 16, 19, 29, 31, 32, 35, 38, 39, 41, 47, 52, 59, 65, 71, 92, 93, 95, 98, 106, 117, 120, 121], "anyth": [15, 33, 57, 95, 98, 99, 103, 125], "noth": [15, 95, 98, 115], "cartesian": [15, 16, 23, 54, 82, 86, 95, 98, 102, 103, 106, 127], "tensor": [15, 16, 48, 82, 95, 98], "png": [15, 95, 98], "sceneview": [15, 95, 98], "sane": [15, 95, 98, 115], "roughli": [15, 24, 38, 47, 88, 95, 98, 103, 106], "radian": [15, 24, 45, 46, 47, 59, 62, 75, 95, 96, 97, 98, 99, 102, 103, 106, 110], "callabl": [15, 32, 95, 98, 106], "turn": [15, 19, 46, 47, 67, 71, 72, 73, 74, 75, 77, 95, 98, 106, 115, 125], "shade": [15, 16, 32, 46, 90, 95, 98], "succe": [15, 95, 98, 99], "partial": [15, 19, 32, 95, 98], "correctli": [15, 94, 95, 98, 106], "triangles_index": [15, 95, 98], "mix": [15, 33, 45, 95, 98], "face_attribut": [15, 16], "vertex_attribut": [15, 16, 89, 113, 119], "merge_tex": [15, 16, 47], "merge_norm": [15, 16, 47], "use_embre": [15, 16, 82], "initial_cach": [15, 16, 82], "inf": [15, 16, 46, 47, 82], "immedi": [15, 16, 58, 71, 72, 82], "alter": [15, 16, 19, 71, 79, 82, 91, 102, 106, 115, 119], "ensur": [15, 16, 33, 82, 106, 110], "pyembre": [15, 16, 82], "fall": [15, 16, 82], "slower": [15, 16, 22, 82, 102, 103], "expens": [15, 16, 17, 19, 82], "were": [15, 16, 62, 70, 80, 82, 106, 119], "assign": [15, 16, 19, 46, 82, 88, 89, 91], "bookkeep": [15, 16], "recomput": [15, 16, 54], "open3d": [15, 16], "trianglemesh": [15, 16], "averag": [15, 16, 88, 117], "sigma": [15, 16, 81], "n_sampl": [15, 16, 81], "quasi": [15, 16, 81], "multivari": [15, 16, 81], "rest": [15, 16, 29, 81], "workspac": [15, 16, 81], "onto": [15, 16, 23, 45, 46, 58, 70, 71, 72, 80, 81, 88, 102], "tabl": [15, 16, 81], "randomli": [15, 16, 79, 81, 94], "4x4": [15, 16, 81, 102, 120, 121, 127], "against": [15, 16, 20, 32, 48, 81, 88], "upward": [15, 16, 81], "assum": [15, 16, 29, 62, 80, 81, 97, 102, 106, 125, 126], "uniform": [15, 16, 81, 91, 102, 120, 121], "covari": [15, 16, 81], "touch": [15, 16, 62, 81], "prob": [15, 16, 81], "_supportsarrai": [15, 16, 47, 59], "_nestedsequ": [15, 16, 47, 59], "complex": [15, 16, 19, 24, 47, 59], "whether": [15, 16, 19, 46, 48, 50, 54, 58, 62, 69, 70, 71, 82, 83, 85, 86, 88, 93, 106, 117], "pyvhacd": [15, 16], "keyword": [15, 16, 19, 26, 35, 37, 38, 67, 72, 99, 103, 113, 118], "include_cach": [15, 16], "By": [15, 16, 57, 102], "never": [15, 16, 19], "shallow": [15, 16], "check_volum": [15, 16, 17], "backend": [15, 16, 17, 46], "ignor": [15, 16, 17, 30, 47, 48, 68, 72, 97, 106, 116, 117], "belong": [15, 16, 80, 97], "coo_matrix": [15, 16, 25, 45, 46, 101], "coo": [15, 16, 45, 46, 101], "invers": [15, 16, 47, 97, 99, 101, 102, 126, 127], "reproduc": [15, 16], "referenc": [15, 16, 19, 30, 31, 33, 35, 47, 53, 58, 62, 64, 67, 71, 82, 91, 92, 93, 99, 100, 119], "long": [15, 16, 22, 104, 126], "characterist": [15, 16], "topolog": [15, 16], "order": [15, 16, 18, 19, 20, 24, 29, 46, 47, 55, 57, 59, 61, 64, 70, 77, 80, 99, 106, 110, 113, 115, 126], "correct": [15, 16, 23, 47, 88, 91, 97], "after": [15, 16, 24, 70, 82, 106, 120, 121], "arg": [15, 16, 17, 19, 29, 33, 38, 40, 43, 46, 62, 72, 88, 90, 92, 102, 113, 115, 116, 117, 118, 119, 120, 121], "eval": [15, 16, 105], "msgpack": [15, 16], "writeabl": [15, 16, 19, 29], "file_nam": [15, 16, 28, 52, 106], "pair": [15, 16, 18, 19, 20, 45, 46, 52, 55, 74, 75, 88, 94, 96, 104, 106, 126], "1112": [15, 16], "949": [15, 16], "3467": [15, 16], "3475": [15, 16], "1113": [15, 16], "408": [15, 16], "1239": [15, 16], "adjacency_angl": [15, 16], "neg": [15, 16, 25, 47, 62, 64, 83, 106], "are_convex": [15, 16], "perpendicular": [15, 16, 46, 80, 102], "rectangular": [15, 16, 70, 94], "cell": [15, 16, 102, 120, 121, 125], "vid_unshar": [15, 16, 46], "neighborhood": [15, 16, 46], "magnitud": [15, 16, 24, 57, 59, 79, 82, 106], "regard": [15, 16, 82], "cannot": [15, 16, 19, 82], "_data": [15, 16, 82], "unique_edg": [15, 16], "6946": [15, 16], "24224": [15, 16], "1727": [15, 16], "24225": [15, 16], "total": [15, 16, 46, 58, 62, 71, 80], "boundari": [15, 16, 29, 52, 58, 71, 72, 89, 91], "edges_boundari": [15, 16], "on_hul": [15, 16], "multibodi": [15, 16, 91], "outward": [15, 16, 23, 24], "wound": [15, 16], "across": [15, 16, 56], "pick": [15, 16, 18, 70, 88, 94, 102], "hex": [15, 16, 19, 115], "sigfig": [15, 16, 106], "integr": [15, 16, 29, 104], "negat": [15, 16], "column": [15, 16, 44, 45, 90, 91, 102, 106, 123, 125, 126], "opposit": [15, 16, 91], "garbag": [15, 16], "global": [15, 16, 122], "again": [15, 16, 54, 121], "conveni": [15, 16, 79, 123], "taken": [15, 16], "digits_vertex": [15, 16, 47], "digits_norm": [15, 16, 47], "digits_uv": [15, 16, 47], "regardless": [15, 16, 47], "digit": [15, 16, 35, 36, 47, 68, 71, 75, 106], "versu": [15, 16], "ey": [15, 16, 127], "theorum": [15, 16, 48], "08": [15, 16, 22, 70, 102, 106], "shorter": [15, 16, 71, 80, 89], "face_id": [15, 16, 67], "those": [15, 16, 19, 33, 57, 58, 71, 89, 102, 120, 121], "extract": [15, 16, 23, 34, 62, 72, 102, 105], "pattern": [15, 16, 60, 72], "pad": [15, 16, 45, 72, 86, 96, 106, 117, 123, 126], "proport": [15, 16, 72], "de": [15, 16, 18, 72, 101, 102], "gap": [15, 16, 72], "tol_dot": [15, 16, 72], "toler": [15, 16, 22, 47, 72, 75, 77], "max_region": [15, 16, 72], "region": [15, 16, 25, 58, 70, 71, 72, 73, 74, 122], "refin": [15, 16, 88], "icp_first": [15, 16, 88], "icp_fin": [15, 16, 88], "itert": [15, 16], "candid": [15, 16, 83, 86, 88], "wider": [15, 16, 88], "mesh_to_oth": [15, 16, 88], "derec": [15, 16], "march": [15, 16, 120, 121, 125], "2024": [15, 16], "WITH": [15, 16], "finit": [15, 16, 101, 104], "return_index": [15, 16, 45, 47, 75, 89], "face_weight": [15, 16, 94], "distribut": [15, 16, 77, 88, 94, 102], "face_index": [15, 16, 54, 89, 94, 113, 115, 119], "face_count": [15, 16, 24], "thin": [15, 16, 29, 106], "wrapper": [15, 16, 106, 117, 123, 124], "cap": [15, 16, 54], "cached_dot": [15, 16, 54], "portion": [15, 16, 54], "extern": [15, 16, 32, 54, 106], "new_mesh": [15, 16, 54], "half": [15, 16, 60, 95, 96, 102], "individu": [15, 16, 19, 94, 103, 106, 117], "only_watertight": [15, 16, 46, 106], "remaind": [15, 16], "overrid": [15, 16, 18, 24, 46, 58, 71, 103], "custom": [15, 16, 32, 58, 71, 106], "separ": [15, 16, 32, 44, 52, 77, 106], "four": [15, 16, 19, 89, 117], "smaller": [15, 16, 19, 22, 46, 70, 89, 106], "longer": [15, 16, 75, 76, 89], "midpoint": [15, 16], "postprocess": [15, 16, 41], "subdivis": [15, 16, 24, 82, 89], "catmul": [15, 16], "clark": [15, 16], "primarili": [15, 16, 46, 54], "max_edg": [15, 16, 89], "max_it": [15, 16, 58, 71, 72, 83, 88, 89], "faces_sequ": [15, 16, 106], "flag": [15, 16, 19, 62, 106, 127], "dictionari": [15, 16, 31, 58, 62, 64, 71, 99, 106], "On": [15, 16, 80], "occurr": [15, 16, 47], "equival": [15, 16, 19, 106, 123, 126], "been": [15, 16, 21, 70, 106, 113, 115], "pil": [15, 16, 58, 70, 71, 73, 113, 115, 116, 117, 119], "vertex_mask": [15, 16], "nearbi": [15, 16, 46, 83, 92], "techniqu": [15, 16, 29, 46], "pi": [15, 16, 25, 59, 97, 102], "minu": [15, 16, 25, 58, 71], "concav": [15, 16, 23, 25], "degre": [15, 16, 18, 29, 71, 76, 95, 96, 102], "alreadi": [15, 16, 20, 55], "mismatch": [15, 16], "loaded": [15, 33], "asset": [15, 30, 31, 33, 35, 38, 92, 100], "coerc": [15, 33, 117], "everyth": [15, 33, 107], "file_object": [15, 66], "nativ": [15, 66, 85], "remot": [15, 33, 92], "must": [15, 19, 29, 33, 57, 80, 92, 97, 102, 106, 117, 122, 123], "accident": [15, 33], "dim": [15, 70, 102], "check_valid": [15, 106], "nonzero": [15, 103, 106], "cutoff": [15, 46, 97, 106, 117], "info": [17, 52, 59, 62, 103, 106], "dimens": [18, 23, 29, 47, 56, 57, 58, 59, 61, 62, 67, 70, 71, 76, 77, 80, 106, 119], "points_insid": 18, "cube": [18, 29, 85, 120, 121, 122, 125, 127], "sample_count": 18, "angle_tol": 18, "001": [18, 76, 88], "hemispher": [18, 24, 106], "discuss": [18, 102], "www": [18, 23, 29, 70, 102, 103], "staff": 18, "uni": 18, "mainz": 18, "schoemer": 18, "public": 18, "algo00": 18, "pdf": [18, 48, 102, 103], "angular": [18, 59], "180": [18, 23], "angle_digit": 18, "coplanar_tol": 18, "precis": [18, 21, 47, 59, 62, 72, 76, 102, 104], "cover": [18, 19, 82], "albeit": 18, "larger": [18, 32, 46, 70, 76, 103], "deviat": [18, 22, 56, 76, 102], "to_origin": 18, "qhull_opt": [18, 23], "qbb": [18, 23], "AT": 18, "THE": 18, "23": [19, 102], "blake2b": 19, "hexdigest": 19, "102": 19, "684": 19, "24": [19, 102], "142": 19, "73": 19, "xxh3_64_intdigest": 19, "37": 19, "116": 19, "id_funct": 19, "force_immut": 19, "id": [19, 29, 102], "exclud": 19, "item": [19, 47, 70, 100, 106], "still": [19, 22, 75], "is_mut": 19, "expire_dai": 19, "30": 19, "disk": 19, "expir": 19, "gigabyt": 19, "corpus": 19, "corpu": 19, "old": [19, 79], "fetch": [19, 35, 100], "recent": 19, "aggress": [19, 101], "necessarili": 19, "wrong": [19, 102], "__hash__": 19, "fastest": 19, "xxh3_64": 19, "xxh_64": 19, "inplac": 19, "swap": 19, "endian": 19, "big": 19, "real": [19, 102, 103], "imaginari": [19, 102], "256": 19, "8755": 19, "int16": 19, "0x1": 19, "0x100": 19, "0x2233": 19, "13090": 19, "0x3322": 19, "ceg": 19, "fac": 19, "s3": 19, "newbyteord": 19, "produc": [19, 72, 77, 79, 88, 94], "scalar": [19, 101, 102], "expect": [19, 102], "behav": [19, 70], "rare": 19, "distinct": [19, 104], "unpack": 19, "cast": [19, 83, 123], "syntax": 19, "speed": [19, 101, 102, 106], "increas": [19, 97], "particular": [19, 72], "discourag": 19, "among": 19, "variabl": [19, 102, 103], "seed": [19, 70, 94], "123": [19, 102], "randint": 19, "kth": 19, "introselect": 19, "rearrang": 19, "behind": 19, "undefin": [19, 57, 85, 86], "22": [19, 104], "field": [19, 29, 32, 64, 95, 96], "unspecifi": 19, "break": [19, 42, 62, 91, 106], "ti": 19, "argpartit": 19, "indirect": 19, "uic": 19, "writebackifcopi": 19, "affect": [19, 97], "interpret": [19, 102, 117], "below": [19, 24, 29, 61, 82, 94, 104], "accord": [19, 22, 29, 33, 102, 120, 121], "own": [19, 122, 124], "ultim": 19, "owner": [19, 92], "expos": 19, "made": [19, 62, 64, 106, 120, 121], "unpickl": 19, "done": [19, 71, 72], "properli": [19, 33, 106], "stride": 19, "appropri": [19, 27, 126], "hardwar": 19, "pyarray_resolvewritebackifcopi": 19, "content": [19, 92], "upper": [19, 72, 106], "letter": 19, "c_contigu": 19, "f_contigu": 19, "owndata": 19, "traceback": 19, "stdin": 19, "quicksort": 19, "mergesort": 19, "heapsort": 19, "timsort": 19, "under": [19, 24, 88, 92], "vari": [19, 106], "retain": 19, "backward": 19, "argsort": 19, "lexsort": 19, "searchsort": 19, "s1": [19, 102], "i8": 19, "decor": [19, 22, 57], "retriev": [19, 33, 92, 117], "foo": 19, "happi": [19, 53], "dai": 19, "pitfal": 19, "contigu": [19, 47, 102], "manag": 20, "return_nam": [20, 64], "return_data": 20, "collid": 20, "is_collis": 20, "occur": [20, 29, 47, 101, 106, 113, 115, 120, 121, 126], "tup": [20, 106], "alphabet": 20, "contact": 20, "detect": [20, 72, 103, 106], "other_manag": 20, "prior": [20, 24, 56, 76], "penetr": [20, 72], "distanceresult": 20, "collisoin": 20, "bvhmodel": 20, "bvh": 20, "collisionobject": 20, "somewhat": 21, "64": [21, 26, 58, 71, 104], "rigid": [21, 88, 102], "05": [22, 72, 75, 86, 88, 99, 102, 103], "500": [22, 88, 102, 108, 109], "20": [22, 24, 45, 88, 102], "10f": 22, "percentag": 22, "draw": [22, 58, 59, 62, 68, 71, 72, 73, 76, 77, 106], "aim": 22, "control": [22, 59, 61, 62, 76, 101, 102, 120, 121], "13": [22, 83], "5000": 22, "solidwork": [22, 40, 43], "8726646259971648": 22, "017453292519943295": 22, "02": [22, 102], "0001": [22, 47, 88, 106], "3490658503988659": 22, "aspect": 22, "ratio": [22, 45, 89, 104], "differfrom": 22, "escap": 22, "earli": [22, 70], "emit": [22, 94, 97], "took": 22, "execut": [22, 29, 70, 80], "deal": [23, 46, 47, 48, 55, 75, 80, 89, 100, 103, 105, 115, 118], "extend": [23, 83], "exterior": [23, 58, 71, 72, 83], "interior": [23, 58, 71, 72, 89], "pp": [23, 102], "qt": 23, "attempt": [23, 29, 46, 71, 72, 80, 99, 106], "qhull": [23, 56], "qh": 23, "htm": [23, 102], "o": [23, 61, 102, 125], "r_min": 24, "r_max": 24, "annular": 24, "pie": 24, "wedg": 24, "origin_s": 24, "origin_color": 24, "axis_radiu": 24, "axis_length": 24, "cuboid": [24, 60, 70], "marker_height": 24, "far": [24, 58, 71, 97, 102, 106], "latitud": 24, "longitud": 24, "revolut": 24, "triangle_arg": 24, "platon": 24, "solid": [24, 94], "ico": 24, "icosahederon": 24, "isopher": 24, "grow": 24, "intend": 24, "symmetr": [24, 48], "counterclockwis": [24, 106], "32": [24, 29, 60, 82], "sharp": [24, 46, 88], "sweep": 24, "major_radiu": 24, "minor_radiu": 24, "major_sect": 24, "minor_sect": 24, "tube": 24, "minor": 24, "mapbox_earcut": 24, "pq30": 24, "prism": 24, "uglier": 24, "thgrough": 24, "restrict": 25, "delaunai": [25, 52], "cycl": [25, 58, 71, 77], "cohen": 25, "steiner": 25, "morvan": 25, "within": [25, 47, 75, 83, 106], "gaussian_curvatur": 25, "mean_curvatur": 25, "start_point": 25, "ball": [25, 102], "maxconvexhul": 26, "400000": 26, "minimumvolumepercenterrorallow": 26, "maxrecursiondepth": 26, "shrinkwrap": 26, "fillmod": 26, "flood": 26, "maxnumverticesperch": 26, "asyncacd": 26, "minedgelength": 26, "findbestplan": 26, "decompos": [26, 102], "mesh_arg": 26, "rtype": [26, 62], "wrap": [27, 28, 47, 68, 85, 106, 117], "dummi": 27, "surviv": [27, 120, 121], "debugg": 27, "patrickmin": 29, "alia": [29, 104], "z_buffer_carv": 29, "z_buffer_vot": 29, "dilated_carv": 29, "exact": [29, 50, 57, 72], "remove_intern": 29, "rotate_x": 29, "rotate_z": 29, "block_id": 29, "use_material_block_id": 29, "use_offscreen_pbuff": 29, "downsample_factor": 29, "downsample_threshold": 29, "verbos": [29, 58, 71, 76], "binvox_path": 29, "cl": 29, "respons": 29, "__call__": 29, "pleas": 29, "cite": 29, "websit": 29, "articl": [29, 70, 101], "nooruddin03": 29, "fakir": 29, "nooruddin": 29, "greg": 29, "turk": 29, "simplif": 29, "journal": [29, 45], "ieee": 29, "transact": 29, "graphic": [29, 45, 102], "191": 29, "205": 29, "year": 29, "patrick": 29, "howpublish": 29, "googl": [29, 38], "yyyi": 29, "dd": 29, "ug": 29, "dfx": 29, "xgl": 29, "pov": 29, "jot": 29, "hip": 29, "mira": 29, "vtk": [29, 34], "schemat": 29, "msh": [29, 52], "1024": 29, "carv": 29, "pariti": [29, 102], "vote": 29, "stop": [29, 59, 88], "card": 29, "minx": [29, 106], "mini": [29, 106], "maxx": [29, 106], "maxi": [29, 106], "odd": [29, 89, 102], "behaviour": 29, "occupi": [29, 86, 120, 121, 125], "90": [29, 102, 126], "ccw": [29, 106], "cw": 29, "use_matrial_block_id": 29, "spec": 29, "usemtl": 29, "blockid_": 29, "offscreen": 29, "pbuffer": 29, "onscreen": 29, "downsampl": 29, "adjust": 29, "destin": 29, "silenc": 29, "stdout": 29, "stderr": 29, "subprocess": 29, "entir": [29, 92, 117], "suitabl": [29, 88], "denot": [29, 120, 121, 123], "num": [29, 102], "axis_ord": 29, "xzy": 29, "eement": 29, "relev": [29, 72, 127], "fp": 29, "namedtupl": 29, "rle": [29, 126], "ioerror": 29, "factori": [29, 123], "encoded_ax": 29, "circumst": 29, "export_typ": 29, "binvoxer_kwarg": 29, "simpli": 29, "suppli": 29, "temporarili": 29, "ignore_broken": [30, 32], "broken": [30, 91], "dure": [30, 110], "daeunsupportederror": 30, "daebrokenreferror": 30, "zae": 30, "Such": 31, "base64": [31, 32, 34, 106, 108, 109], "use_base64": 31, "include_metadata": 31, "as_dict": [31, 62, 67, 82], "gl_triangl": 32, "gl_line": 32, "include_norm": [32, 35], "unitize_norm": 32, "tree_postprocessor": 32, "buffer_postprocessor": 32, "extension_webp": 32, "serializ": [32, 82, 106], "func": 32, "webp": 32, "ext_texture_webp": 32, "merge_buff": 32, "embed_buff": 32, "oppos": [32, 50, 122], "peopl": 32, "tree_postprocess": 32, "exit": [32, 70], "uri": 32, "merge_primit": 32, "skip_materi": [32, 35, 38], "mesh_kwarg": [32, 38], "khronosgroup": 32, "master": 32, "present": [32, 38, 116, 123, 124], "err": 32, "validationerror": 32, "gltf2": 32, "archiv": [33, 92, 106], "lowercas": 33, "rb": 33, "special": [33, 61, 106], "charact": [33, 44, 102, 104, 106], "lower": [33, 72], "did": [33, 54, 85], "aka": [34, 77], "include_color": 35, "include_textur": 35, "return_textur": 35, "write_textur": 35, "mtl_name": [35, 117], "todo": [35, 46, 95, 96, 117], "vt": [35, 119], "mtl": [35, 92, 117], "top": [35, 82, 102], "group_materi": 35, "maintain_ord": 35, "reorder": [35, 71, 79, 80], "artifact": 35, "web": [35, 92], "mtllib": 35, "newmtl": 35, "map_kd": 35, "kd": 35, "ctm": 37, "draco": 38, "draco_encod": 38, "quantiz": 38, "drc": 38, "include_attribut": 38, "binary_little_endian": 38, "fix_textur": 38, "prefer_color": 38, "dassault": 40, "catia": 40, "cad": [40, 52], "etre": 40, "batch_siz": 41, "4096": 41, "compresslevel": 41, "batch": 41, "zipfil": [41, 106], "zip_": 41, "simul": 42, "piec": 42, "write_color": 44, "delimit": [44, 106], "whitespac": 44, "comma": 44, "return_angl": [45, 59], "co": 45, "toarrai": 45, "vertex_count": 45, "unreferenc": 45, "fewer": [45, 94, 106], "use_loop": 45, "surround": 45, "grit": 45, "thuerrner": 45, "charl": 45, "wuethrich": 45, "1998": 45, "43": [45, 102], "abstract": [46, 57, 82, 92, 104, 114, 117, 123], "node_count": 46, "label": [46, 62, 80], "largest": 46, "min_len": [46, 47], "return_edg": 46, "add_edges_from": 46, "graph_connect": 46, "unshar": 46, "exactli": [46, 54, 62, 77, 79, 99, 104], "fact": [46, 56], "bipartit": 46, "edges_hash": 46, "consecut": [46, 47, 106], "graphviz": 46, "pictor": 46, "layout": 46, "attrib": 46, "multidigraph": 46, "collect": 46, "leaf": 46, "all_simple_path": 46, "visit": [46, 80], "multigraph": 46, "max_index": 46, "edgelist": [46, 99], "faces_a": 46, "faces_b": 46, "facet_minarea": 46, "fraction": [46, 102], "facets_minarea": 46, "patch": [46, 91], "sequenti": [46, 47, 106], "edge_hash": 46, "bf": 46, "routin": 46, "undirect": [46, 58, 71, 102], "df": 46, "max_len": 47, "only_nonzero": 47, "retuurn": 47, "1d": [47, 55, 106, 113, 115, 123], "intersect1d": 47, "setdiff1d": 47, "neighbour": 47, "convers": [47, 102, 105, 106], "as_int": [47, 106], "min_length": 47, "longest": [47, 83], "max_length": 47, "farther": 47, "apart": [47, 82, 106], "median": 47, "require_count": 47, "10x": 47, "decim": [47, 106], "include_neg": 47, "new_vector": 47, "uint64": 47, "void": 47, "minlength": 47, "return_invers": 47, "return_count": [47, 75], "member": [47, 106], "tol_merg": 47, "keep_ord": 47, "int8": 47, "known": [48, 58, 71, 88, 106, 126], "No": [48, 120, 121], "inertia_tensor": 48, "parallel_axi": 48, "opencoursewar": 48, "mit16_07f09_lec26": 48, "use_exact": 50, "use_self": 50, "troubleshoot": 50, "angle_limit": 50, "66": 50, "island_margin": 50, "gmsh_arg": 52, "cascad": 52, "breap": 52, "stp": 52, "texinfo": 52, "pypi": 52, "download": [52, 92], "setnumb": 52, "max_el": 52, "mesher_id": 52, "recov": [52, 102], "si": 52, "recoveri": 52, "br": 52, "dimension": [52, 57, 70, 75, 102], "frontal": 52, "schoeberl": 52, "netgen": 52, "hxt": 52, "effici": 52, "reimplementaton": 52, "mmg3d": 52, "experiment": 52, "anisotrop": 52, "tetrahedr": 52, "unstructur": [52, 106], "itself": 53, "cgal": 53, "csg": 53, "difficult": 53, "tempfil": 53, "send": [53, 88], "mesh_0": [53, 99], "mesh_1": 53, "return_fac": 54, "local_fac": 54, "line_seg": 54, "line_origin": 54, "line_direct": 54, "return_dist": 54, "return_denom": 54, "denomin": [54, 104], "on_plan": 54, "denom": 54, "new_vertic": [54, 89], "new_fac": [54, 89, 119], "new_uv": 54, "newli": 54, "overlap": [55, 58, 70, 71, 72], "inter": 55, "ptp": 55, "skip": 55, "hyperspher": 56, "peak": 56, "furthest": 56, "voronoi": [56, 58, 71, 72], "diagram": [56, 58, 71, 72], "due": [56, 106], "abc": [57, 62, 92, 97, 114, 117, 123], "abstractmethod": 57, "inherit": [57, 97], "loos": 57, "diagon": [57, 72, 110], "mincyl": 57, "smallest": [57, 60], "unpad": 57, "sphere_radiu": 57, "sphere_cent": 57, "minbal": 57, "unconnect": [58, 71], "aren": [58, 62, 70, 71, 99], "themselv": [58, 62, 71], "path_id": [58, 71], "include_self": [58, 71], "child": [58, 71, 99], "digraph": [58, 71, 72, 99], "shell": [58, 71, 72], "meshpi": [58, 71], "mesh_info": [58, 71], "refinement_func": [58, 71], "volume_constraint": [58, 71, 101], "max_volum": [58, 71], "allow_boundary_stein": [58, 71], "allow_volume_stein": [58, 71], "quality_mesh": [58, 71], "generate_edg": [58, 71], "generate_fac": [58, 71], "min_angl": [58, 71], "clip": [58, 71, 72, 77, 92, 102], "annot": [58, 62, 71], "notion": [58, 71], "topologi": [58, 71, 79, 101], "circuit": [58, 71], "NO": [58, 71], "enclos": [58, 71], "reject": [58, 71, 72, 76, 94], "colinear": [58, 71, 75, 76, 103], "circular": [58, 60, 71], "0002": [58, 71], "path_3d": [58, 71], "awar": [58, 71], "to_2d": [58, 71], "homeogen": [58, 71], "return_norm": 59, "establish": 59, "pattern_radiu": 60, "circle_radiu": 60, "include_circl": 60, "sections_circl": 60, "preced": 60, "rect": [60, 70], "coeffici": 61, "binom": 61, "hardcod": 61, "cubic": 61, "polylin": [61, 64, 67, 106], "knot": [61, 62], "geometr": [62, 71, 82], "numer": [62, 72, 77, 103], "wasn": 62, "purpos": 62, "essenti": 62, "tile": 62, "resid": 62, "shortcut": [62, 120, 121], "bag": 62, "poli": [62, 64, 72], "compos": [62, 89], "horizont": 62, "bulg": 64, "bulge_idx": 64, "meet": [64, 103], "autodesk": 64, "goe": [64, 97], "clockwis": [64, 80, 106], "semicircl": 64, "blob_raw": 64, "uppercas": 64, "only_lay": [64, 68], "loadabl": 66, "sent": 67, "return_path": 68, "as_svg": 68, "path_str": 68, "36": 68, "skewx": 68, "40": 68, "terminologi": 69, "geomalgorithm": 69, "a05": 69, "_intersect": 69, "p_0": 69, "su": 69, "q_0": 69, "tv": 69, "hyper": 70, "logic": [70, 106], "similarli": 70, "blackpawn": [70, 103], "lightmap": 70, "unsuccess": 70, "amount": [70, 102], "shrink": [70, 83], "spuriou": 70, "upsiz": [70, 90, 119], "gpu": 70, "consum": 70, "homogeon": [70, 102], "density_escap": 70, "99": 70, "quanta": 70, "sheet": 70, "snap": 70, "determinist": [70, 94, 106], "rng": 70, "shuffl": 70, "roll": [70, 102], "pre": [70, 72], "cleanup": 71, "025": [71, 74], "whatev": 71, "entity_id": 71, "declar": 71, "shorten": 71, "rough": [72, 117, 120, 121, 125], "quadrant": 72, "ignore_sign": 72, "rpad": 72, "apad": 72, "200": [72, 102], "coher": 72, "irrelev": 72, "exceed": [72, 126], "rtol": 72, "trick": 72, "perimet": 72, "return_cent": 72, "ixx": 72, "iyi": 72, "ixi": 72, "principal_mo": 72, "imax": 72, "imin": 72, "addition": 75, "double_sid": 75, "parametr": 75, "maxlen": 75, "came": [75, 106], "atol": [75, 106], "lie": [75, 77, 120, 121], "unknown": 76, "suggest": 76, "OR": [76, 82, 92, 95, 96, 106], "polynomi": 76, "entity_path": 77, "step_round": 77, "ONE": 77, "vertex_path": 77, "concat": [78, 115, 118], "deform": [79, 88], "effort": [79, 120, 121], "saniti": 79, "displac": 79, "translation_scal": 79, "variant": [79, 92], "reord": 79, "rigidli": [79, 88], "en": 80, "wikipedia": 80, "wiki": 80, "metric_k": 80, "vq": 80, "kmean": 80, "svd": [80, 102], "return_transform": 80, "return_planar": 80, "overridden": 80, "counter": [80, 106], "salesman": 80, "20x": 80, "29m": 80, "2014": 80, "i7": 80, "rhe": 81, "becaus": [82, 97, 126], "inflat": 82, "twice": [82, 86], "analyt": 82, "distance_height": 82, "expand": 82, "extrude_direct": 82, "vertex_id": 83, "inward": 83, "06": 83, "tangenti": 83, "masatomo": 83, "inui": 83, "nobuyuki": 83, "umezu": 83, "ryohei": 83, "shiman": 83, "2016": 83, "aid": 83, "applic": [83, 113, 119], "199": 83, "207": 83, "doi": 83, "1080": 83, "16864360": 83, "2015": [83, 102], "1084186": 83, "max_spher": 83, "scale_to_box": 85, "behavior": [85, 86, 117], "triangle_index": [85, 86], "multiple_hit": [85, 86], "max_hit": 85, "return_loc": [85, 86], "precomput": 86, "index_triangl": 86, "had": 86, "buffer_dist": 86, "interest": 86, "ccontain": 86, "ray_candid": 86, "ray_id": 86, "triangles_norm": 86, "max_iter": 88, "flippag": 88, "source_mesh": 88, "target_geometri": 88, "target_posit": 88, "ep": [88, 101], "use_fac": 88, "use_vertex_norm": 88, "neighbors_count": 88, "wn": 88, "wl": 88, "decreas": 88, "inferior": 88, "account": 88, "estim": 88, "transfer": 88, "wc": 88, "wi": 88, "strength": 88, "yield": [88, 92], "reflect": [88, 102, 120, 121], "return_cost": 88, "ta": 88, "improv": [88, 101], "won": 89, "index_dict": 89, "v2": [89, 102, 106], "f0": 89, "v0": [89, 102, 106], "v1": [89, 102, 106], "f1": 89, "v3": [89, 102, 106], "b0": 89, "b1": 89, "kb": 89, "colors_typ": 90, "colors_gl": 90, "lightn": 90, "gllightfv": 90, "gl_light0": 90, "gl_light1": 90, "multiarg": 90, "gllightfb": 90, "upscal": 90, "glfloat": 90, "glmatrix": 90, "smooth_threshold": 90, "60000": 90, "statu": 91, "proper": 91, "meaning": 91, "insert_vertic": 91, "fan": [91, 106], "wonki": 91, "subdirectori": 92, "branch": 92, "sub": 92, "quadknot": 92, "fragment": 92, "substr": [92, 106], "lightli": 92, "decode_json": 93, "as_stream": 93, "folder": 93, "sample_color": 94, "mathworld": 94, "wolfram": 94, "trianglepointpick": 94, "entropi": 94, "accomplish": 94, "too": 94, "warn": 94, "spherepointpick": 94, "z_near": [95, 96], "z_far": [95, 96], "intrins": [95, 96], "extrins": [95, 96], "cx": [95, 96], "cy": [95, 96], "fovx": [95, 96], "fovi": [95, 96], "splittabl": [95, 98], "top_left": 96, "bottom_right": 96, "mmatl": 97, "infinit": [97, 117], "awai": 97, "effect": [97, 110], "attenu": 97, "Its": 97, "lumen": 97, "metr": 97, "lux": 97, "lm": 97, "m2": 97, "unit8": 97, "bright": 97, "spot": 97, "lumin": 97, "candela": 97, "sr": 97, "illumin": 97, "manner": [97, 117], "7853981633974483": 97, "falloff": 97, "centr": 97, "decent": 97, "shouldn": 98, "remap": 98, "forest": 99, "simpler": 99, "enforc": 99, "free": 99, "disregard": 99, "repair_rigid": 99, "affili": 99, "happen": 99, "node_a": 99, "node_b": 99, "malform": 99, "geometry_nam": 99, "frame_to": 99, "frame_from": 99, "derefer": 99, "draw_networkx": 99, "bake": 99, "mesh_index": 99, "quaternion": [99, 102], "particularli": 100, "ref": 100, "recurs": 100, "dilat": 101, "variat": [101, 126], "initial_volum": 101, "srinked_volum": 101, "beta": [101, 102], "laplacian_oper": 101, "filter": 101, "vollmer": 101, "mencl": 101, "muller": 101, "shrinkag": 101, "autogener": 101, "lamb": 101, "implicit_time_integr": 101, "implicit": 101, "fair": 101, "irregular": 101, "diffus": [101, 115, 116, 117], "flow": 101, "desbrun": 101, "meyer": 101, "schroder": 101, "caltech": 101, "stabil": 101, "barroqueiro": 101, "andrad": 101, "campo": 101, "dia": 101, "oliveira": 101, "valent": 101, "januari": 101, "21": 101, "2021": 101, "bridg": 101, "asm": 101, "mech": 101, "nu": 101, "shall": 101, "lambda": 101, "vertices_norm": 101, "equal_weight": 101, "pinned_vertic": 101, "shear": [102, 120, 121], "orthogon": 102, "christoph": 102, "gohlk": 102, "laboratori": 102, "fluoresc": 102, "dynam": 102, "univers": 102, "california": 102, "irvin": 102, "2017": 102, "cpython": 102, "19": 102, "revis": 102, "epydoc": 102, "linalg": [102, 106], "inv": 102, "m0": 102, "m1": 102, "storag": 102, "convent": 102, "glmultmatrixd": 102, "carri": 102, "ix": 102, "jy": 102, "kz": 102, "tripl": 102, "sxyz": 102, "ryxi": 102, "tatic": 102, "otat": 102, "remain": 102, "success": 102, "rightmost": 102, "repetit": 102, "transforms3d": 102, "mathutil": 102, "ronald": 102, "goldman": 102, "gem": 102, "472": 102, "475": 102, "morgan": 102, "kaufmann": 102, "1990": 102, "pseudo": 102, "perspect": 102, "ii": 102, "320": 102, "323": 102, "1991": 102, "spencer": 102, "thoma": 102, "324": 102, "331": 102, "ken": 102, "shoemak": 102, "iv": 102, "222": 102, "229": 102, "1994": 102, "175": 102, "192": 102, "attitud": 102, "jame": 102, "diebel": 102, "2006": 102, "kabsch": 102, "acta": 102, "cryst": 102, "1978": 102, "a34": 102, "827": 102, "828": 102, "bkp": 102, "horn": 102, "opt": 102, "soc": 102, "am": 102, "1987": 102, "629": 102, "642": 102, "sfu": 102, "ca": [102, 103], "jwa3": 102, "cmpt461": 102, "quatut": 102, "jmp": 102, "van": 102, "waveren": 102, "2005": 102, "asmo": 102, "na": 102, "eng": 102, "293748": 102, "iii": 102, "124": 102, "132": 102, "1992": 102, "molecular": 102, "cff": 102, "karnei": 102, "mol": 102, "mod": 102, "595": 102, "604": 102, "itzhack": 102, "bar": 102, "contr": 102, "2000": 102, "1085": 102, "1087": 102, "vision": 102, "hartlei": 102, "zissermann": 102, "cambridg": 102, "2nd": 102, "ed": [102, 126], "chapter": 102, "130": 102, "steve": 102, "hollasch": 102, "net": 102, "cgindex": 102, "math": [102, 105], "vec": 102, "234": 102, "345": 102, "xaxi": 102, "yaxi": 102, "zaxi": 102, "rx": 102, "ry": 102, "rz": 102, "rxyz": 102, "ga": 102, "qx": 102, "qy": 102, "qz": 102, "rq": 102, "rand": 102, "tran": 102, "persp": 102, "tan": 102, "250": 102, "275": 102, "90583455": 102, "400": 102, "2055924": 102, "state": [102, 110], "cursor": 102, "acceler": 102, "continu": 102, "usesvd": 102, "rmsd": 102, "1031": 102, "1600": 102, "675": 102, "826": 102, "677": 102, "55": [102, 106], "52": [102, 104], "281": 102, "277": 102, "mat": 102, "300": [102, 126], "5708": 102, "95532": 102, "bottom": 102, "devic": 102, "frustum": 102, "pyramid": 102, "orthograph": 102, "canon": [102, 104], "dehomogen": 102, "seri": [102, 106], "array_lik": 102, "degen": 102, "t0": 102, "t1": 102, "r0": 102, "r1": 102, "triplet": 102, "syxz": 102, "_axes2tupl": 102, "99810947": 102, "06146124": 102, "aj": 102, "ak": 102, "yaw": 102, "34786452": 102, "383436184": 102, "_tuple2ax": 102, "max_devi": 102, "almost": [102, 126], "accumul": 102, "restor": 102, "trace": 102, "q0": 102, "q1": 102, "matrix0": 102, "matrix1": 102, "crystallograph": 102, "87": 102, "80": 102, "69": 102, "063229": 102, "theta": 102, "matrix_2d": 102, "matrix_3d": 102, "p0": 102, "p1": 102, "pseudoperspect": 102, "p2": 102, "p3": 102, "conjug": 102, "ryxz": 102, "435953": 102, "310622": 102, "718287": 102, "444435": 102, "isprecis": 102, "diag": [102, 106], "9981095": 102, "0164262": 102, "0328524": 102, "0492786": 102, "545": 102, "797": 102, "260": 102, "733": 102, "603": 102, "313": 102, "407": 102, "021": 102, "913": 102, "19069": 102, "43736": 102, "87485": 102, "083611": 102, "395": 102, "362": 102, "843": 102, "626": 102, "796": 102, "056": 102, "498": 102, "529": 102, "82336615": 102, "13610694": 102, "46344705": 102, "29792603": 102, "quaternion1": 102, "quaternion0": 102, "44": 102, "quat0": 102, "quat1": 102, "spin": 102, "shortestpath": 102, "arcco": 102, "einsum": [102, 106], "ji": 102, "jk": 102, "ik": 102, "doubl": [102, 104, 117], "mirror": 102, "direc": 102, "broadcast": 102, "s0": 102, "det": 102, "phi": 102, "norm": [102, 106], "expand_dim": 102, "closestptpointtriangl": 103, "confus": 103, "skip_inertia": 103, "geometrictool": 103, "polyhedralmassproperti": 103, "coloc": 103, "cramer": 103, "rule": 103, "pointinpoli": 103, "ubc": 103, "heidrich": 103, "jgt": 103, "2x": 103, "normals_compar": 103, "textio": 104, "binaryio": 104, "distinguish": 104, "unbuff": 104, "captur": 104, "pervas": 104, "offer": 104, "anystr": 104, "hint": [104, 105], "whenc": 104, "float_": 104, "platform": 104, "x86_64": 104, "expon": [104, 106], "mantissa": 104, "whose": 104, "overflowerror": 104, "infin": 104, "signedinteg": 104, "int_": 104, "9_223_372_036_854_775_808": 104, "9_223_372_036_854_775_807": 104, "intp": 104, "enough": 104, "pointer": 104, "intptr_t": 104, "analog": 104, "builtin": [104, 106], "popcount": 104, "127": [104, 106], "pint": 105, "units_to_inch": 105, "meter": 105, "millimet": 105, "standalon": 106, "overwrit": 106, "risk": 106, "vertices_seq": 106, "faces_seq": 106, "verticesvertex": 106, "compact": 106, "col_delim": 106, "row_delim": 106, "value_format": 106, "surprisingli": 106, "handler": 106, "capture_warn": 106, "blacklist": 106, "stream": 106, "enum": 106, "starts_with": 106, "new_lin": 106, "comment": 106, "unmodifi": 106, "min_digit": 106, "untouch": 106, "1020": 106, "nah": 106, "hi": 106, "tar": 106, "gz": 106, "181": 106, "ij": 106, "62": 106, "429": 106, "61": 106, "tobyt": 106, "basi": 106, "0x7f": 106, "return_al": 106, "return_centroid": 106, "is_inst": 106, "pathlib": 106, "allow_zero": 106, "wildcard": 106, "shape_ok": 106, "4x": 106, "as_sequ": 106, "regular": 106, "76": 106, "651": 106, "220": 106, "41": 106, "signific": 106, "round": 106, "reduc": [106, 117, 122], "round_sigfig": 106, "232453": 106, "00014045456": 106, "200000": 106, "0001405": 106, "multipart": 106, "bz2": 106, "period": 106, "return_2d": 106, "is_2d": 106, "thisexist": 106, "conversionsar": 106, "min_fac": 106, "significantli": 106, "program": 106, "v4": 106, "drawn": 106, "nnme": 106, "alphanumer": 106, "uuid": 106, "__includes__": 106, "start_10": 106, "increment": 106, "accordingli": 106, "bundl": 106, "mutat": [106, 120, 121, 127], "return_sign": 106, "possibli": [106, 120, 121], "constitu": 106, "bufferedrandom": 106, "jypyt": [108, 109], "embed": [108, 109], "viewpoint": 110, "movement": 110, "motion": 110, "suffici": [110, 127], "record": 110, "tracbal": 110, "mark": 110, "autolab_cor": 110, "rigidtransform": 110, "azimuth": 110, "forward": 110, "face_materi": [113, 119], "vi": [113, 119], "color_map": [113, 115], "colormap": [113, 115], "viridi": [113, 115], "color_rang": [113, 115], "linearli": [113, 115], "extrema": [113, 115], "uint4": [113, 115], "bilinear": [113, 115], "architectur": 115, "categori": 115, "treat": 115, "vertexvisu": 115, "as_float": 115, "specularfactor": 116, "glossinessfactor": 116, "specularglossinesstextur": 116, "diffusetextur": 116, "diffusefactor": 116, "khr_materials_pbrspecularglossi": 116, "metallicrough": 116, "specular": [116, 117], "channel": 116, "opac": 116, "idx": 117, "fhkpz": 117, "opaqu": 117, "enumer": 117, "blend": 117, "texel": 117, "emiss": 117, "ech": 117, "metal": 117, "occlus": 117, "ambient": 117, "promin": 117, "tex_nam": 117, "max_tex_size_individu": 117, "8192": 117, "max_tex_size_fus": 117, "modulu": 117, "vn": 119, "maintain_fac": 119, "mask_v": 119, "mask_": 119, "occup": [120, 121, 125], "filler": [120, 121, 122, 124], "leav": [120, 121], "mere": [120, 121], "runtimeerror": [120, 121], "vox": [120, 121], "trail": [120, 121, 126], "meaningless": 122, "voxelize_subdivid": 122, "custom_kei": [122, 124], "custom_fn": [122, 124], "signatur": [122, 124], "unchang": [122, 124], "oo": 123, "brle_data": [123, 126], "dense_data": [123, 126], "encoding_dtyp": 123, "ordered_indic": [123, 126], "unifi": 123, "conceptu": 123, "entri": 123, "lazi": 123, "_to_base_indic": 123, "_from_base_indic": 123, "base_indic": 123, "rank": [123, 124, 126], "csc": 123, "ravel": 123, "unravel": 123, "shift": 123, "base_encod": 123, "ndimag": 124, "filled_encod": 124, "ufunc": 125, "logical_and": 125, "logical_or": 125, "coord": 125, "skimag": 125, "fanci": 125, "encdo": 126, "brle": 126, "carefulli": 126, "logical_not": 126, "highli": 126, "wise": 126, "wherev": 126, "stripped_brle_data": 126, "val": 126, "substitut": 126, "valuerror": 126, "sorted_gather_1d": 126, "stripped_rle_data": 126, "raw_data": 126, "ascend": 126, "exce": 126, "max_val": 126, "max_valu": 126, "600": 126}, "objects": {"": [[15, 0, 0, "-", "trimesh"]], "trimesh": [[15, 1, 1, "", "PointCloud"], [15, 1, 1, "", "Scene"], [15, 1, 1, "", "Trimesh"], [15, 4, 1, "", "available_formats"], [16, 0, 0, "-", "base"], [17, 0, 0, "-", "boolean"], [18, 0, 0, "-", "bounds"], [19, 0, 0, "-", "caching"], [20, 0, 0, "-", "collision"], [21, 0, 0, "-", "comparison"], [22, 0, 0, "-", "constants"], [23, 0, 0, "-", "convex"], [24, 0, 0, "-", "creation"], [25, 0, 0, "-", "curvature"], [26, 0, 0, "-", "decomposition"], [27, 0, 0, "-", "exceptions"], [28, 0, 0, "-", "exchange"], [45, 0, 0, "-", "geometry"], [46, 0, 0, "-", "graph"], [47, 0, 0, "-", "grouping"], [48, 0, 0, "-", "inertia"], [49, 0, 0, "-", "interfaces"], [54, 0, 0, "-", "intersections"], [55, 0, 0, "-", "interval"], [15, 4, 1, "", "load"], [15, 4, 1, "", "load_mesh"], [15, 4, 1, "", "load_path"], [15, 4, 1, "", "load_remote"], [56, 0, 0, "-", "nsphere"], [57, 0, 0, "-", "parent"], [58, 0, 0, "-", "path"], [79, 0, 0, "-", "permutate"], [80, 0, 0, "-", "points"], [81, 0, 0, "-", "poses"], [82, 0, 0, "-", "primitives"], [83, 0, 0, "-", "proximity"], [84, 0, 0, "-", "ray"], [88, 0, 0, "-", "registration"], [89, 0, 0, "-", "remesh"], [90, 0, 0, "-", "rendering"], [91, 0, 0, "-", "repair"], [92, 0, 0, "-", "resolvers"], [93, 0, 0, "-", "resources"], [94, 0, 0, "-", "sample"], [95, 0, 0, "-", "scene"], [100, 0, 0, "-", "schemas"], [101, 0, 0, "-", "smoothing"], [15, 4, 1, "", "transform_points"], [102, 0, 0, "-", "transformations"], [103, 0, 0, "-", "triangles"], [104, 0, 0, "-", "typed"], [15, 4, 1, "", "unitize"], [105, 0, 0, "-", "units"], [106, 0, 0, "-", "util"], [107, 0, 0, "-", "version"], [108, 0, 0, "-", "viewer"], [113, 0, 0, "-", "visual"], [120, 0, 0, "-", "voxel"]], "trimesh.PointCloud": [[15, 2, 1, "", "__init__"], [15, 2, 1, "", "apply_transform"], [15, 3, 1, "", "bounds"], [15, 3, 1, "", "centroid"], [15, 3, 1, "", "colors"], [15, 3, 1, "", "convex_hull"], [15, 2, 1, "", "copy"], [15, 2, 1, "", "crc"], [15, 2, 1, "", "export"], [15, 3, 1, "", "extents"], [15, 2, 1, "", "hash"], [15, 3, 1, "", "is_empty"], [15, 3, 1, "", "kdtree"], [15, 2, 1, "", "merge_vertices"], [15, 2, 1, "", "query"], [15, 2, 1, "", "scene"], [15, 3, 1, "", "shape"], [15, 2, 1, "", "show"], [15, 3, 1, "", "vertices"]], "trimesh.Scene": [[15, 2, 1, "", "__init__"], [15, 2, 1, "", "add_geometry"], [15, 2, 1, "", "apply_transform"], [15, 3, 1, "", "area"], [15, 3, 1, "", "bounds"], [15, 3, 1, "", "bounds_corners"], [15, 3, 1, "", "camera"], [15, 2, 1, "", "camera_rays"], [15, 3, 1, "", "camera_transform"], [15, 3, 1, "", "center_mass"], [15, 3, 1, "", "centroid"], [15, 2, 1, "", "convert_units"], [15, 3, 1, "", "convex_hull"], [15, 2, 1, "", "copy"], [15, 2, 1, "", "deduplicated"], [15, 2, 1, "", "delete_geometry"], [15, 2, 1, "", "dump"], [15, 3, 1, "", "duplicate_nodes"], [15, 2, 1, "", "explode"], [15, 2, 1, "", "export"], [15, 3, 1, "", "extents"], [15, 3, 1, "", "geometry_identifiers"], [15, 3, 1, "", "has_camera"], [15, 3, 1, "", "is_empty"], [15, 3, 1, "", "is_valid"], [15, 3, 1, "", "lights"], [15, 3, 1, "", "moment_inertia"], [15, 2, 1, "", "moment_inertia_frame"], [15, 2, 1, "", "rezero"], [15, 2, 1, "", "save_image"], [15, 3, 1, "", "scale"], [15, 2, 1, "", "scaled"], [15, 2, 1, "", "set_camera"], [15, 2, 1, "", "show"], [15, 2, 1, "", "strip_visuals"], [15, 2, 1, "", "subscene"], [15, 3, 1, "", "triangles"], [15, 3, 1, "", "triangles_node"], [15, 3, 1, "", "units"], [15, 3, 1, "", "volume"]], "trimesh.Trimesh": [[15, 2, 1, "", "__init__"], [15, 2, 1, "", "apply_transform"], [15, 3, 1, "", "area"], [15, 3, 1, "", "area_faces"], [15, 3, 1, "", "as_open3d"], [15, 3, 1, "", "body_count"], [15, 3, 1, "", "bounds"], [15, 3, 1, "", "center_mass"], [15, 3, 1, "", "centroid"], [15, 2, 1, "", "compute_stable_poses"], [15, 2, 1, "", "contains"], [15, 2, 1, "", "convert_units"], [15, 2, 1, "", "convex_decomposition"], [15, 3, 1, "", "convex_hull"], [15, 2, 1, "", "copy"], [15, 3, 1, "", "density"], [15, 2, 1, "", "difference"], [15, 3, 1, "", "edges"], [15, 3, 1, "", "edges_face"], [15, 3, 1, "", "edges_sorted"], [15, 3, 1, "", "edges_sorted_tree"], [15, 3, 1, "", "edges_sparse"], [15, 3, 1, "", "edges_unique"], [15, 3, 1, "", "edges_unique_inverse"], [15, 3, 1, "", "edges_unique_length"], [15, 3, 1, "", "euler_number"], [15, 2, 1, "", "eval_cached"], [15, 2, 1, "", "export"], [15, 3, 1, "", "extents"], [15, 3, 1, "", "face_adjacency"], [15, 3, 1, "", "face_adjacency_angles"], [15, 3, 1, "", "face_adjacency_convex"], [15, 3, 1, "", "face_adjacency_edges"], [15, 3, 1, "", "face_adjacency_edges_tree"], [15, 3, 1, "", "face_adjacency_projections"], [15, 3, 1, "", "face_adjacency_radius"], [15, 3, 1, "", "face_adjacency_span"], [15, 3, 1, "", "face_adjacency_tree"], [15, 3, 1, "", "face_adjacency_unshared"], [15, 3, 1, "", "face_angles"], [15, 3, 1, "", "face_angles_sparse"], [15, 3, 1, "", "face_neighborhood"], [15, 3, 1, "", "face_normals"], [15, 3, 1, "", "faces"], [15, 3, 1, "", "faces_sparse"], [15, 3, 1, "", "faces_unique_edges"], [15, 3, 1, "", "facets"], [15, 3, 1, "", "facets_area"], [15, 3, 1, "", "facets_boundary"], [15, 3, 1, "", "facets_normal"], [15, 3, 1, "", "facets_on_hull"], [15, 3, 1, "", "facets_origin"], [15, 2, 1, "", "fill_holes"], [15, 2, 1, "", "fix_normals"], [15, 3, 1, "", "identifier"], [15, 3, 1, "", "identifier_hash"], [15, 3, 1, "", "integral_mean_curvature"], [15, 2, 1, "", "intersection"], [15, 2, 1, "", "invert"], [15, 3, 1, "", "is_convex"], [15, 3, 1, "", "is_empty"], [15, 3, 1, "", "is_volume"], [15, 3, 1, "", "is_watertight"], [15, 3, 1, "", "is_winding_consistent"], [15, 3, 1, "", "kdtree"], [15, 3, 1, "", "mass"], [15, 3, 1, "", "mass_properties"], [15, 2, 1, "", "merge_vertices"], [15, 3, 1, "", "moment_inertia"], [15, 2, 1, "", "moment_inertia_frame"], [15, 3, 1, "", "mutable"], [15, 2, 1, "", "nondegenerate_faces"], [15, 2, 1, "", "outline"], [15, 3, 1, "", "principal_inertia_components"], [15, 3, 1, "", "principal_inertia_transform"], [15, 3, 1, "", "principal_inertia_vectors"], [15, 2, 1, "", "process"], [15, 2, 1, "", "projected"], [15, 3, 1, "", "referenced_vertices"], [15, 2, 1, "", "register"], [15, 2, 1, "", "remove_degenerate_faces"], [15, 2, 1, "", "remove_duplicate_faces"], [15, 2, 1, "", "remove_infinite_values"], [15, 2, 1, "", "remove_unreferenced_vertices"], [15, 2, 1, "", "rezero"], [15, 2, 1, "", "sample"], [15, 2, 1, "", "scene"], [15, 2, 1, "", "section"], [15, 2, 1, "", "section_multiplane"], [15, 2, 1, "", "show"], [15, 2, 1, "", "simplify_quadratic_decimation"], [15, 2, 1, "", "simplify_quadric_decimation"], [15, 2, 1, "", "slice_plane"], [15, 3, 1, "", "smooth_shaded"], [15, 2, 1, "", "smoothed"], [15, 2, 1, "", "split"], [15, 2, 1, "", "subdivide"], [15, 2, 1, "", "subdivide_loop"], [15, 2, 1, "", "subdivide_to_size"], [15, 2, 1, "", "submesh"], [15, 3, 1, "", "symmetry"], [15, 3, 1, "", "symmetry_axis"], [15, 3, 1, "", "symmetry_section"], [15, 2, 1, "", "to_dict"], [15, 3, 1, "", "triangles"], [15, 3, 1, "", "triangles_center"], [15, 3, 1, "", "triangles_cross"], [15, 3, 1, "", "triangles_tree"], [15, 2, 1, "", "union"], [15, 2, 1, "", "unique_faces"], [15, 3, 1, "", "units"], [15, 2, 1, "", "unmerge_vertices"], [15, 2, 1, "", "unwrap"], [15, 2, 1, "", "update_faces"], [15, 2, 1, "", "update_vertices"], [15, 3, 1, "", "vertex_adjacency_graph"], [15, 3, 1, "", "vertex_defects"], [15, 3, 1, "", "vertex_degree"], [15, 3, 1, "", "vertex_faces"], [15, 3, 1, "", "vertex_neighbors"], [15, 3, 1, "", "vertex_normals"], [15, 3, 1, "", "vertices"], [15, 3, 1, "", "visual"], [15, 3, 1, "", "volume"], [15, 2, 1, "", "voxelized"]], "trimesh.base": [[16, 1, 1, "", "Trimesh"]], "trimesh.base.Trimesh": [[16, 2, 1, "", "__init__"], [16, 2, 1, "", "apply_transform"], [16, 3, 1, "", "area"], [16, 3, 1, "", "area_faces"], [16, 3, 1, "", "as_open3d"], [16, 3, 1, "", "body_count"], [16, 3, 1, "", "bounds"], [16, 3, 1, "", "center_mass"], [16, 3, 1, "", "centroid"], [16, 2, 1, "", "compute_stable_poses"], [16, 2, 1, "", "contains"], [16, 2, 1, "", "convert_units"], [16, 2, 1, "", "convex_decomposition"], [16, 3, 1, "", "convex_hull"], [16, 2, 1, "", "copy"], [16, 3, 1, "", "density"], [16, 2, 1, "", "difference"], [16, 3, 1, "", "edges"], [16, 3, 1, "", "edges_face"], [16, 3, 1, "", "edges_sorted"], [16, 3, 1, "", "edges_sorted_tree"], [16, 3, 1, "", "edges_sparse"], [16, 3, 1, "", "edges_unique"], [16, 3, 1, "", "edges_unique_inverse"], [16, 3, 1, "", "edges_unique_length"], [16, 3, 1, "", "euler_number"], [16, 2, 1, "", "eval_cached"], [16, 2, 1, "", "export"], [16, 3, 1, "", "extents"], [16, 3, 1, "", "face_adjacency"], [16, 3, 1, "", "face_adjacency_angles"], [16, 3, 1, "", "face_adjacency_convex"], [16, 3, 1, "", "face_adjacency_edges"], [16, 3, 1, "", "face_adjacency_edges_tree"], [16, 3, 1, "", "face_adjacency_projections"], [16, 3, 1, "", "face_adjacency_radius"], [16, 3, 1, "", "face_adjacency_span"], [16, 3, 1, "", "face_adjacency_tree"], [16, 3, 1, "", "face_adjacency_unshared"], [16, 3, 1, "", "face_angles"], [16, 3, 1, "", "face_angles_sparse"], [16, 3, 1, "", "face_neighborhood"], [16, 3, 1, "", "face_normals"], [16, 3, 1, "", "faces"], [16, 3, 1, "", "faces_sparse"], [16, 3, 1, "", "faces_unique_edges"], [16, 3, 1, "", "facets"], [16, 3, 1, "", "facets_area"], [16, 3, 1, "", "facets_boundary"], [16, 3, 1, "", "facets_normal"], [16, 3, 1, "", "facets_on_hull"], [16, 3, 1, "", "facets_origin"], [16, 2, 1, "", "fill_holes"], [16, 2, 1, "", "fix_normals"], [16, 3, 1, "", "identifier"], [16, 3, 1, "", "identifier_hash"], [16, 3, 1, "", "integral_mean_curvature"], [16, 2, 1, "", "intersection"], [16, 2, 1, "", "invert"], [16, 3, 1, "", "is_convex"], [16, 3, 1, "", "is_empty"], [16, 3, 1, "", "is_volume"], [16, 3, 1, "", "is_watertight"], [16, 3, 1, "", "is_winding_consistent"], [16, 3, 1, "", "kdtree"], [16, 3, 1, "", "mass"], [16, 3, 1, "", "mass_properties"], [16, 2, 1, "", "merge_vertices"], [16, 3, 1, "", "moment_inertia"], [16, 2, 1, "", "moment_inertia_frame"], [16, 3, 1, "", "mutable"], [16, 2, 1, "", "nondegenerate_faces"], [16, 2, 1, "", "outline"], [16, 3, 1, "", "principal_inertia_components"], [16, 3, 1, "", "principal_inertia_transform"], [16, 3, 1, "", "principal_inertia_vectors"], [16, 2, 1, "", "process"], [16, 2, 1, "", "projected"], [16, 3, 1, "", "referenced_vertices"], [16, 2, 1, "", "register"], [16, 2, 1, "", "remove_degenerate_faces"], [16, 2, 1, "", "remove_duplicate_faces"], [16, 2, 1, "", "remove_infinite_values"], [16, 2, 1, "", "remove_unreferenced_vertices"], [16, 2, 1, "", "rezero"], [16, 2, 1, "", "sample"], [16, 2, 1, "", "scene"], [16, 2, 1, "", "section"], [16, 2, 1, "", "section_multiplane"], [16, 2, 1, "", "show"], [16, 2, 1, "", "simplify_quadratic_decimation"], [16, 2, 1, "", "simplify_quadric_decimation"], [16, 2, 1, "", "slice_plane"], [16, 3, 1, "", "smooth_shaded"], [16, 2, 1, "", "smoothed"], [16, 2, 1, "", "split"], [16, 2, 1, "", "subdivide"], [16, 2, 1, "", "subdivide_loop"], [16, 2, 1, "", "subdivide_to_size"], [16, 2, 1, "", "submesh"], [16, 3, 1, "", "symmetry"], [16, 3, 1, "", "symmetry_axis"], [16, 3, 1, "", "symmetry_section"], [16, 2, 1, "", "to_dict"], [16, 3, 1, "", "triangles"], [16, 3, 1, "", "triangles_center"], [16, 3, 1, "", "triangles_cross"], [16, 3, 1, "", "triangles_tree"], [16, 2, 1, "", "union"], [16, 2, 1, "", "unique_faces"], [16, 3, 1, "", "units"], [16, 2, 1, "", "unmerge_vertices"], [16, 2, 1, "", "unwrap"], [16, 2, 1, "", "update_faces"], [16, 2, 1, "", "update_vertices"], [16, 3, 1, "", "vertex_adjacency_graph"], [16, 3, 1, "", "vertex_defects"], [16, 3, 1, "", "vertex_degree"], [16, 3, 1, "", "vertex_faces"], [16, 3, 1, "", "vertex_neighbors"], [16, 3, 1, "", "vertex_normals"], [16, 3, 1, "", "vertices"], [16, 3, 1, "", "visual"], [16, 3, 1, "", "volume"], [16, 2, 1, "", "voxelized"]], "trimesh.boolean": [[17, 4, 1, "", "boolean_manifold"], [17, 4, 1, "", "boolean_scad"], [17, 4, 1, "", "difference"], [17, 4, 1, "", "intersection"], [17, 4, 1, "", "union"]], "trimesh.bounds": [[18, 4, 1, "", "contains"], [18, 4, 1, "", "corners"], [18, 4, 1, "", "minimum_cylinder"], [18, 4, 1, "", "oriented_bounds"], [18, 4, 1, "", "oriented_bounds_2D"], [18, 4, 1, "", "to_extents"]], "trimesh.caching": [[19, 1, 1, "", "Cache"], [19, 1, 1, "", "DataStore"], [19, 1, 1, "", "DiskCache"], [19, 1, 1, "", "TrackedArray"], [19, 4, 1, "", "cache_decorator"], [19, 4, 1, "", "hash_fallback"], [19, 4, 1, "", "sha256"], [19, 4, 1, "", "tracked_array"]], "trimesh.caching.Cache": [[19, 2, 1, "", "__init__"], [19, 2, 1, "", "clear"], [19, 2, 1, "", "delete"], [19, 2, 1, "", "id_set"], [19, 2, 1, "", "update"], [19, 2, 1, "", "verify"]], "trimesh.caching.DataStore": [[19, 2, 1, "", "__init__"], [19, 2, 1, "", "clear"], [19, 2, 1, "", "is_empty"], [19, 3, 1, "", "mutable"], [19, 2, 1, "", "pop"], [19, 2, 1, "", "update"]], "trimesh.caching.DiskCache": [[19, 2, 1, "", "__init__"], [19, 2, 1, "", "get"]], "trimesh.caching.TrackedArray": [[19, 2, 1, "", "byteswap"], [19, 2, 1, "", "fill"], [19, 2, 1, "", "itemset"], [19, 3, 1, "", "mutable"], [19, 2, 1, "", "partition"], [19, 2, 1, "", "put"], [19, 2, 1, "", "setflags"], [19, 2, 1, "", "sort"]], "trimesh.collision": [[20, 1, 1, "", "CollisionManager"], [20, 1, 1, "", "ContactData"], [20, 1, 1, "", "DistanceData"], [20, 4, 1, "", "mesh_to_BVH"], [20, 4, 1, "", "mesh_to_convex"], [20, 4, 1, "", "scene_to_collision"]], "trimesh.collision.CollisionManager": [[20, 2, 1, "", "__init__"], [20, 2, 1, "", "add_object"], [20, 2, 1, "", "in_collision_internal"], [20, 2, 1, "", "in_collision_other"], [20, 2, 1, "", "in_collision_single"], [20, 2, 1, "", "min_distance_internal"], [20, 2, 1, "", "min_distance_other"], [20, 2, 1, "", "min_distance_single"], [20, 2, 1, "", "remove_object"], [20, 2, 1, "", "set_transform"]], "trimesh.collision.ContactData": [[20, 2, 1, "", "__init__"], [20, 3, 1, "", "depth"], [20, 2, 1, "", "index"], [20, 3, 1, "", "normal"], [20, 3, 1, "", "point"]], "trimesh.collision.DistanceData": [[20, 2, 1, "", "__init__"], [20, 3, 1, "", "distance"], [20, 2, 1, "", "index"], [20, 2, 1, "", "point"]], "trimesh.comparison": [[21, 4, 1, "", "identifier_hash"], [21, 4, 1, "", "identifier_simple"]], "trimesh.constants": [[22, 1, 1, "", "ResolutionPath"], [22, 1, 1, "", "ToleranceMesh"], [22, 1, 1, "", "TolerancePath"], [22, 4, 1, "", "log_time"]], "trimesh.constants.ResolutionPath": [[22, 2, 1, "", "__init__"], [22, 5, 1, "", "export"], [22, 5, 1, "", "max_sections"], [22, 5, 1, "", "min_sections"], [22, 5, 1, "", "seg_angle"], [22, 5, 1, "", "seg_frac"]], "trimesh.constants.ToleranceMesh": [[22, 2, 1, "", "__init__"], [22, 5, 1, "", "facet_threshold"], [22, 5, 1, "", "merge"], [22, 5, 1, "", "planar"], [22, 5, 1, "", "strict"], [22, 5, 1, "", "zero"]], "trimesh.constants.TolerancePath": [[22, 2, 1, "", "__init__"], [22, 5, 1, "", "aspect_frac"], [22, 5, 1, "", "merge"], [22, 5, 1, "", "planar"], [22, 5, 1, "", "radius_frac"], [22, 5, 1, "", "radius_max"], [22, 5, 1, "", "radius_min"], [22, 5, 1, "", "seg_angle"], [22, 5, 1, "", "seg_angle_frac"], [22, 5, 1, "", "seg_angle_min"], [22, 5, 1, "", "seg_frac"], [22, 5, 1, "", "strict"], [22, 5, 1, "", "tangent"], [22, 5, 1, "", "zero"]], "trimesh.convex": [[23, 4, 1, "", "adjacency_projections"], [23, 4, 1, "", "convex_hull"], [23, 4, 1, "", "hull_points"], [23, 4, 1, "", "is_convex"]], "trimesh.creation": [[24, 4, 1, "", "annulus"], [24, 4, 1, "", "axis"], [24, 4, 1, "", "box"], [24, 4, 1, "", "camera_marker"], [24, 4, 1, "", "capsule"], [24, 4, 1, "", "cone"], [24, 4, 1, "", "cylinder"], [24, 4, 1, "", "extrude_polygon"], [24, 4, 1, "", "extrude_triangulation"], [24, 4, 1, "", "icosahedron"], [24, 4, 1, "", "icosphere"], [24, 4, 1, "", "random_soup"], [24, 4, 1, "", "revolve"], [24, 4, 1, "", "sweep_polygon"], [24, 4, 1, "", "torus"], [24, 4, 1, "", "triangulate_polygon"], [24, 4, 1, "", "truncated_prisms"], [24, 4, 1, "", "uv_sphere"]], "trimesh.curvature": [[25, 4, 1, "", "discrete_gaussian_curvature_measure"], [25, 4, 1, "", "discrete_mean_curvature_measure"], [25, 4, 1, "", "face_angles_sparse"], [25, 4, 1, "", "line_ball_intersection"], [25, 4, 1, "", "sphere_ball_intersection"], [25, 4, 1, "", "vertex_defects"]], "trimesh.decomposition": [[26, 4, 1, "", "convex_decomposition"]], "trimesh.exceptions": [[27, 1, 1, "", "ExceptionWrapper"]], "trimesh.exceptions.ExceptionWrapper": [[27, 2, 1, "", "__init__"]], "trimesh.exchange": [[29, 0, 0, "-", "binvox"], [30, 0, 0, "-", "dae"], [31, 0, 0, "-", "export"], [32, 0, 0, "-", "gltf"], [33, 0, 0, "-", "load"], [34, 0, 0, "-", "misc"], [35, 0, 0, "-", "obj"], [36, 0, 0, "-", "off"], [37, 0, 0, "-", "openctm"], [38, 0, 0, "-", "ply"], [39, 0, 0, "-", "stl"], [40, 0, 0, "-", "threedxml"], [41, 0, 0, "-", "threemf"], [42, 0, 0, "-", "urdf"], [43, 0, 0, "-", "xaml"], [44, 0, 0, "-", "xyz"]], "trimesh.exchange.binvox": [[29, 1, 1, "", "Binvox"], [29, 1, 1, "", "Binvoxer"], [29, 4, 1, "", "binvox_bytes"], [29, 4, 1, "", "binvox_header"], [29, 4, 1, "", "export_binvox"], [29, 4, 1, "", "load_binvox"], [29, 4, 1, "", "parse_binvox"], [29, 4, 1, "", "parse_binvox_header"], [29, 4, 1, "", "voxel_from_binvox"], [29, 4, 1, "", "voxelize_mesh"]], "trimesh.exchange.binvox.Binvox": [[29, 5, 1, "", "rle_data"], [29, 5, 1, "", "scale"], [29, 5, 1, "", "shape"], [29, 5, 1, "", "translate"]], "trimesh.exchange.binvox.Binvoxer": [[29, 5, 1, "", "SUPPORTED_INPUT_TYPES"], [29, 5, 1, "", "SUPPORTED_OUTPUT_TYPES"], [29, 2, 1, "", "__init__"], [29, 3, 1, "", "file_type"]], "trimesh.exchange.dae": [[30, 4, 1, "", "export_collada"], [30, 4, 1, "", "load_collada"], [30, 4, 1, "", "load_zae"]], "trimesh.exchange.export": [[31, 4, 1, "", "export_dict"], [31, 4, 1, "", "export_dict64"], [31, 4, 1, "", "export_mesh"], [31, 4, 1, "", "export_scene"], [31, 4, 1, "", "scene_to_dict"]], "trimesh.exchange.gltf": [[32, 4, 1, "", "export_glb"], [32, 4, 1, "", "export_gltf"], [32, 4, 1, "", "get_schema"], [32, 4, 1, "", "load_glb"], [32, 4, 1, "", "load_gltf"], [32, 4, 1, "", "validate"]], "trimesh.exchange.load": [[33, 4, 1, "", "available_formats"], [33, 4, 1, "", "load"], [33, 4, 1, "", "load_compressed"], [33, 4, 1, "", "load_kwargs"], [33, 4, 1, "", "load_mesh"], [33, 4, 1, "", "load_remote"], [33, 4, 1, "", "mesh_formats"], [33, 4, 1, "", "parse_file_args"]], "trimesh.exchange.misc": [[34, 4, 1, "", "load_dict"], [34, 4, 1, "", "load_meshio"]], "trimesh.exchange.obj": [[35, 4, 1, "", "export_obj"], [35, 4, 1, "", "load_obj"], [35, 4, 1, "", "parse_mtl"]], "trimesh.exchange.off": [[36, 4, 1, "", "export_off"], [36, 4, 1, "", "load_off"]], "trimesh.exchange.openctm": [[37, 4, 1, "", "load_ctm"]], "trimesh.exchange.ply": [[38, 4, 1, "", "export_draco"], [38, 4, 1, "", "export_ply"], [38, 4, 1, "", "load_draco"], [38, 4, 1, "", "load_ply"]], "trimesh.exchange.stl": [[39, 6, 1, "", "HeaderError"], [39, 4, 1, "", "export_stl"], [39, 4, 1, "", "export_stl_ascii"], [39, 4, 1, "", "load_stl"], [39, 4, 1, "", "load_stl_ascii"], [39, 4, 1, "", "load_stl_binary"]], "trimesh.exchange.threedxml": [[40, 4, 1, "", "load_3DXML"], [40, 4, 1, "", "print_element"]], "trimesh.exchange.threemf": [[41, 4, 1, "", "export_3MF"], [41, 4, 1, "", "load_3MF"]], "trimesh.exchange.urdf": [[42, 4, 1, "", "export_urdf"]], "trimesh.exchange.xaml": [[43, 4, 1, "", "load_XAML"]], "trimesh.exchange.xyz": [[44, 4, 1, "", "export_xyz"], [44, 4, 1, "", "load_xyz"]], "trimesh.geometry": [[45, 4, 1, "", "align_vectors"], [45, 4, 1, "", "faces_to_edges"], [45, 4, 1, "", "index_sparse"], [45, 4, 1, "", "mean_vertex_normals"], [45, 4, 1, "", "plane_transform"], [45, 4, 1, "", "triangulate_quads"], [45, 4, 1, "", "vector_angle"], [45, 4, 1, "", "vertex_face_indices"], [45, 4, 1, "", "weighted_vertex_normals"]], "trimesh.graph": [[46, 4, 1, "", "connected_component_labels"], [46, 4, 1, "", "connected_components"], [46, 4, 1, "", "edges_to_coo"], [46, 4, 1, "", "face_adjacency"], [46, 4, 1, "", "face_adjacency_radius"], [46, 4, 1, "", "face_adjacency_unshared"], [46, 4, 1, "", "face_neighborhood"], [46, 4, 1, "", "facets"], [46, 4, 1, "", "fill_traversals"], [46, 4, 1, "", "graph_to_svg"], [46, 4, 1, "", "is_watertight"], [46, 4, 1, "", "multigraph_collect"], [46, 4, 1, "", "multigraph_paths"], [46, 4, 1, "", "neighbors"], [46, 4, 1, "", "shared_edges"], [46, 4, 1, "", "smooth_shade"], [46, 4, 1, "", "smoothed"], [46, 4, 1, "", "split"], [46, 4, 1, "", "split_traversal"], [46, 4, 1, "", "traversals"], [46, 4, 1, "", "vertex_adjacency_graph"]], "trimesh.grouping": [[47, 4, 1, "", "blocks"], [47, 4, 1, "", "boolean_rows"], [47, 4, 1, "", "clusters"], [47, 4, 1, "", "float_to_int"], [47, 4, 1, "", "group"], [47, 4, 1, "", "group_distance"], [47, 4, 1, "", "group_min"], [47, 4, 1, "", "group_rows"], [47, 4, 1, "", "group_vectors"], [47, 4, 1, "", "hashable_rows"], [47, 4, 1, "", "merge_runs"], [47, 4, 1, "", "merge_vertices"], [47, 4, 1, "", "unique_bincount"], [47, 4, 1, "", "unique_float"], [47, 4, 1, "", "unique_ordered"], [47, 4, 1, "", "unique_rows"], [47, 4, 1, "", "unique_value_in_row"]], "trimesh.inertia": [[48, 4, 1, "", "cylinder_inertia"], [48, 4, 1, "", "principal_axis"], [48, 4, 1, "", "radial_symmetry"], [48, 4, 1, "", "scene_inertia"], [48, 4, 1, "", "sphere_inertia"], [48, 4, 1, "", "transform_inertia"]], "trimesh.interfaces": [[50, 0, 0, "-", "blender"], [51, 0, 0, "-", "generic"], [52, 0, 0, "-", "gmsh"], [53, 0, 0, "-", "scad"]], "trimesh.interfaces.blender": [[50, 4, 1, "", "boolean"], [50, 4, 1, "", "unwrap"]], "trimesh.interfaces.generic": [[51, 1, 1, "", "MeshScript"]], "trimesh.interfaces.generic.MeshScript": [[51, 2, 1, "", "__init__"], [51, 2, 1, "", "run"]], "trimesh.interfaces.gmsh": [[52, 4, 1, "", "load_gmsh"], [52, 4, 1, "", "to_volume"]], "trimesh.interfaces.scad": [[53, 4, 1, "", "boolean"], [53, 4, 1, "", "interface_scad"]], "trimesh.intersections": [[54, 4, 1, "", "mesh_multiplane"], [54, 4, 1, "", "mesh_plane"], [54, 4, 1, "", "plane_lines"], [54, 4, 1, "", "planes_lines"], [54, 4, 1, "", "slice_faces_plane"], [54, 4, 1, "", "slice_mesh_plane"]], "trimesh.interval": [[55, 4, 1, "", "intersection"], [55, 4, 1, "", "union"]], "trimesh.nsphere": [[56, 4, 1, "", "fit_nsphere"], [56, 4, 1, "", "is_nsphere"], [56, 4, 1, "", "minimum_nsphere"]], "trimesh.parent": [[57, 1, 1, "", "Geometry"], [57, 1, 1, "", "Geometry3D"]], "trimesh.parent.Geometry": [[57, 2, 1, "", "apply_scale"], [57, 2, 1, "", "apply_transform"], [57, 2, 1, "", "apply_translation"], [57, 3, 1, "", "bounds"], [57, 2, 1, "", "copy"], [57, 2, 1, "", "export"], [57, 3, 1, "", "extents"], [57, 2, 1, "", "is_empty"], [57, 3, 1, "", "scale"], [57, 2, 1, "", "show"]], "trimesh.parent.Geometry3D": [[57, 2, 1, "", "apply_obb"], [57, 3, 1, "", "bounding_box"], [57, 3, 1, "", "bounding_box_oriented"], [57, 3, 1, "", "bounding_cylinder"], [57, 3, 1, "", "bounding_primitive"], [57, 3, 1, "", "bounding_sphere"]], "trimesh.path": [[58, 1, 1, "", "Path2D"], [58, 1, 1, "", "Path3D"], [59, 0, 0, "-", "arc"], [60, 0, 0, "-", "creation"], [61, 0, 0, "-", "curve"], [62, 0, 0, "-", "entities"], [63, 0, 0, "-", "exchange"], [69, 0, 0, "-", "intersections"], [70, 0, 0, "-", "packing"], [71, 0, 0, "-", "path"], [72, 0, 0, "-", "polygons"], [73, 0, 0, "-", "raster"], [74, 0, 0, "-", "repair"], [75, 0, 0, "-", "segments"], [76, 0, 0, "-", "simplify"], [77, 0, 0, "-", "traversal"], [78, 0, 0, "-", "util"]], "trimesh.path.Path2D": [[58, 2, 1, "", "apply_obb"], [58, 2, 1, "", "apply_scale"], [58, 3, 1, "", "area"], [58, 3, 1, "", "body_count"], [58, 2, 1, "", "connected_paths"], [58, 3, 1, "", "enclosure"], [58, 3, 1, "", "enclosure_directed"], [58, 3, 1, "", "enclosure_shell"], [58, 2, 1, "", "extrude"], [58, 3, 1, "", "identifier"], [58, 3, 1, "", "identifier_hash"], [58, 2, 1, "", "medial_axis"], [58, 3, 1, "", "obb"], [58, 3, 1, "", "path_valid"], [58, 2, 1, "", "plot_discrete"], [58, 2, 1, "", "plot_entities"], [58, 3, 1, "", "polygons_closed"], [58, 3, 1, "", "polygons_full"], [58, 2, 1, "", "rasterize"], [58, 3, 1, "", "root"], [58, 2, 1, "", "sample"], [58, 2, 1, "", "show"], [58, 2, 1, "", "simplify"], [58, 2, 1, "", "simplify_spline"], [58, 2, 1, "", "split"], [58, 2, 1, "", "to_3D"], [58, 2, 1, "", "triangulate"]], "trimesh.path.Path3D": [[58, 2, 1, "", "show"], [58, 2, 1, "", "to_planar"]], "trimesh.path.arc": [[59, 1, 1, "", "ArcInfo"], [59, 4, 1, "", "arc_center"], [59, 4, 1, "", "discretize_arc"], [59, 4, 1, "", "to_threepoint"]], "trimesh.path.arc.ArcInfo": [[59, 2, 1, "", "__init__"], [59, 5, 1, "", "angles"], [59, 5, 1, "", "center"], [59, 5, 1, "", "normal"], [59, 5, 1, "", "radius"], [59, 5, 1, "", "span"]], "trimesh.path.creation": [[60, 4, 1, "", "box_outline"], [60, 4, 1, "", "circle"], [60, 4, 1, "", "circle_pattern"], [60, 4, 1, "", "grid"], [60, 4, 1, "", "rectangle"]], "trimesh.path.curve": [[61, 4, 1, "", "binomial"], [61, 4, 1, "", "discretize_bezier"], [61, 4, 1, "", "discretize_bspline"]], "trimesh.path.entities": [[62, 1, 1, "", "Arc"], [62, 1, 1, "", "BSpline"], [62, 1, 1, "", "Bezier"], [62, 1, 1, "", "Curve"], [62, 1, 1, "", "Entity"], [62, 1, 1, "", "Line"], [62, 1, 1, "", "Text"]], "trimesh.path.entities.Arc": [[62, 2, 1, "", "bounds"], [62, 2, 1, "", "center"], [62, 3, 1, "", "closed"], [62, 2, 1, "", "discrete"], [62, 3, 1, "", "is_valid"], [62, 2, 1, "", "length"]], "trimesh.path.entities.BSpline": [[62, 2, 1, "", "__init__"], [62, 2, 1, "", "discrete"], [62, 2, 1, "", "to_dict"]], "trimesh.path.entities.Bezier": [[62, 2, 1, "", "discrete"]], "trimesh.path.entities.Curve": [[62, 3, 1, "", "nodes"]], "trimesh.path.entities.Entity": [[62, 2, 1, "", "__init__"], [62, 2, 1, "", "bounds"], [62, 3, 1, "", "closed"], [62, 2, 1, "", "copy"], [62, 3, 1, "", "end_points"], [62, 2, 1, "", "explode"], [62, 3, 1, "", "is_valid"], [62, 3, 1, "", "layer"], [62, 2, 1, "", "length"], [62, 3, 1, "", "metadata"], [62, 3, 1, "", "nodes"], [62, 2, 1, "", "reverse"], [62, 2, 1, "", "to_dict"]], "trimesh.path.entities.Line": [[62, 2, 1, "", "discrete"], [62, 2, 1, "", "explode"], [62, 3, 1, "", "is_valid"]], "trimesh.path.entities.Text": [[62, 2, 1, "", "__init__"], [62, 2, 1, "", "angle"], [62, 3, 1, "", "closed"], [62, 2, 1, "", "discrete"], [62, 3, 1, "", "end_points"], [62, 3, 1, "", "is_valid"], [62, 2, 1, "", "length"], [62, 3, 1, "", "nodes"], [62, 3, 1, "", "normal"], [62, 3, 1, "", "origin"], [62, 2, 1, "", "plot"], [62, 3, 1, "", "vector"]], "trimesh.path.exchange": [[64, 0, 0, "-", "dxf"], [65, 0, 0, "-", "export"], [66, 0, 0, "-", "load"], [67, 0, 0, "-", "misc"], [68, 0, 0, "-", "svg_io"]], "trimesh.path.exchange.dxf": [[64, 4, 1, "", "bulge_to_arcs"], [64, 4, 1, "", "convert_entities"], [64, 4, 1, "", "export_dxf"], [64, 4, 1, "", "get_key"], [64, 4, 1, "", "load_dxf"]], "trimesh.path.exchange.export": [[65, 4, 1, "", "export_dict"], [65, 4, 1, "", "export_path"]], "trimesh.path.exchange.load": [[66, 4, 1, "", "load_path"], [66, 4, 1, "", "path_formats"]], "trimesh.path.exchange.misc": [[67, 4, 1, "", "dict_to_path"], [67, 4, 1, "", "edges_to_path"], [67, 4, 1, "", "faces_to_path"], [67, 4, 1, "", "lines_to_path"], [67, 4, 1, "", "linestrings_to_path"], [67, 4, 1, "", "polygon_to_path"]], "trimesh.path.exchange.svg_io": [[68, 4, 1, "", "export_svg"], [68, 4, 1, "", "svg_to_path"], [68, 4, 1, "", "transform_to_matrices"]], "trimesh.path.intersections": [[69, 4, 1, "", "line_line"]], "trimesh.path.packing": [[70, 1, 1, "", "RectangleBin"], [70, 4, 1, "", "bounds_overlap"], [70, 4, 1, "", "images"], [70, 4, 1, "", "meshes"], [70, 4, 1, "", "paths"], [70, 4, 1, "", "polygons"], [70, 4, 1, "", "rectangles"], [70, 4, 1, "", "rectangles_single"], [70, 4, 1, "", "roll_transform"], [70, 4, 1, "", "visualize"]], "trimesh.path.packing.RectangleBin": [[70, 2, 1, "", "__init__"], [70, 3, 1, "", "extents"], [70, 2, 1, "", "insert"]], "trimesh.path.path": [[71, 1, 1, "", "Path"], [71, 1, 1, "", "Path2D"], [71, 1, 1, "", "Path3D"]], "trimesh.path.path.Path": [[71, 2, 1, "", "__init__"], [71, 2, 1, "", "apply_layer"], [71, 2, 1, "", "apply_transform"], [71, 3, 1, "", "bounds"], [71, 3, 1, "", "centroid"], [71, 3, 1, "", "colors"], [71, 2, 1, "", "convert_units"], [71, 2, 1, "", "copy"], [71, 3, 1, "", "dangling"], [71, 3, 1, "", "discrete"], [71, 3, 1, "", "entities"], [71, 2, 1, "", "explode"], [71, 2, 1, "", "export"], [71, 3, 1, "", "extents"], [71, 2, 1, "", "fill_gaps"], [71, 3, 1, "", "is_closed"], [71, 3, 1, "", "is_empty"], [71, 3, 1, "", "kdtree"], [71, 3, 1, "", "layers"], [71, 3, 1, "", "length"], [71, 2, 1, "", "merge_vertices"], [71, 3, 1, "", "paths"], [71, 2, 1, "", "process"], [71, 3, 1, "", "referenced_vertices"], [71, 2, 1, "", "remove_duplicate_entities"], [71, 2, 1, "", "remove_entities"], [71, 2, 1, "", "remove_invalid"], [71, 2, 1, "", "remove_unreferenced_vertices"], [71, 2, 1, "", "replace_vertex_references"], [71, 2, 1, "", "rezero"], [71, 2, 1, "", "scene"], [71, 2, 1, "", "to_dict"], [71, 3, 1, "", "units"], [71, 3, 1, "", "vertex_graph"], [71, 3, 1, "", "vertex_nodes"], [71, 3, 1, "", "vertices"]], "trimesh.path.path.Path2D": [[71, 2, 1, "", "apply_obb"], [71, 2, 1, "", "apply_scale"], [71, 3, 1, "", "area"], [71, 3, 1, "", "body_count"], [71, 2, 1, "", "connected_paths"], [71, 3, 1, "", "enclosure"], [71, 3, 1, "", "enclosure_directed"], [71, 3, 1, "", "enclosure_shell"], [71, 2, 1, "", "extrude"], [71, 3, 1, "", "identifier"], [71, 3, 1, "", "identifier_hash"], [71, 2, 1, "", "medial_axis"], [71, 3, 1, "", "obb"], [71, 3, 1, "", "path_valid"], [71, 2, 1, "", "plot_discrete"], [71, 2, 1, "", "plot_entities"], [71, 3, 1, "", "polygons_closed"], [71, 3, 1, "", "polygons_full"], [71, 2, 1, "", "rasterize"], [71, 3, 1, "", "root"], [71, 2, 1, "", "sample"], [71, 2, 1, "", "show"], [71, 2, 1, "", "simplify"], [71, 2, 1, "", "simplify_spline"], [71, 2, 1, "", "split"], [71, 2, 1, "", "to_3D"], [71, 2, 1, "", "triangulate"]], "trimesh.path.path.Path3D": [[71, 2, 1, "", "show"], [71, 2, 1, "", "to_planar"]], "trimesh.path.polygons": [[72, 4, 1, "", "edges_to_polygons"], [72, 4, 1, "", "enclosure_tree"], [72, 4, 1, "", "identifier"], [72, 4, 1, "", "medial_axis"], [72, 4, 1, "", "paths_to_polygons"], [72, 4, 1, "", "plot"], [72, 4, 1, "", "polygon_bounds"], [72, 4, 1, "", "polygon_obb"], [72, 4, 1, "", "polygon_scale"], [72, 4, 1, "", "polygons_obb"], [72, 4, 1, "", "projected"], [72, 4, 1, "", "random_polygon"], [72, 4, 1, "", "repair_invalid"], [72, 4, 1, "", "resample_boundaries"], [72, 4, 1, "", "sample"], [72, 4, 1, "", "second_moments"], [72, 4, 1, "", "stack_boundaries"], [72, 4, 1, "", "transform_polygon"]], "trimesh.path.raster": [[73, 4, 1, "", "rasterize"]], "trimesh.path.repair": [[74, 4, 1, "", "fill_gaps"]], "trimesh.path.segments": [[75, 4, 1, "", "clean"], [75, 4, 1, "", "colinear_pairs"], [75, 4, 1, "", "extrude"], [75, 4, 1, "", "length"], [75, 4, 1, "", "parameters_to_segments"], [75, 4, 1, "", "resample"], [75, 4, 1, "", "segments_to_parameters"], [75, 4, 1, "", "split"], [75, 4, 1, "", "to_svg"], [75, 4, 1, "", "unique"]], "trimesh.path.simplify": [[76, 4, 1, "", "fit_circle_check"], [76, 4, 1, "", "is_circle"], [76, 4, 1, "", "merge_colinear"], [76, 4, 1, "", "points_to_spline_entity"], [76, 4, 1, "", "resample_spline"], [76, 4, 1, "", "simplify_basic"], [76, 4, 1, "", "simplify_spline"]], "trimesh.path.traversal": [[77, 1, 1, "", "PathSample"], [77, 4, 1, "", "closed_paths"], [77, 4, 1, "", "discretize_path"], [77, 4, 1, "", "resample_path"], [77, 4, 1, "", "split"], [77, 4, 1, "", "vertex_graph"], [77, 4, 1, "", "vertex_to_entity_path"]], "trimesh.path.traversal.PathSample": [[77, 2, 1, "", "__init__"], [77, 2, 1, "", "sample"], [77, 2, 1, "", "truncate"]], "trimesh.path.util": [[78, 4, 1, "", "concatenate"]], "trimesh.permutate": [[79, 1, 1, "", "Permutator"], [79, 4, 1, "", "noise"], [79, 4, 1, "", "tessellation"], [79, 4, 1, "", "transform"]], "trimesh.permutate.Permutator": [[79, 2, 1, "", "__init__"], [79, 2, 1, "", "noise"], [79, 2, 1, "", "tessellation"], [79, 2, 1, "", "transform"]], "trimesh.points": [[80, 1, 1, "", "PointCloud"], [80, 4, 1, "", "k_means"], [80, 4, 1, "", "major_axis"], [80, 4, 1, "", "plane_fit"], [80, 4, 1, "", "plot_points"], [80, 4, 1, "", "point_plane_distance"], [80, 4, 1, "", "project_to_plane"], [80, 4, 1, "", "radial_sort"], [80, 4, 1, "", "remove_close"], [80, 4, 1, "", "tsp"]], "trimesh.points.PointCloud": [[80, 2, 1, "", "__init__"], [80, 2, 1, "", "apply_transform"], [80, 3, 1, "", "bounds"], [80, 3, 1, "", "centroid"], [80, 3, 1, "", "colors"], [80, 3, 1, "", "convex_hull"], [80, 2, 1, "", "copy"], [80, 2, 1, "", "crc"], [80, 2, 1, "", "export"], [80, 3, 1, "", "extents"], [80, 2, 1, "", "hash"], [80, 3, 1, "", "is_empty"], [80, 3, 1, "", "kdtree"], [80, 2, 1, "", "merge_vertices"], [80, 2, 1, "", "query"], [80, 2, 1, "", "scene"], [80, 3, 1, "", "shape"], [80, 2, 1, "", "show"], [80, 3, 1, "", "vertices"]], "trimesh.poses": [[81, 4, 1, "", "compute_stable_poses"]], "trimesh.primitives": [[82, 1, 1, "", "Box"], [82, 1, 1, "", "Capsule"], [82, 1, 1, "", "Cylinder"], [82, 1, 1, "", "Extrusion"], [82, 1, 1, "", "Primitive"], [82, 1, 1, "", "PrimitiveAttributes"], [82, 1, 1, "", "Sphere"]], "trimesh.primitives.Box": [[82, 2, 1, "", "__init__"], [82, 2, 1, "", "as_outline"], [82, 3, 1, "", "is_oriented"], [82, 2, 1, "", "sample_grid"], [82, 2, 1, "", "sample_volume"], [82, 2, 1, "", "to_dict"], [82, 3, 1, "", "transform"], [82, 3, 1, "", "volume"]], "trimesh.primitives.Capsule": [[82, 2, 1, "", "__init__"], [82, 3, 1, "", "direction"], [82, 2, 1, "", "to_dict"], [82, 3, 1, "", "transform"]], "trimesh.primitives.Cylinder": [[82, 2, 1, "", "__init__"], [82, 2, 1, "", "buffer"], [82, 3, 1, "", "direction"], [82, 3, 1, "", "moment_inertia"], [82, 3, 1, "", "segment"], [82, 2, 1, "", "to_dict"], [82, 3, 1, "", "volume"]], "trimesh.primitives.Extrusion": [[82, 2, 1, "", "__init__"], [82, 3, 1, "", "area"], [82, 3, 1, "", "bounding_box_oriented"], [82, 2, 1, "", "buffer"], [82, 3, 1, "", "direction"], [82, 3, 1, "", "origin"], [82, 2, 1, "", "slide"], [82, 2, 1, "", "to_dict"], [82, 3, 1, "", "transform"], [82, 3, 1, "", "volume"]], "trimesh.primitives.Primitive": [[82, 2, 1, "", "__init__"], [82, 2, 1, "", "apply_transform"], [82, 2, 1, "", "copy"], [82, 3, 1, "", "face_normals"], [82, 3, 1, "", "faces"], [82, 2, 1, "", "to_dict"], [82, 2, 1, "", "to_mesh"], [82, 3, 1, "", "transform"], [82, 3, 1, "", "vertices"]], "trimesh.primitives.PrimitiveAttributes": [[82, 2, 1, "", "__init__"]], "trimesh.primitives.Sphere": [[82, 2, 1, "", "__init__"], [82, 3, 1, "", "area"], [82, 3, 1, "", "bounding_box_oriented"], [82, 3, 1, "", "bounds"], [82, 3, 1, "", "center"], [82, 3, 1, "", "moment_inertia"], [82, 2, 1, "", "to_dict"], [82, 3, 1, "", "volume"]], "trimesh.proximity": [[83, 1, 1, "", "NearestQueryResult"], [83, 1, 1, "", "ProximityQuery"], [83, 4, 1, "", "closest_point"], [83, 4, 1, "", "closest_point_naive"], [83, 4, 1, "", "longest_ray"], [83, 4, 1, "", "max_tangent_sphere"], [83, 4, 1, "", "nearby_faces"], [83, 4, 1, "", "signed_distance"], [83, 4, 1, "", "thickness"]], "trimesh.proximity.NearestQueryResult": [[83, 2, 1, "", "__init__"], [83, 2, 1, "", "has_normals"]], "trimesh.proximity.ProximityQuery": [[83, 2, 1, "", "__init__"], [83, 2, 1, "", "on_surface"], [83, 2, 1, "", "signed_distance"], [83, 2, 1, "", "vertex"]], "trimesh.ray": [[85, 0, 0, "-", "ray_pyembree"], [86, 0, 0, "-", "ray_triangle"], [87, 0, 0, "-", "ray_util"]], "trimesh.ray.ray_pyembree": [[85, 1, 1, "", "RayMeshIntersector"]], "trimesh.ray.ray_pyembree.RayMeshIntersector": [[85, 2, 1, "", "__init__"], [85, 2, 1, "", "contains_points"], [85, 2, 1, "", "intersects_any"], [85, 2, 1, "", "intersects_first"], [85, 2, 1, "", "intersects_id"], [85, 2, 1, "", "intersects_location"]], "trimesh.ray.ray_triangle": [[86, 1, 1, "", "RayMeshIntersector"], [86, 4, 1, "", "ray_bounds"], [86, 4, 1, "", "ray_triangle_candidates"], [86, 4, 1, "", "ray_triangle_id"]], "trimesh.ray.ray_triangle.RayMeshIntersector": [[86, 2, 1, "", "__init__"], [86, 2, 1, "", "contains_points"], [86, 2, 1, "", "intersects_any"], [86, 2, 1, "", "intersects_first"], [86, 2, 1, "", "intersects_id"], [86, 2, 1, "", "intersects_location"]], "trimesh.registration": [[88, 4, 1, "", "icp"], [88, 4, 1, "", "mesh_other"], [88, 4, 1, "", "nricp_amberg"], [88, 4, 1, "", "nricp_sumner"], [88, 4, 1, "", "procrustes"]], "trimesh.remesh": [[89, 4, 1, "", "subdivide"], [89, 4, 1, "", "subdivide_loop"], [89, 4, 1, "", "subdivide_to_size"]], "trimesh.rendering": [[90, 4, 1, "", "colors_to_gl"], [90, 4, 1, "", "convert_to_vertexlist"], [90, 4, 1, "", "light_to_gl"], [90, 4, 1, "", "material_to_texture"], [90, 4, 1, "", "matrix_to_gl"], [90, 4, 1, "", "mesh_to_vertexlist"], [90, 4, 1, "", "path_to_vertexlist"], [90, 4, 1, "", "points_to_vertexlist"], [90, 4, 1, "", "vector_to_gl"]], "trimesh.repair": [[91, 4, 1, "", "broken_faces"], [91, 4, 1, "", "fill_holes"], [91, 4, 1, "", "fix_inversion"], [91, 4, 1, "", "fix_normals"], [91, 4, 1, "", "fix_winding"], [91, 4, 1, "", "stitch"]], "trimesh.resolvers": [[92, 1, 1, "", "FilePathResolver"], [92, 1, 1, "", "GithubResolver"], [92, 1, 1, "", "Resolver"], [92, 1, 1, "", "WebResolver"], [92, 1, 1, "", "ZipResolver"], [92, 4, 1, "", "nearby_names"]], "trimesh.resolvers.FilePathResolver": [[92, 2, 1, "", "__init__"], [92, 2, 1, "", "get"], [92, 2, 1, "", "keys"], [92, 2, 1, "", "namespaced"], [92, 2, 1, "", "write"]], "trimesh.resolvers.GithubResolver": [[92, 2, 1, "", "__init__"], [92, 2, 1, "", "get"], [92, 2, 1, "", "keys"], [92, 2, 1, "", "namespaced"], [92, 2, 1, "", "write"], [92, 3, 1, "", "zipped"]], "trimesh.resolvers.Resolver": [[92, 2, 1, "", "__init__"], [92, 2, 1, "", "get"], [92, 2, 1, "", "namespaced"], [92, 2, 1, "", "write"]], "trimesh.resolvers.WebResolver": [[92, 2, 1, "", "__init__"], [92, 2, 1, "", "get"], [92, 2, 1, "", "namespaced"], [92, 2, 1, "", "write"]], "trimesh.resolvers.ZipResolver": [[92, 2, 1, "", "__init__"], [92, 2, 1, "", "export"], [92, 2, 1, "", "get"], [92, 2, 1, "", "keys"], [92, 2, 1, "", "namespaced"], [92, 2, 1, "", "write"]], "trimesh.resources": [[93, 4, 1, "", "get"], [93, 4, 1, "", "get_schema"]], "trimesh.sample": [[94, 4, 1, "", "sample_surface"], [94, 4, 1, "", "sample_surface_even"], [94, 4, 1, "", "sample_surface_sphere"], [94, 4, 1, "", "volume_mesh"], [94, 4, 1, "", "volume_rectangular"]], "trimesh.scene": [[95, 1, 1, "", "Camera"], [95, 1, 1, "", "Scene"], [96, 0, 0, "-", "cameras"], [97, 0, 0, "-", "lighting"], [98, 0, 0, "-", "scene"], [95, 4, 1, "", "split_scene"], [99, 0, 0, "-", "transforms"]], "trimesh.scene.Camera": [[95, 3, 1, "", "K"], [95, 2, 1, "", "__init__"], [95, 2, 1, "", "angles"], [95, 2, 1, "", "copy"], [95, 3, 1, "", "focal"], [95, 3, 1, "", "fov"], [95, 2, 1, "", "look_at"], [95, 3, 1, "", "resolution"], [95, 2, 1, "", "to_rays"]], "trimesh.scene.Scene": [[95, 2, 1, "", "__init__"], [95, 2, 1, "", "add_geometry"], [95, 2, 1, "", "apply_transform"], [95, 3, 1, "", "area"], [95, 3, 1, "", "bounds"], [95, 3, 1, "", "bounds_corners"], [95, 3, 1, "", "camera"], [95, 2, 1, "", "camera_rays"], [95, 3, 1, "", "camera_transform"], [95, 3, 1, "", "center_mass"], [95, 3, 1, "", "centroid"], [95, 2, 1, "", "convert_units"], [95, 3, 1, "", "convex_hull"], [95, 2, 1, "", "copy"], [95, 2, 1, "", "deduplicated"], [95, 2, 1, "", "delete_geometry"], [95, 2, 1, "", "dump"], [95, 3, 1, "", "duplicate_nodes"], [95, 2, 1, "", "explode"], [95, 2, 1, "", "export"], [95, 3, 1, "", "extents"], [95, 3, 1, "", "geometry_identifiers"], [95, 3, 1, "", "has_camera"], [95, 3, 1, "", "is_empty"], [95, 3, 1, "", "is_valid"], [95, 3, 1, "", "lights"], [95, 3, 1, "", "moment_inertia"], [95, 2, 1, "", "moment_inertia_frame"], [95, 2, 1, "", "rezero"], [95, 2, 1, "", "save_image"], [95, 3, 1, "", "scale"], [95, 2, 1, "", "scaled"], [95, 2, 1, "", "set_camera"], [95, 2, 1, "", "show"], [95, 2, 1, "", "strip_visuals"], [95, 2, 1, "", "subscene"], [95, 3, 1, "", "triangles"], [95, 3, 1, "", "triangles_node"], [95, 3, 1, "", "units"], [95, 3, 1, "", "volume"]], "trimesh.scene.cameras": [[96, 1, 1, "", "Camera"], [96, 4, 1, "", "camera_to_rays"], [96, 4, 1, "", "look_at"], [96, 4, 1, "", "ray_pixel_coords"]], "trimesh.scene.cameras.Camera": [[96, 3, 1, "", "K"], [96, 2, 1, "", "__init__"], [96, 2, 1, "", "angles"], [96, 2, 1, "", "copy"], [96, 3, 1, "", "focal"], [96, 3, 1, "", "fov"], [96, 2, 1, "", "look_at"], [96, 3, 1, "", "resolution"], [96, 2, 1, "", "to_rays"]], "trimesh.scene.lighting": [[97, 1, 1, "", "DirectionalLight"], [97, 1, 1, "", "Light"], [97, 1, 1, "", "PointLight"], [97, 1, 1, "", "SpotLight"], [97, 4, 1, "", "autolight"]], "trimesh.scene.lighting.DirectionalLight": [[97, 2, 1, "", "__init__"], [97, 5, 1, "", "color"], [97, 5, 1, "", "intensity"], [97, 5, 1, "", "name"], [97, 5, 1, "", "radius"]], "trimesh.scene.lighting.Light": [[97, 2, 1, "", "__init__"], [97, 3, 1, "id0", "color"], [97, 3, 1, "id1", "intensity"], [97, 5, 1, "", "name"], [97, 3, 1, "id2", "radius"]], "trimesh.scene.lighting.PointLight": [[97, 2, 1, "", "__init__"], [97, 5, 1, "", "color"], [97, 5, 1, "", "intensity"], [97, 5, 1, "", "name"], [97, 5, 1, "", "radius"]], "trimesh.scene.lighting.SpotLight": [[97, 2, 1, "", "__init__"], [97, 5, 1, "", "color"], [97, 3, 1, "id3", "innerConeAngle"], [97, 5, 1, "", "intensity"], [97, 5, 1, "", "name"], [97, 3, 1, "id4", "outerConeAngle"], [97, 5, 1, "", "radius"]], "trimesh.scene.scene": [[98, 1, 1, "", "Scene"], [98, 4, 1, "", "append_scenes"], [98, 4, 1, "", "split_scene"]], "trimesh.scene.scene.Scene": [[98, 2, 1, "", "__init__"], [98, 2, 1, "", "add_geometry"], [98, 2, 1, "", "apply_transform"], [98, 3, 1, "", "area"], [98, 3, 1, "", "bounds"], [98, 3, 1, "", "bounds_corners"], [98, 3, 1, "", "camera"], [98, 2, 1, "", "camera_rays"], [98, 3, 1, "", "camera_transform"], [98, 3, 1, "", "center_mass"], [98, 3, 1, "", "centroid"], [98, 2, 1, "", "convert_units"], [98, 3, 1, "", "convex_hull"], [98, 2, 1, "", "copy"], [98, 2, 1, "", "deduplicated"], [98, 2, 1, "", "delete_geometry"], [98, 2, 1, "", "dump"], [98, 3, 1, "", "duplicate_nodes"], [98, 2, 1, "", "explode"], [98, 2, 1, "", "export"], [98, 3, 1, "", "extents"], [98, 3, 1, "", "geometry_identifiers"], [98, 3, 1, "", "has_camera"], [98, 3, 1, "", "is_empty"], [98, 3, 1, "", "is_valid"], [98, 3, 1, "", "lights"], [98, 3, 1, "", "moment_inertia"], [98, 2, 1, "", "moment_inertia_frame"], [98, 2, 1, "", "rezero"], [98, 2, 1, "", "save_image"], [98, 3, 1, "", "scale"], [98, 2, 1, "", "scaled"], [98, 2, 1, "", "set_camera"], [98, 2, 1, "", "show"], [98, 2, 1, "", "strip_visuals"], [98, 2, 1, "", "subscene"], [98, 3, 1, "", "triangles"], [98, 3, 1, "", "triangles_node"], [98, 3, 1, "", "units"], [98, 3, 1, "", "volume"]], "trimesh.scene.transforms": [[99, 1, 1, "", "EnforcedForest"], [99, 1, 1, "", "SceneGraph"], [99, 4, 1, "", "kwargs_to_matrix"]], "trimesh.scene.transforms.EnforcedForest": [[99, 2, 1, "", "__init__"], [99, 2, 1, "", "add_edge"], [99, 3, 1, "", "children"], [99, 3, 1, "", "nodes"], [99, 2, 1, "", "remove_node"], [99, 2, 1, "", "shortest_path"], [99, 2, 1, "", "successors"]], "trimesh.scene.transforms.SceneGraph": [[99, 2, 1, "", "__init__"], [99, 2, 1, "", "clear"], [99, 2, 1, "", "copy"], [99, 2, 1, "", "from_edgelist"], [99, 3, 1, "", "geometry_nodes"], [99, 2, 1, "", "get"], [99, 2, 1, "", "load"], [99, 3, 1, "", "nodes"], [99, 3, 1, "", "nodes_geometry"], [99, 2, 1, "", "remove_geometries"], [99, 2, 1, "", "show"], [99, 2, 1, "", "to_edgelist"], [99, 2, 1, "", "to_flattened"], [99, 2, 1, "", "to_gltf"], [99, 2, 1, "", "to_networkx"], [99, 2, 1, "", "update"]], "trimesh.schemas": [[100, 4, 1, "", "resolve"]], "trimesh.smoothing": [[101, 4, 1, "", "dilate_slope"], [101, 4, 1, "", "filter_humphrey"], [101, 4, 1, "", "filter_laplacian"], [101, 4, 1, "", "filter_mut_dif_laplacian"], [101, 4, 1, "", "filter_taubin"], [101, 4, 1, "", "get_vertices_normals"], [101, 4, 1, "", "laplacian_calculation"]], "trimesh.transformations": [[102, 1, 1, "", "Arcball"], [102, 4, 1, "", "affine_matrix_from_points"], [102, 4, 1, "", "angle_between_vectors"], [102, 4, 1, "", "arcball_constrain_to_axis"], [102, 4, 1, "", "arcball_map_to_sphere"], [102, 4, 1, "", "arcball_nearest_axis"], [102, 4, 1, "", "clip_matrix"], [102, 4, 1, "", "compose_matrix"], [102, 4, 1, "", "concatenate_matrices"], [102, 4, 1, "", "decompose_matrix"], [102, 4, 1, "", "euler_from_matrix"], [102, 4, 1, "", "euler_from_quaternion"], [102, 4, 1, "", "euler_matrix"], [102, 4, 1, "", "fix_rigid"], [102, 4, 1, "", "flips_winding"], [102, 4, 1, "", "identity_matrix"], [102, 4, 1, "", "inverse_matrix"], [102, 4, 1, "", "is_rigid"], [102, 4, 1, "", "is_same_quaternion"], [102, 4, 1, "", "is_same_transform"], [102, 4, 1, "", "orthogonalization_matrix"], [102, 4, 1, "", "planar_matrix"], [102, 4, 1, "", "planar_matrix_to_3D"], [102, 4, 1, "", "projection_from_matrix"], [102, 4, 1, "", "projection_matrix"], [102, 4, 1, "", "quaternion_about_axis"], [102, 4, 1, "", "quaternion_conjugate"], [102, 4, 1, "", "quaternion_from_euler"], [102, 4, 1, "", "quaternion_from_matrix"], [102, 4, 1, "", "quaternion_imag"], [102, 4, 1, "", "quaternion_inverse"], [102, 4, 1, "", "quaternion_matrix"], [102, 4, 1, "", "quaternion_multiply"], [102, 4, 1, "", "quaternion_real"], [102, 4, 1, "", "quaternion_slerp"], [102, 4, 1, "", "random_quaternion"], [102, 4, 1, "", "random_rotation_matrix"], [102, 4, 1, "", "random_vector"], [102, 4, 1, "", "reflection_from_matrix"], [102, 4, 1, "", "reflection_matrix"], [102, 4, 1, "", "rotation_from_matrix"], [102, 4, 1, "", "rotation_matrix"], [102, 4, 1, "", "scale_and_translate"], [102, 4, 1, "", "scale_from_matrix"], [102, 4, 1, "", "scale_matrix"], [102, 4, 1, "", "shear_from_matrix"], [102, 4, 1, "", "shear_matrix"], [102, 4, 1, "", "spherical_matrix"], [102, 4, 1, "", "superimposition_matrix"], [102, 4, 1, "", "transform_around"], [102, 4, 1, "", "transform_points"], [102, 4, 1, "", "translation_from_matrix"], [102, 4, 1, "", "translation_matrix"], [102, 4, 1, "", "unit_vector"], [102, 4, 1, "", "vector_norm"], [102, 4, 1, "", "vector_product"]], "trimesh.transformations.Arcball": [[102, 2, 1, "", "__init__"], [102, 3, 1, "", "constrain"], [102, 2, 1, "", "down"], [102, 2, 1, "", "drag"], [102, 2, 1, "", "matrix"], [102, 2, 1, "", "next"], [102, 2, 1, "", "place"], [102, 2, 1, "", "setaxes"]], "trimesh.triangles": [[103, 1, 1, "", "MassProperties"], [103, 4, 1, "", "all_coplanar"], [103, 4, 1, "", "angles"], [103, 4, 1, "", "any_coplanar"], [103, 4, 1, "", "area"], [103, 4, 1, "", "barycentric_to_points"], [103, 4, 1, "", "bounds_tree"], [103, 4, 1, "", "closest_point"], [103, 4, 1, "", "cross"], [103, 4, 1, "", "extents"], [103, 4, 1, "", "mass_properties"], [103, 4, 1, "", "nondegenerate"], [103, 4, 1, "", "normals"], [103, 4, 1, "", "points_to_barycentric"], [103, 4, 1, "", "to_kwargs"], [103, 4, 1, "", "windings_aligned"]], "trimesh.triangles.MassProperties": [[103, 2, 1, "", "__init__"], [103, 5, 1, "", "center_mass"], [103, 5, 1, "", "density"], [103, 5, 1, "", "inertia"], [103, 5, 1, "", "mass"], [103, 5, 1, "", "volume"]], "trimesh.typed": [[104, 1, 1, "", "IO"], [104, 1, 1, "", "float64"], [104, 1, 1, "", "int64"]], "trimesh.typed.IO": [[104, 2, 1, "", "close"], [104, 3, 1, "", "closed"], [104, 2, 1, "", "fileno"], [104, 2, 1, "", "flush"], [104, 2, 1, "", "isatty"], [104, 3, 1, "", "mode"], [104, 3, 1, "", "name"], [104, 2, 1, "", "read"], [104, 2, 1, "", "readable"], [104, 2, 1, "", "readline"], [104, 2, 1, "", "readlines"], [104, 2, 1, "", "seek"], [104, 2, 1, "", "seekable"], [104, 2, 1, "", "tell"], [104, 2, 1, "", "truncate"], [104, 2, 1, "", "writable"], [104, 2, 1, "", "write"], [104, 2, 1, "", "writelines"]], "trimesh.typed.float64": [[104, 2, 1, "", "as_integer_ratio"], [104, 2, 1, "", "is_integer"]], "trimesh.typed.int64": [[104, 2, 1, "", "bit_count"]], "trimesh.units": [[105, 4, 1, "", "keys"], [105, 4, 1, "", "to_inch"], [105, 4, 1, "", "unit_conversion"], [105, 4, 1, "", "units_from_metadata"]], "trimesh.util": [[106, 1, 1, "", "FunctionRegistry"], [106, 4, 1, "", "allclose"], [106, 4, 1, "", "append_faces"], [106, 4, 1, "", "array_to_encoded"], [106, 4, 1, "", "array_to_string"], [106, 4, 1, "", "attach_to_log"], [106, 4, 1, "", "bounds_tree"], [106, 4, 1, "", "comment_strip"], [106, 4, 1, "", "compress"], [106, 4, 1, "", "concatenate"], [106, 4, 1, "", "convert_like"], [106, 4, 1, "", "decimal_to_digits"], [106, 4, 1, "", "decode_keys"], [106, 4, 1, "", "decode_text"], [106, 4, 1, "", "decompress"], [106, 4, 1, "", "diagonal_dot"], [106, 4, 1, "", "distance_to_end"], [106, 4, 1, "", "encoded_to_array"], [106, 4, 1, "", "euclidean"], [106, 4, 1, "", "generate_basis"], [106, 4, 1, "", "grid_arange"], [106, 4, 1, "", "grid_linspace"], [106, 4, 1, "", "has_module"], [106, 4, 1, "", "is_binary_file"], [106, 4, 1, "", "is_ccw"], [106, 4, 1, "", "is_file"], [106, 4, 1, "", "is_instance_named"], [106, 4, 1, "", "is_none"], [106, 4, 1, "", "is_pathlib"], [106, 4, 1, "", "is_sequence"], [106, 4, 1, "", "is_shape"], [106, 4, 1, "", "is_string"], [106, 4, 1, "", "isclose"], [106, 4, 1, "", "jsonify"], [106, 4, 1, "", "make_sequence"], [106, 4, 1, "", "multi_dict"], [106, 4, 1, "", "pairwise"], [106, 4, 1, "", "row_norm"], [106, 4, 1, "", "sigfig_int"], [106, 4, 1, "", "sigfig_round"], [106, 4, 1, "", "spherical_to_vector"], [106, 4, 1, "", "split_extension"], [106, 4, 1, "", "stack_3D"], [106, 4, 1, "", "stack_lines"], [106, 4, 1, "", "structured_array_to_string"], [106, 4, 1, "", "submesh"], [106, 4, 1, "", "to_ascii"], [106, 4, 1, "", "tolist"], [106, 4, 1, "", "triangle_fans_to_faces"], [106, 4, 1, "", "triangle_strips_to_faces"], [106, 4, 1, "", "type_bases"], [106, 4, 1, "", "type_named"], [106, 4, 1, "", "unique_id"], [106, 4, 1, "", "unique_name"], [106, 4, 1, "", "unitize"], [106, 4, 1, "", "vector_hemisphere"], [106, 4, 1, "", "vector_to_spherical"], [106, 4, 1, "", "vstack_empty"], [106, 4, 1, "", "wrap_as_stream"], [106, 4, 1, "", "write_encoded"], [106, 4, 1, "", "zero_pad"]], "trimesh.util.FunctionRegistry": [[106, 2, 1, "", "__init__"]], "trimesh.viewer": [[108, 4, 1, "", "in_notebook"], [109, 0, 0, "-", "notebook"], [108, 4, 1, "", "scene_to_html"], [108, 4, 1, "", "scene_to_notebook"], [110, 0, 0, "-", "trackball"]], "trimesh.viewer.notebook": [[109, 4, 1, "", "in_notebook"], [109, 4, 1, "", "scene_to_html"], [109, 4, 1, "", "scene_to_notebook"]], "trimesh.viewer.trackball": [[110, 1, 1, "", "Trackball"]], "trimesh.viewer.trackball.Trackball": [[110, 5, 1, "", "STATE_PAN"], [110, 5, 1, "", "STATE_ROLL"], [110, 5, 1, "", "STATE_ROTATE"], [110, 5, 1, "", "STATE_ZOOM"], [110, 2, 1, "", "__init__"], [110, 2, 1, "", "down"], [110, 2, 1, "", "drag"], [110, 3, 1, "", "pose"], [110, 2, 1, "", "resize"], [110, 2, 1, "", "rotate"], [110, 2, 1, "", "scroll"], [110, 2, 1, "", "set_state"]], "trimesh.visual": [[113, 1, 1, "", "ColorVisuals"], [113, 1, 1, "", "TextureVisuals"], [114, 0, 0, "-", "base"], [115, 0, 0, "-", "color"], [113, 4, 1, "", "create_visual"], [116, 0, 0, "-", "gloss"], [113, 4, 1, "", "interpolate"], [113, 4, 1, "", "linear_color_map"], [117, 0, 0, "-", "material"], [118, 0, 0, "-", "objects"], [113, 4, 1, "", "random_color"], [119, 0, 0, "-", "texture"], [113, 4, 1, "", "to_rgba"], [113, 4, 1, "", "uv_to_color"], [113, 4, 1, "", "uv_to_interpolated_color"]], "trimesh.visual.ColorVisuals": [[113, 2, 1, "", "__init__"], [113, 2, 1, "", "concatenate"], [113, 2, 1, "", "copy"], [113, 3, 1, "", "defined"], [113, 3, 1, "", "face_colors"], [113, 2, 1, "", "face_subset"], [113, 3, 1, "", "kind"], [113, 3, 1, "", "main_color"], [113, 2, 1, "", "to_texture"], [113, 3, 1, "", "transparency"], [113, 2, 1, "", "update_faces"], [113, 2, 1, "", "update_vertices"], [113, 3, 1, "", "vertex_colors"]], "trimesh.visual.TextureVisuals": [[113, 2, 1, "", "__init__"], [113, 2, 1, "", "concatenate"], [113, 2, 1, "", "copy"], [113, 3, 1, "", "defined"], [113, 2, 1, "", "face_subset"], [113, 3, 1, "", "kind"], [113, 2, 1, "", "to_color"], [113, 2, 1, "", "update_faces"], [113, 2, 1, "", "update_vertices"], [113, 3, 1, "", "uv"]], "trimesh.visual.base": [[114, 1, 1, "", "Visuals"]], "trimesh.visual.base.Visuals": [[114, 2, 1, "", "concatenate"], [114, 2, 1, "", "copy"], [114, 3, 1, "", "kind"], [114, 2, 1, "", "update_faces"], [114, 2, 1, "", "update_vertices"]], "trimesh.visual.color": [[115, 1, 1, "", "ColorVisuals"], [115, 1, 1, "", "VertexColor"], [115, 4, 1, "", "color_to_uv"], [115, 4, 1, "", "colors_to_materials"], [115, 4, 1, "", "face_to_vertex_color"], [115, 4, 1, "", "hex_to_rgba"], [115, 4, 1, "", "interpolate"], [115, 4, 1, "", "linear_color_map"], [115, 4, 1, "", "random_color"], [115, 4, 1, "", "to_float"], [115, 4, 1, "", "to_rgba"], [115, 4, 1, "", "uv_to_color"], [115, 4, 1, "", "uv_to_interpolated_color"], [115, 4, 1, "", "vertex_to_face_color"]], "trimesh.visual.color.ColorVisuals": [[115, 2, 1, "", "__init__"], [115, 2, 1, "", "concatenate"], [115, 2, 1, "", "copy"], [115, 3, 1, "", "defined"], [115, 3, 1, "", "face_colors"], [115, 2, 1, "", "face_subset"], [115, 3, 1, "", "kind"], [115, 3, 1, "", "main_color"], [115, 2, 1, "", "to_texture"], [115, 3, 1, "", "transparency"], [115, 2, 1, "", "update_faces"], [115, 2, 1, "", "update_vertices"], [115, 3, 1, "", "vertex_colors"]], "trimesh.visual.color.VertexColor": [[115, 2, 1, "", "__init__"], [115, 2, 1, "", "concatenate"], [115, 2, 1, "", "copy"], [115, 3, 1, "", "kind"], [115, 2, 1, "", "update_faces"], [115, 2, 1, "", "update_vertices"], [115, 3, 1, "", "vertex_colors"]], "trimesh.visual.gloss": [[116, 4, 1, "", "specular_to_pbr"]], "trimesh.visual.material": [[117, 1, 1, "", "Material"], [117, 1, 1, "", "MultiMaterial"], [117, 1, 1, "", "PBRMaterial"], [117, 1, 1, "", "SimpleMaterial"], [117, 4, 1, "", "color_image"], [117, 4, 1, "", "empty_material"], [117, 4, 1, "", "pack"]], "trimesh.visual.material.Material": [[117, 2, 1, "", "__init__"], [117, 2, 1, "", "copy"], [117, 3, 1, "", "main_color"], [117, 3, 1, "", "name"]], "trimesh.visual.material.MultiMaterial": [[117, 2, 1, "", "__init__"], [117, 2, 1, "", "add"], [117, 2, 1, "", "get"], [117, 3, 1, "", "main_color"], [117, 2, 1, "", "to_pbr"]], "trimesh.visual.material.PBRMaterial": [[117, 2, 1, "", "__init__"], [117, 3, 1, "", "alphaCutoff"], [117, 3, 1, "", "alphaMode"], [117, 3, 1, "", "baseColorFactor"], [117, 3, 1, "", "baseColorTexture"], [117, 2, 1, "", "copy"], [117, 3, 1, "", "doubleSided"], [117, 3, 1, "", "emissiveFactor"], [117, 3, 1, "", "emissiveTexture"], [117, 3, 1, "", "main_color"], [117, 3, 1, "", "metallicFactor"], [117, 3, 1, "", "metallicRoughnessTexture"], [117, 3, 1, "", "name"], [117, 3, 1, "", "normalTexture"], [117, 3, 1, "", "occlusionTexture"], [117, 3, 1, "", "roughnessFactor"], [117, 2, 1, "", "to_color"], [117, 2, 1, "", "to_simple"]], "trimesh.visual.material.SimpleMaterial": [[117, 2, 1, "", "__init__"], [117, 3, 1, "", "glossiness"], [117, 3, 1, "", "main_color"], [117, 2, 1, "", "to_color"], [117, 2, 1, "", "to_obj"], [117, 2, 1, "", "to_pbr"]], "trimesh.visual.objects": [[118, 4, 1, "", "concatenate"], [118, 4, 1, "", "create_visual"]], "trimesh.visual.texture": [[119, 1, 1, "", "TextureVisuals"], [119, 4, 1, "", "power_resize"], [119, 4, 1, "", "unmerge_faces"]], "trimesh.visual.texture.TextureVisuals": [[119, 2, 1, "", "__init__"], [119, 2, 1, "", "concatenate"], [119, 2, 1, "", "copy"], [119, 3, 1, "", "defined"], [119, 2, 1, "", "face_subset"], [119, 3, 1, "", "kind"], [119, 2, 1, "", "to_color"], [119, 2, 1, "", "update_faces"], [119, 2, 1, "", "update_vertices"], [119, 3, 1, "", "uv"]], "trimesh.voxel": [[120, 1, 1, "", "VoxelGrid"], [121, 0, 0, "-", "base"], [122, 0, 0, "-", "creation"], [123, 0, 0, "-", "encoding"], [124, 0, 0, "-", "morphology"], [125, 0, 0, "-", "ops"], [126, 0, 0, "-", "runlength"], [127, 0, 0, "-", "transforms"]], "trimesh.voxel.VoxelGrid": [[120, 2, 1, "", "__init__"], [120, 2, 1, "", "apply_transform"], [120, 2, 1, "", "as_boxes"], [120, 3, 1, "", "bounds"], [120, 2, 1, "", "copy"], [120, 3, 1, "", "element_volume"], [120, 3, 1, "", "encoding"], [120, 2, 1, "", "export"], [120, 3, 1, "", "extents"], [120, 2, 1, "", "fill"], [120, 3, 1, "", "filled_count"], [120, 2, 1, "", "hollow"], [120, 2, 1, "", "indices_to_points"], [120, 3, 1, "", "is_empty"], [120, 2, 1, "", "is_filled"], [120, 3, 1, "", "marching_cubes"], [120, 3, 1, "", "matrix"], [120, 3, 1, "", "pitch"], [120, 3, 1, "", "points"], [120, 2, 1, "", "points_to_indices"], [120, 2, 1, "", "revoxelized"], [120, 3, 1, "", "scale"], [120, 3, 1, "", "shape"], [120, 2, 1, "", "show"], [120, 3, 1, "", "sparse_indices"], [120, 2, 1, "", "strip"], [120, 3, 1, "", "transform"], [120, 3, 1, "", "translation"], [120, 3, 1, "", "volume"]], "trimesh.voxel.base": [[121, 1, 1, "", "VoxelGrid"]], "trimesh.voxel.base.VoxelGrid": [[121, 2, 1, "", "__init__"], [121, 2, 1, "", "apply_transform"], [121, 2, 1, "", "as_boxes"], [121, 3, 1, "", "bounds"], [121, 2, 1, "", "copy"], [121, 3, 1, "", "element_volume"], [121, 3, 1, "", "encoding"], [121, 2, 1, "", "export"], [121, 3, 1, "", "extents"], [121, 2, 1, "", "fill"], [121, 3, 1, "", "filled_count"], [121, 2, 1, "", "hollow"], [121, 2, 1, "", "indices_to_points"], [121, 3, 1, "", "is_empty"], [121, 2, 1, "", "is_filled"], [121, 3, 1, "", "marching_cubes"], [121, 3, 1, "", "matrix"], [121, 3, 1, "", "pitch"], [121, 3, 1, "", "points"], [121, 2, 1, "", "points_to_indices"], [121, 2, 1, "", "revoxelized"], [121, 3, 1, "", "scale"], [121, 3, 1, "", "shape"], [121, 2, 1, "", "show"], [121, 3, 1, "", "sparse_indices"], [121, 2, 1, "", "strip"], [121, 3, 1, "", "transform"], [121, 3, 1, "", "translation"], [121, 3, 1, "", "volume"]], "trimesh.voxel.creation": [[122, 4, 1, "", "local_voxelize"], [122, 4, 1, "", "voxelize"]], "trimesh.voxel.encoding": [[123, 1, 1, "", "BinaryRunLengthEncoding"], [123, 1, 1, "", "DenseEncoding"], [123, 1, 1, "", "Encoding"], [123, 1, 1, "", "FlattenedEncoding"], [123, 1, 1, "", "FlippedEncoding"], [123, 1, 1, "", "LazyIndexMap"], [123, 1, 1, "", "RunLengthEncoding"], [123, 1, 1, "", "ShapedEncoding"], [123, 4, 1, "", "SparseBinaryEncoding"], [123, 1, 1, "", "SparseEncoding"], [123, 1, 1, "", "TransposedEncoding"]], "trimesh.voxel.encoding.BinaryRunLengthEncoding": [[123, 2, 1, "", "__init__"], [123, 2, 1, "", "binary_run_length_data"], [123, 2, 1, "", "copy"], [123, 3, 1, "", "dense"], [123, 2, 1, "", "from_brle"], [123, 2, 1, "", "from_dense"], [123, 2, 1, "", "from_rle"], [123, 2, 1, "", "gather"], [123, 2, 1, "", "gather_nd"], [123, 3, 1, "", "is_empty"], [123, 2, 1, "", "mask"], [123, 2, 1, "", "run_length_data"], [123, 3, 1, "", "size"], [123, 2, 1, "", "sorted_gather"], [123, 3, 1, "", "sparse_components"], [123, 3, 1, "", "sparse_indices"], [123, 3, 1, "", "sparse_values"], [123, 3, 1, "", "stripped"], [123, 3, 1, "", "sum"]], "trimesh.voxel.encoding.DenseEncoding": [[123, 2, 1, "", "__init__"], [123, 2, 1, "", "copy"], [123, 3, 1, "", "dense"], [123, 3, 1, "", "dtype"], [123, 3, 1, "", "flat"], [123, 2, 1, "", "gather"], [123, 2, 1, "", "gather_nd"], [123, 2, 1, "", "get_value"], [123, 3, 1, "", "is_empty"], [123, 2, 1, "", "mask"], [123, 2, 1, "", "reshape"], [123, 3, 1, "", "shape"], [123, 3, 1, "", "size"], [123, 3, 1, "", "sparse_components"], [123, 3, 1, "", "sparse_indices"], [123, 3, 1, "", "sparse_values"], [123, 3, 1, "", "sum"]], "trimesh.voxel.encoding.Encoding": [[123, 2, 1, "", "__init__"], [123, 2, 1, "", "binary_run_length_data"], [123, 2, 1, "", "copy"], [123, 3, 1, "", "data"], [123, 3, 1, "", "dense"], [123, 3, 1, "", "dtype"], [123, 3, 1, "", "flat"], [123, 2, 1, "", "flip"], [123, 2, 1, "", "gather_nd"], [123, 2, 1, "", "get_value"], [123, 3, 1, "", "is_empty"], [123, 2, 1, "", "mask"], [123, 3, 1, "", "mutable"], [123, 3, 1, "", "ndims"], [123, 2, 1, "", "reshape"], [123, 2, 1, "", "run_length_data"], [123, 3, 1, "", "shape"], [123, 3, 1, "", "size"], [123, 3, 1, "", "sparse_components"], [123, 3, 1, "", "sparse_indices"], [123, 3, 1, "", "sparse_values"], [123, 3, 1, "", "stripped"], [123, 3, 1, "", "sum"], [123, 2, 1, "", "transpose"]], "trimesh.voxel.encoding.FlattenedEncoding": [[123, 2, 1, "", "copy"], [123, 3, 1, "", "dense"], [123, 3, 1, "", "flat"], [123, 2, 1, "", "mask"], [123, 3, 1, "", "shape"]], "trimesh.voxel.encoding.FlippedEncoding": [[123, 2, 1, "", "__init__"], [123, 2, 1, "", "copy"], [123, 3, 1, "", "dense"], [123, 2, 1, "", "flip"], [123, 2, 1, "", "mask"], [123, 3, 1, "", "shape"]], "trimesh.voxel.encoding.LazyIndexMap": [[123, 3, 1, "", "dtype"], [123, 2, 1, "", "gather_nd"], [123, 2, 1, "", "get_value"], [123, 3, 1, "", "is_empty"], [123, 3, 1, "", "size"], [123, 3, 1, "", "sparse_indices"], [123, 3, 1, "", "sparse_values"], [123, 3, 1, "", "sum"]], "trimesh.voxel.encoding.RunLengthEncoding": [[123, 2, 1, "", "__init__"], [123, 2, 1, "", "binary_run_length_data"], [123, 2, 1, "", "copy"], [123, 3, 1, "", "dense"], [123, 3, 1, "", "dtype"], [123, 2, 1, "", "from_brle"], [123, 2, 1, "", "from_dense"], [123, 2, 1, "", "from_rle"], [123, 2, 1, "", "gather"], [123, 2, 1, "", "gather_nd"], [123, 2, 1, "", "get_value"], [123, 3, 1, "", "is_empty"], [123, 2, 1, "", "mask"], [123, 3, 1, "", "ndims"], [123, 2, 1, "", "run_length_data"], [123, 3, 1, "", "shape"], [123, 3, 1, "", "size"], [123, 2, 1, "", "sorted_gather"], [123, 3, 1, "", "sparse_components"], [123, 3, 1, "", "sparse_indices"], [123, 3, 1, "", "sparse_values"], [123, 3, 1, "", "stripped"], [123, 3, 1, "", "sum"]], "trimesh.voxel.encoding.ShapedEncoding": [[123, 2, 1, "", "__init__"], [123, 2, 1, "", "copy"], [123, 3, 1, "", "dense"], [123, 3, 1, "", "flat"], [123, 2, 1, "", "mask"], [123, 3, 1, "", "shape"]], "trimesh.voxel.encoding.SparseEncoding": [[123, 2, 1, "", "__init__"], [123, 2, 1, "", "copy"], [123, 3, 1, "", "dense"], [123, 3, 1, "", "dtype"], [123, 2, 1, "", "from_dense"], [123, 2, 1, "", "gather_nd"], [123, 2, 1, "", "get_value"], [123, 2, 1, "", "mask"], [123, 3, 1, "", "ndims"], [123, 3, 1, "", "shape"], [123, 3, 1, "", "size"], [123, 3, 1, "", "sparse_components"], [123, 3, 1, "", "sparse_indices"], [123, 3, 1, "", "sparse_values"], [123, 3, 1, "", "stripped"], [123, 3, 1, "", "sum"]], "trimesh.voxel.encoding.TransposedEncoding": [[123, 2, 1, "", "__init__"], [123, 2, 1, "", "copy"], [123, 3, 1, "", "data"], [123, 3, 1, "", "dense"], [123, 2, 1, "", "gather"], [123, 2, 1, "", "get_value"], [123, 2, 1, "", "mask"], [123, 3, 1, "", "perm"], [123, 3, 1, "", "shape"], [123, 2, 1, "", "transpose"]], "trimesh.voxel.morphology": [[124, 4, 1, "", "binary_closing"], [124, 4, 1, "", "binary_dilation"], [124, 4, 1, "", "fill"], [124, 4, 1, "", "surface"]], "trimesh.voxel.ops": [[125, 4, 1, "", "boolean_sparse"], [125, 4, 1, "", "fill_base"], [125, 4, 1, "", "fill_orthographic"], [125, 4, 1, "", "fill_voxelization"], [125, 4, 1, "", "indices_to_points"], [125, 4, 1, "", "matrix_to_marching_cubes"], [125, 4, 1, "", "matrix_to_points"], [125, 4, 1, "", "multibox"], [125, 4, 1, "", "points_to_indices"], [125, 4, 1, "", "points_to_marching_cubes"], [125, 4, 1, "", "sparse_to_matrix"], [125, 4, 1, "", "strip_array"]], "trimesh.voxel.runlength": [[126, 4, 1, "", "brle_gather_1d"], [126, 4, 1, "", "brle_gatherer_1d"], [126, 4, 1, "", "brle_length"], [126, 4, 1, "", "brle_logical_not"], [126, 4, 1, "", "brle_mask"], [126, 4, 1, "", "brle_reverse"], [126, 4, 1, "", "brle_strip"], [126, 4, 1, "", "brle_to_brle"], [126, 4, 1, "", "brle_to_dense"], [126, 4, 1, "", "brle_to_rle"], [126, 4, 1, "", "brle_to_sparse"], [126, 4, 1, "", "dense_to_brle"], [126, 4, 1, "", "dense_to_rle"], [126, 4, 1, "", "merge_brle_lengths"], [126, 4, 1, "", "merge_rle_lengths"], [126, 4, 1, "", "rle_gather_1d"], [126, 4, 1, "", "rle_gatherer_1d"], [126, 4, 1, "", "rle_length"], [126, 4, 1, "", "rle_mask"], [126, 4, 1, "", "rle_reverse"], [126, 4, 1, "", "rle_strip"], [126, 4, 1, "", "rle_to_brle"], [126, 4, 1, "", "rle_to_dense"], [126, 4, 1, "", "rle_to_rle"], [126, 4, 1, "", "rle_to_sparse"], [126, 4, 1, "", "sorted_brle_gather_1d"], [126, 4, 1, "", "sorted_rle_gather_1d"], [126, 4, 1, "", "split_long_brle_lengths"], [126, 4, 1, "", "split_long_rle_lengths"]], "trimesh.voxel.transforms": [[127, 1, 1, "", "Transform"]], "trimesh.voxel.transforms.Transform": [[127, 2, 1, "", "__init__"], [127, 2, 1, "", "apply_scale"], [127, 2, 1, "", "apply_transform"], [127, 2, 1, "", "apply_translation"], [127, 2, 1, "", "copy"], [127, 3, 1, "", "inverse_matrix"], [127, 2, 1, "", "inverse_transform_points"], [127, 3, 1, "", "is_identity"], [127, 3, 1, "", "matrix"], [127, 3, 1, "", "pitch"], [127, 3, 1, "", "scale"], [127, 2, 1, "", "transform_points"], [127, 3, 1, "", "translation"], [127, 3, 1, "", "unit_volume"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:function", "5": "py:attribute", "6": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "function", "Python function"], "5": ["py", "attribute", "Python attribute"], "6": ["py", "exception", "Python exception"]}, "titleterms": {"basic": [0, 4, 6], "instal": [0, 6, 7], "quick": [0, 2, 6, 10], "start": [0, 2, 6, 10], "featur": [0, 6], "viewer": [0, 6, 108, 109, 110, 111, 112], "project": [0, 6], "us": [0, 4, 6], "trimesh": [0, 2, 4, 6, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127], "which": [0, 6], "mesh": [0, 6], "format": [0, 2, 6], "should": [0, 6], "i": [0, 6], "how": [0, 6, 9], "can": [0, 6], "cite": [0, 6], "thi": [0, 6], "librari": [0, 6], "contain": [0, 6], "color": [1, 115], "contribut": [2, 6], "To": 2, "develop": 2, "automat": 2, "docstr": 2, "gener": [2, 51], "tip": 2, "help": 2, "try": 2, "avoid": 2, "curvatur": [3, 25], "write": 4, "docker": [4, 6], "imag": 4, "pip": 4, "prebuilt": 4, "build": 4, "exampl": [5, 6, 9], "link": 6, "api": 6, "refer": [6, 9], "conda": 7, "packag": 7, "depend": 7, "overview": 7, "ad": 7, "A": 7, "nearest": 8, "non": 9, "rigid": 9, "registr": [9, 88], "deform": 9, "transfer": 9, "nricp": 9, "nricp_sumn": 9, "work": 9, "number": 9, "iter": 9, "robust": 9, "outlier": 9, "summari": 9, "optim": 9, "step": 9, "nricp_amberg": 9, "comparison": [9, 21], "two": 9, "method": 9, "acknowledg": 9, "rai": [11, 84, 85, 86, 87], "section": 12, "shortest": 13, "textur": [14, 119], "http": 15, "github": [15, 16], "com": [15, 16], "mikedh": [15, 16], "base": [16, 114, 121], "boolean": 17, "py": [17, 19, 21, 24, 25, 27, 32, 40, 43, 46, 47, 48, 54, 55, 56, 57, 62, 70, 71, 73, 74, 75, 79, 80, 81, 82, 83, 88, 89, 90, 91, 92, 94, 97, 100, 103, 105, 106, 109, 114, 115, 117, 118, 121], "bound": 18, "cach": 19, "collis": 20, "constant": 22, "convex": 23, "creation": [24, 60, 122], "decomposit": 26, "name": 26, "default": 26, "except": 27, "exchang": [28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 63, 64, 65, 66, 67, 68], "binvox": 29, "dae": 30, "export": [31, 65], "gltf": 32, "load": [33, 66], "misc": [34, 67], "obj": 35, "off": 36, "openctm": 37, "ply": 38, "stl": 39, "threedxml": 40, "threemf": 41, "urdf": 42, "xaml": 43, "xyz": 44, "geometri": 45, "graph": 46, "group": 47, "inertia": 48, "interfac": [49, 50, 51, 52, 53], "blender": 50, "gmsh": 52, "scad": 53, "intersect": [54, 69], "interv": 55, "nsphere": 56, "parent": 57, "path": [58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78], "arc": 59, "curv": 61, "entiti": 62, "paramet": 62, "dxf": 64, "svg_io": 68, "pack": 70, "polygon": 72, "raster": 73, "repair": [74, 91], "segment": 75, "simplifi": 76, "travers": 77, "util": [78, 106], "permut": 79, "point": 80, "pose": 81, "primit": 82, "proxim": 83, "ray_pyembre": 85, "ray_triangl": 86, "ray_util": 87, "remesh": 89, "render": 90, "resolv": 92, "resourc": 93, "sampl": 94, "scene": [95, 96, 97, 98, 99], "camera": 96, "light": 97, "transform": [99, 102, 127], "schema": 100, "smooth": 101, "requir": 102, "triangl": 103, "type": 104, "unit": 105, "version": 107, "notebook": 109, "trackbal": 110, "widget": 111, "window": 112, "visual": [113, 114, 115, 116, 117, 118, 119], "goal": 115, "gloss": 116, "materi": 117, "object": 118, "voxel": [120, 121, 122, 123, 124, 125, 126, 127], "encod": 123, "morphologi": 124, "op": 125, "runlength": 126}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 60}, "alltitles": {"Basic Installation": [[0, "basic-installation"], [6, "basic-installation"]], "Quick Start": [[0, "quick-start"], [6, "quick-start"], [10, "quick-start"]], "Features": [[0, "features"], [6, "features"]], "Viewer": [[0, "viewer"], [6, "viewer"]], "Projects Using Trimesh": [[0, "projects-using-trimesh"], [6, "projects-using-trimesh"]], "Which Mesh Format Should I Use?": [[0, "which-mesh-format-should-i-use"], [6, "which-mesh-format-should-i-use"]], "How can I cite this library?": [[0, "how-can-i-cite-this-library"], [6, "how-can-i-cite-this-library"]], "Containers": [[0, "containers"], [6, "containers"]], "Colors": [[1, "colors"]], "Contributing To Trimesh": [[2, "contributing-to-trimesh"]], "Developer Quick Start": [[2, "developer-quick-start"]], "Automatic Formatting": [[2, "automatic-formatting"]], "Docstrings": [[2, "docstrings"]], "General Tips": [[2, "general-tips"]], "Helpful": [[2, "helpful"]], "Try To Avoid": [[2, "try-to-avoid"]], "Curvature": [[3, "curvature"]], "Writing Docker Images": [[4, "writing-docker-images"]], "Docker Basics": [[4, "docker-basics"]], "Using pip": [[4, "using-pip"]], "Using Prebuilt Images": [[4, "using-prebuilt-images"]], "Building Trimesh Images": [[4, "building-trimesh-images"]], "Examples": [[5, "examples"], [6, "examples"], [9, "examples"]], "Links": [[6, "links"]], "Install": [[6, "install"]], "Contributing": [[6, "contributing"]], "Docker": [[6, "docker"]], "API Reference": [[6, "api-reference"]], "Installation": [[7, "installation"]], "Conda Packages": [[7, "conda-packages"]], "Dependency Overview": [[7, "dependency-overview"]], "Adding A Dependency": [[7, "adding-a-dependency"]], "Nearest": [[8, "nearest"]], "Non-Rigid Registration": [[9, "non-rigid-registration"]], "Deformation Transfer NRICP (nricp_sumner)": [[9, "deformation-transfer-nricp-nricp-sumner"]], "How it works": [[9, "how-it-works"], [9, "id1"]], "Number of iterations": [[9, "number-of-iterations"], [9, "id2"]], "Robustness to outliers": [[9, "robustness-to-outliers"], [9, "id3"]], "Summary": [[9, "summary"], [9, "id4"]], "Optimal Step NRICP (nricp_amberg)": [[9, "optimal-step-nricp-nricp-amberg"]], "Comparison of the two methods": [[9, "comparison-of-the-two-methods"]], "Acknowledgments": [[9, "acknowledgments"]], "References": [[9, "references"]], "Ray": [[11, "ray"]], "Section": [[12, "section"]], "Shortest": [[13, "shortest"]], "Texture": [[14, "texture"]], "trimesh": [[15, "trimesh"]], "https://github.com/mikedh/trimesh": [[15, "https-github-com-mikedh-trimesh"]], "trimesh.base": [[16, "module-trimesh.base"]], "github.com/mikedh/trimesh": [[16, "github-com-mikedh-trimesh"]], "trimesh.boolean": [[17, "module-trimesh.boolean"]], "boolean.py": [[17, "boolean-py"]], "trimesh.bounds": [[18, "module-trimesh.bounds"]], "trimesh.caching": [[19, "module-trimesh.caching"]], "caching.py": [[19, "caching-py"]], "trimesh.collision": [[20, "module-trimesh.collision"]], "trimesh.comparison": [[21, "module-trimesh.comparison"]], "comparison.py": [[21, "comparison-py"]], "trimesh.constants": [[22, "module-trimesh.constants"]], "trimesh.convex": [[23, "module-trimesh.convex"]], "trimesh.creation": [[24, "module-trimesh.creation"]], "creation.py": [[24, "creation-py"]], "trimesh.curvature": [[25, "module-trimesh.curvature"]], "curvature.py": [[25, "curvature-py"]], "trimesh.decomposition": [[26, "module-trimesh.decomposition"]], "Name                              Default": [[26, "name-default"]], "trimesh.exceptions": [[27, "module-trimesh.exceptions"]], "exceptions.py": [[27, "exceptions-py"]], "trimesh.exchange": [[28, "trimesh-exchange"]], "trimesh/exchange": [[28, "module-trimesh.exchange"]], "trimesh.exchange.binvox": [[29, "module-trimesh.exchange.binvox"]], "trimesh.exchange.dae": [[30, "module-trimesh.exchange.dae"]], "trimesh.exchange.export": [[31, "module-trimesh.exchange.export"]], "trimesh.exchange.gltf": [[32, "module-trimesh.exchange.gltf"]], "gltf.py": [[32, "gltf-py"]], "trimesh.exchange.load": [[33, "module-trimesh.exchange.load"]], "trimesh.exchange.misc": [[34, "module-trimesh.exchange.misc"]], "trimesh.exchange.obj": [[35, "module-trimesh.exchange.obj"]], "trimesh.exchange.off": [[36, "module-trimesh.exchange.off"]], "trimesh.exchange.openctm": [[37, "module-trimesh.exchange.openctm"]], "trimesh.exchange.ply": [[38, "module-trimesh.exchange.ply"]], "trimesh.exchange.stl": [[39, "module-trimesh.exchange.stl"]], "trimesh.exchange.threedxml": [[40, "module-trimesh.exchange.threedxml"]], "threedxml.py": [[40, "threedxml-py"]], "trimesh.exchange.threemf": [[41, "module-trimesh.exchange.threemf"]], "trimesh.exchange.urdf": [[42, "module-trimesh.exchange.urdf"]], "trimesh.exchange.xaml": [[43, "module-trimesh.exchange.xaml"]], "xaml.py": [[43, "xaml-py"]], "trimesh.exchange.xyz": [[44, "module-trimesh.exchange.xyz"]], "trimesh.geometry": [[45, "module-trimesh.geometry"]], "trimesh.graph": [[46, "module-trimesh.graph"]], "graph.py": [[46, "graph-py"]], "trimesh.grouping": [[47, "module-trimesh.grouping"]], "grouping.py": [[47, "grouping-py"]], "trimesh.inertia": [[48, "module-trimesh.inertia"]], "inertia.py": [[48, "inertia-py"]], "trimesh.interfaces": [[49, "trimesh-interfaces"]], "trimesh.interfaces.blender": [[50, "module-trimesh.interfaces.blender"]], "trimesh.interfaces.generic": [[51, "module-trimesh.interfaces.generic"]], "trimesh.interfaces.gmsh": [[52, "module-trimesh.interfaces.gmsh"]], "trimesh.interfaces.scad": [[53, "module-trimesh.interfaces.scad"]], "trimesh.intersections": [[54, "module-trimesh.intersections"]], "intersections.py": [[54, "intersections-py"]], "trimesh.interval": [[55, "module-trimesh.interval"]], "interval.py": [[55, "interval-py"]], "trimesh.nsphere": [[56, "module-trimesh.nsphere"]], "nsphere.py": [[56, "nsphere-py"]], "trimesh.parent": [[57, "module-trimesh.parent"]], "parent.py": [[57, "parent-py"]], "trimesh.path": [[58, "trimesh-path"], [58, "module-trimesh.path"]], "trimesh.path.arc": [[59, "module-trimesh.path.arc"]], "trimesh.path.creation": [[60, "module-trimesh.path.creation"]], "trimesh.path.curve": [[61, "module-trimesh.path.curve"]], "trimesh.path.entities": [[62, "module-trimesh.path.entities"]], "entities.py": [[62, "entities-py"]], "Parameter": [[62, "parameter"]], "trimesh.path.exchange": [[63, "trimesh-path-exchange"]], "trimesh.path.exchange.dxf": [[64, "module-trimesh.path.exchange.dxf"]], "trimesh.path.exchange.export": [[65, "module-trimesh.path.exchange.export"]], "trimesh.path.exchange.load": [[66, "module-trimesh.path.exchange.load"]], "trimesh.path.exchange.misc": [[67, "module-trimesh.path.exchange.misc"]], "trimesh.path.exchange.svg_io": [[68, "module-trimesh.path.exchange.svg_io"]], "trimesh.path.intersections": [[69, "module-trimesh.path.intersections"]], "trimesh.path.packing": [[70, "module-trimesh.path.packing"]], "packing.py": [[70, "packing-py"]], "trimesh.path.path": [[71, "module-trimesh.path.path"]], "path.py": [[71, "path-py"]], "trimesh.path.polygons": [[72, "module-trimesh.path.polygons"]], "trimesh.path.raster": [[73, "module-trimesh.path.raster"]], "raster.py": [[73, "raster-py"]], "trimesh.path.repair": [[74, "module-trimesh.path.repair"]], "repair.py": [[74, "repair-py"], [91, "repair-py"]], "trimesh.path.segments": [[75, "module-trimesh.path.segments"]], "segments.py": [[75, "segments-py"]], "trimesh.path.simplify": [[76, "module-trimesh.path.simplify"]], "trimesh.path.traversal": [[77, "module-trimesh.path.traversal"]], "trimesh.path.util": [[78, "module-trimesh.path.util"]], "trimesh.permutate": [[79, "module-trimesh.permutate"]], "permutate.py": [[79, "permutate-py"]], "trimesh.points": [[80, "module-trimesh.points"]], "points.py": [[80, "points-py"]], "trimesh.poses": [[81, "module-trimesh.poses"]], "poses.py": [[81, "poses-py"]], "trimesh.primitives": [[82, "module-trimesh.primitives"]], "primitives.py": [[82, "primitives-py"]], "trimesh.proximity": [[83, "module-trimesh.proximity"]], "proximity.py": [[83, "proximity-py"]], "trimesh.ray": [[84, "trimesh-ray"]], "trimesh.ray.ray_pyembree": [[85, "module-trimesh.ray.ray_pyembree"]], "trimesh.ray.ray_triangle": [[86, "module-trimesh.ray.ray_triangle"]], "trimesh.ray.ray_util": [[87, "module-trimesh.ray.ray_util"]], "trimesh.registration": [[88, "module-trimesh.registration"]], "registration.py": [[88, "registration-py"]], "trimesh.remesh": [[89, "module-trimesh.remesh"]], "remesh.py": [[89, "remesh-py"]], "trimesh.rendering": [[90, "module-trimesh.rendering"]], "rendering.py": [[90, "rendering-py"]], "trimesh.repair": [[91, "module-trimesh.repair"]], "trimesh.resolvers": [[92, "module-trimesh.resolvers"]], "resolvers.py": [[92, "resolvers-py"]], "trimesh.resources": [[93, "module-trimesh.resources"]], "trimesh.sample": [[94, "module-trimesh.sample"]], "sample.py": [[94, "sample-py"]], "trimesh.scene": [[95, "trimesh-scene"]], "trimesh.scene.cameras": [[96, "module-trimesh.scene.cameras"]], "trimesh.scene.lighting": [[97, "module-trimesh.scene.lighting"]], "lighting.py": [[97, "lighting-py"]], "trimesh.scene.scene": [[98, "module-trimesh.scene.scene"]], "trimesh.scene.transforms": [[99, "module-trimesh.scene.transforms"]], "trimesh.schemas": [[100, "module-trimesh.schemas"]], "schemas.py": [[100, "schemas-py"]], "trimesh.smoothing": [[101, "module-trimesh.smoothing"]], "trimesh.transformations": [[102, "module-trimesh.transformations"]], "Requirements": [[102, "requirements"]], "trimesh.triangles": [[103, "module-trimesh.triangles"]], "triangles.py": [[103, "triangles-py"]], "trimesh.typed": [[104, "module-trimesh.typed"]], "trimesh.units": [[105, "module-trimesh.units"]], "units.py": [[105, "units-py"]], "trimesh.util": [[106, "module-trimesh.util"]], "util.py": [[106, "util-py"]], "trimesh.version": [[107, "module-trimesh.version"]], "trimesh.viewer": [[108, "trimesh-viewer"]], "viewer": [[108, "viewer"]], "trimesh.viewer.notebook": [[109, "module-trimesh.viewer.notebook"]], "notebook.py": [[109, "notebook-py"]], "trimesh.viewer.trackball": [[110, "module-trimesh.viewer.trackball"]], "trimesh.viewer.widget": [[111, "trimesh-viewer-widget"]], "trimesh.viewer.windowed": [[112, "trimesh-viewer-windowed"]], "trimesh.visual": [[113, "trimesh-visual"]], "visual": [[113, "visual"]], "trimesh.visual.base": [[114, "module-trimesh.visual.base"]], "base.py": [[114, "base-py"]], "trimesh.visual.color": [[115, "module-trimesh.visual.color"]], "color.py": [[115, "color-py"]], "Goals": [[115, "goals"]], "trimesh.visual.gloss": [[116, "module-trimesh.visual.gloss"]], "trimesh.visual.material": [[117, "module-trimesh.visual.material"]], "material.py": [[117, "material-py"]], "trimesh.visual.objects": [[118, "module-trimesh.visual.objects"]], "objects.py": [[118, "objects-py"]], "trimesh.visual.texture": [[119, "module-trimesh.visual.texture"]], "trimesh.voxel": [[120, "trimesh-voxel"]], "trimesh.voxel.base": [[121, "module-trimesh.voxel.base"]], "voxel.py": [[121, "voxel-py"]], "trimesh.voxel.creation": [[122, "module-trimesh.voxel.creation"]], "trimesh.voxel.encoding": [[123, "module-trimesh.voxel.encoding"]], "trimesh.voxel.morphology": [[124, "module-trimesh.voxel.morphology"]], "trimesh.voxel.ops": [[125, "module-trimesh.voxel.ops"]], "trimesh.voxel.runlength": [[126, "module-trimesh.voxel.runlength"]], "trimesh.voxel.transforms": [[127, "module-trimesh.voxel.transforms"]]}, "indexentries": {"pointcloud (class in trimesh)": [[15, "trimesh.PointCloud"]], "scene (class in trimesh)": [[15, "trimesh.Scene"]], "trimesh (class in trimesh)": [[15, "trimesh.Trimesh"]], "__init__() (trimesh.pointcloud method)": [[15, "trimesh.PointCloud.__init__"]], "__init__() (trimesh.scene method)": [[15, "trimesh.Scene.__init__"]], "__init__() (trimesh.trimesh method)": [[15, "trimesh.Trimesh.__init__"]], "add_geometry() (trimesh.scene method)": [[15, "trimesh.Scene.add_geometry"]], "apply_transform() (trimesh.pointcloud method)": [[15, "trimesh.PointCloud.apply_transform"]], "apply_transform() (trimesh.scene method)": [[15, "trimesh.Scene.apply_transform"]], "apply_transform() (trimesh.trimesh method)": [[15, "trimesh.Trimesh.apply_transform"]], "area (trimesh.scene property)": [[15, "trimesh.Scene.area"]], "area (trimesh.trimesh property)": [[15, "trimesh.Trimesh.area"]], "area_faces (trimesh.trimesh property)": [[15, "trimesh.Trimesh.area_faces"]], "as_open3d (trimesh.trimesh property)": [[15, "trimesh.Trimesh.as_open3d"]], "available_formats() (in module trimesh)": [[15, "trimesh.available_formats"]], "body_count (trimesh.trimesh property)": [[15, "trimesh.Trimesh.body_count"]], "bounds (trimesh.pointcloud property)": [[15, "trimesh.PointCloud.bounds"]], "bounds (trimesh.scene property)": [[15, "trimesh.Scene.bounds"]], "bounds (trimesh.trimesh property)": [[15, "trimesh.Trimesh.bounds"]], "bounds_corners (trimesh.scene property)": [[15, "trimesh.Scene.bounds_corners"]], "camera (trimesh.scene property)": [[15, "trimesh.Scene.camera"]], "camera_rays() (trimesh.scene method)": [[15, "trimesh.Scene.camera_rays"]], "camera_transform (trimesh.scene property)": [[15, "trimesh.Scene.camera_transform"]], "center_mass (trimesh.scene property)": [[15, "trimesh.Scene.center_mass"]], "center_mass (trimesh.trimesh property)": [[15, "trimesh.Trimesh.center_mass"]], "centroid (trimesh.pointcloud property)": [[15, "trimesh.PointCloud.centroid"]], "centroid (trimesh.scene property)": [[15, "trimesh.Scene.centroid"]], "centroid (trimesh.trimesh property)": [[15, "trimesh.Trimesh.centroid"]], "colors (trimesh.pointcloud property)": [[15, "trimesh.PointCloud.colors"]], "compute_stable_poses() (trimesh.trimesh method)": [[15, "trimesh.Trimesh.compute_stable_poses"]], "contains() (trimesh.trimesh method)": [[15, "trimesh.Trimesh.contains"]], "convert_units() (trimesh.scene method)": [[15, "trimesh.Scene.convert_units"]], "convert_units() (trimesh.trimesh method)": [[15, "trimesh.Trimesh.convert_units"]], "convex_decomposition() (trimesh.trimesh method)": [[15, "trimesh.Trimesh.convex_decomposition"]], "convex_hull (trimesh.pointcloud property)": [[15, "trimesh.PointCloud.convex_hull"]], "convex_hull (trimesh.scene property)": [[15, "trimesh.Scene.convex_hull"]], "convex_hull (trimesh.trimesh property)": [[15, "trimesh.Trimesh.convex_hull"]], "copy() (trimesh.pointcloud method)": [[15, "trimesh.PointCloud.copy"]], "copy() (trimesh.scene method)": [[15, "trimesh.Scene.copy"]], "copy() (trimesh.trimesh method)": [[15, "trimesh.Trimesh.copy"]], "crc() (trimesh.pointcloud method)": [[15, "trimesh.PointCloud.crc"]], "deduplicated() (trimesh.scene method)": [[15, "trimesh.Scene.deduplicated"]], "delete_geometry() (trimesh.scene method)": [[15, "trimesh.Scene.delete_geometry"]], "density (trimesh.trimesh property)": [[15, "trimesh.Trimesh.density"]], "difference() (trimesh.trimesh method)": [[15, "trimesh.Trimesh.difference"]], "dump() (trimesh.scene method)": [[15, "trimesh.Scene.dump"]], "duplicate_nodes (trimesh.scene property)": [[15, "trimesh.Scene.duplicate_nodes"]], "edges (trimesh.trimesh property)": [[15, "trimesh.Trimesh.edges"]], "edges_face (trimesh.trimesh property)": [[15, "trimesh.Trimesh.edges_face"]], "edges_sorted (trimesh.trimesh property)": [[15, "trimesh.Trimesh.edges_sorted"]], "edges_sorted_tree (trimesh.trimesh property)": [[15, "trimesh.Trimesh.edges_sorted_tree"]], "edges_sparse (trimesh.trimesh property)": [[15, "trimesh.Trimesh.edges_sparse"]], "edges_unique (trimesh.trimesh property)": [[15, "trimesh.Trimesh.edges_unique"]], "edges_unique_inverse (trimesh.trimesh property)": [[15, "trimesh.Trimesh.edges_unique_inverse"]], "edges_unique_length (trimesh.trimesh property)": [[15, "trimesh.Trimesh.edges_unique_length"]], "euler_number (trimesh.trimesh property)": [[15, "trimesh.Trimesh.euler_number"]], "eval_cached() (trimesh.trimesh method)": [[15, "trimesh.Trimesh.eval_cached"]], "explode() (trimesh.scene method)": [[15, "trimesh.Scene.explode"]], "export() (trimesh.pointcloud method)": [[15, "trimesh.PointCloud.export"]], "export() (trimesh.scene method)": [[15, "trimesh.Scene.export"]], "export() (trimesh.trimesh method)": [[15, "trimesh.Trimesh.export"]], "extents (trimesh.pointcloud property)": [[15, "trimesh.PointCloud.extents"]], "extents (trimesh.scene property)": [[15, "trimesh.Scene.extents"]], "extents (trimesh.trimesh property)": [[15, "trimesh.Trimesh.extents"]], "face_adjacency (trimesh.trimesh property)": [[15, "trimesh.Trimesh.face_adjacency"]], "face_adjacency_angles (trimesh.trimesh property)": [[15, "trimesh.Trimesh.face_adjacency_angles"]], "face_adjacency_convex (trimesh.trimesh property)": [[15, "trimesh.Trimesh.face_adjacency_convex"]], "face_adjacency_edges (trimesh.trimesh property)": [[15, "trimesh.Trimesh.face_adjacency_edges"]], "face_adjacency_edges_tree (trimesh.trimesh property)": [[15, "trimesh.Trimesh.face_adjacency_edges_tree"]], "face_adjacency_projections (trimesh.trimesh property)": [[15, "trimesh.Trimesh.face_adjacency_projections"]], "face_adjacency_radius (trimesh.trimesh property)": [[15, "trimesh.Trimesh.face_adjacency_radius"]], "face_adjacency_span (trimesh.trimesh property)": [[15, "trimesh.Trimesh.face_adjacency_span"]], "face_adjacency_tree (trimesh.trimesh property)": [[15, "trimesh.Trimesh.face_adjacency_tree"]], "face_adjacency_unshared (trimesh.trimesh property)": [[15, "trimesh.Trimesh.face_adjacency_unshared"]], "face_angles (trimesh.trimesh property)": [[15, "trimesh.Trimesh.face_angles"]], "face_angles_sparse (trimesh.trimesh property)": [[15, "trimesh.Trimesh.face_angles_sparse"]], "face_neighborhood (trimesh.trimesh property)": [[15, "trimesh.Trimesh.face_neighborhood"]], "face_normals (trimesh.trimesh property)": [[15, "trimesh.Trimesh.face_normals"]], "faces (trimesh.trimesh property)": [[15, "trimesh.Trimesh.faces"]], "faces_sparse (trimesh.trimesh property)": [[15, "trimesh.Trimesh.faces_sparse"]], "faces_unique_edges (trimesh.trimesh property)": [[15, "trimesh.Trimesh.faces_unique_edges"]], "facets (trimesh.trimesh property)": [[15, "trimesh.Trimesh.facets"]], "facets_area (trimesh.trimesh property)": [[15, "trimesh.Trimesh.facets_area"]], "facets_boundary (trimesh.trimesh property)": [[15, "trimesh.Trimesh.facets_boundary"]], "facets_normal (trimesh.trimesh property)": [[15, "trimesh.Trimesh.facets_normal"]], "facets_on_hull (trimesh.trimesh property)": [[15, "trimesh.Trimesh.facets_on_hull"]], "facets_origin (trimesh.trimesh property)": [[15, "trimesh.Trimesh.facets_origin"]], "fill_holes() (trimesh.trimesh method)": [[15, "trimesh.Trimesh.fill_holes"]], "fix_normals() (trimesh.trimesh method)": [[15, "trimesh.Trimesh.fix_normals"]], "geometry_identifiers (trimesh.scene property)": [[15, "trimesh.Scene.geometry_identifiers"]], "has_camera (trimesh.scene property)": [[15, "trimesh.Scene.has_camera"]], "hash() (trimesh.pointcloud method)": [[15, "trimesh.PointCloud.hash"]], "identifier (trimesh.trimesh property)": [[15, "trimesh.Trimesh.identifier"]], "identifier_hash (trimesh.trimesh property)": [[15, "trimesh.Trimesh.identifier_hash"]], "integral_mean_curvature (trimesh.trimesh property)": [[15, "trimesh.Trimesh.integral_mean_curvature"]], "intersection() (trimesh.trimesh method)": [[15, "trimesh.Trimesh.intersection"]], "invert() (trimesh.trimesh method)": [[15, "trimesh.Trimesh.invert"]], "is_convex (trimesh.trimesh property)": [[15, "trimesh.Trimesh.is_convex"]], "is_empty (trimesh.pointcloud property)": [[15, "trimesh.PointCloud.is_empty"]], "is_empty (trimesh.scene property)": [[15, "trimesh.Scene.is_empty"]], "is_empty (trimesh.trimesh property)": [[15, "trimesh.Trimesh.is_empty"]], "is_valid (trimesh.scene property)": [[15, "trimesh.Scene.is_valid"]], "is_volume (trimesh.trimesh property)": [[15, "trimesh.Trimesh.is_volume"]], "is_watertight (trimesh.trimesh property)": [[15, "trimesh.Trimesh.is_watertight"]], "is_winding_consistent (trimesh.trimesh property)": [[15, "trimesh.Trimesh.is_winding_consistent"]], "kdtree (trimesh.pointcloud property)": [[15, "trimesh.PointCloud.kdtree"]], "kdtree (trimesh.trimesh property)": [[15, "trimesh.Trimesh.kdtree"]], "lights (trimesh.scene property)": [[15, "trimesh.Scene.lights"]], "load() (in module trimesh)": [[15, "trimesh.load"]], "load_mesh() (in module trimesh)": [[15, "trimesh.load_mesh"]], "load_path() (in module trimesh)": [[15, "trimesh.load_path"]], "load_remote() (in module trimesh)": [[15, "trimesh.load_remote"]], "mass (trimesh.trimesh property)": [[15, "trimesh.Trimesh.mass"]], "mass_properties (trimesh.trimesh property)": [[15, "trimesh.Trimesh.mass_properties"]], "merge_vertices() (trimesh.pointcloud method)": [[15, "trimesh.PointCloud.merge_vertices"]], "merge_vertices() (trimesh.trimesh method)": [[15, "trimesh.Trimesh.merge_vertices"]], "module": [[15, "module-trimesh"], [16, "module-trimesh.base"], [17, "module-trimesh.boolean"], [18, "module-trimesh.bounds"], [19, "module-trimesh.caching"], [20, "module-trimesh.collision"], [21, "module-trimesh.comparison"], [22, "module-trimesh.constants"], [23, "module-trimesh.convex"], [24, "module-trimesh.creation"], [25, "module-trimesh.curvature"], [26, "module-trimesh.decomposition"], [27, "module-trimesh.exceptions"], [28, "module-trimesh.exchange"], [29, "module-trimesh.exchange.binvox"], [30, "module-trimesh.exchange.dae"], [31, "module-trimesh.exchange.export"], [32, "module-trimesh.exchange.gltf"], [33, "module-trimesh.exchange.load"], [34, "module-trimesh.exchange.misc"], [35, "module-trimesh.exchange.obj"], [36, "module-trimesh.exchange.off"], [37, "module-trimesh.exchange.openctm"], [38, "module-trimesh.exchange.ply"], [39, "module-trimesh.exchange.stl"], [40, "module-trimesh.exchange.threedxml"], [41, "module-trimesh.exchange.threemf"], [42, "module-trimesh.exchange.urdf"], [43, "module-trimesh.exchange.xaml"], [44, "module-trimesh.exchange.xyz"], [45, "module-trimesh.geometry"], [46, "module-trimesh.graph"], [47, "module-trimesh.grouping"], [48, "module-trimesh.inertia"], [49, "module-trimesh.interfaces"], [50, "module-trimesh.interfaces.blender"], [51, "module-trimesh.interfaces.generic"], [52, "module-trimesh.interfaces.gmsh"], [53, "module-trimesh.interfaces.scad"], [54, "module-trimesh.intersections"], [55, "module-trimesh.interval"], [56, "module-trimesh.nsphere"], [57, "module-trimesh.parent"], [58, "module-trimesh.path"], [59, "module-trimesh.path.arc"], [60, "module-trimesh.path.creation"], [61, "module-trimesh.path.curve"], [62, "module-trimesh.path.entities"], [63, "module-trimesh.path.exchange"], [64, "module-trimesh.path.exchange.dxf"], [65, "module-trimesh.path.exchange.export"], [66, "module-trimesh.path.exchange.load"], [67, "module-trimesh.path.exchange.misc"], [68, "module-trimesh.path.exchange.svg_io"], [69, "module-trimesh.path.intersections"], [70, "module-trimesh.path.packing"], [71, "module-trimesh.path.path"], [72, "module-trimesh.path.polygons"], [73, "module-trimesh.path.raster"], [74, "module-trimesh.path.repair"], [75, "module-trimesh.path.segments"], [76, "module-trimesh.path.simplify"], [77, "module-trimesh.path.traversal"], [78, "module-trimesh.path.util"], [79, "module-trimesh.permutate"], [80, "module-trimesh.points"], [81, "module-trimesh.poses"], [82, "module-trimesh.primitives"], [83, "module-trimesh.proximity"], [84, "module-trimesh.ray"], [85, "module-trimesh.ray.ray_pyembree"], [86, "module-trimesh.ray.ray_triangle"], [87, "module-trimesh.ray.ray_util"], [88, "module-trimesh.registration"], [89, "module-trimesh.remesh"], [90, "module-trimesh.rendering"], [91, "module-trimesh.repair"], [92, "module-trimesh.resolvers"], [93, "module-trimesh.resources"], [94, "module-trimesh.sample"], [95, "module-trimesh.scene"], [96, "module-trimesh.scene.cameras"], [97, "module-trimesh.scene.lighting"], [98, "module-trimesh.scene.scene"], [99, "module-trimesh.scene.transforms"], [100, "module-trimesh.schemas"], [101, "module-trimesh.smoothing"], [102, "module-trimesh.transformations"], [103, "module-trimesh.triangles"], [104, "module-trimesh.typed"], [105, "module-trimesh.units"], [106, "module-trimesh.util"], [107, "module-trimesh.version"], [108, "module-trimesh.viewer"], [109, "module-trimesh.viewer.notebook"], [110, "module-trimesh.viewer.trackball"], [113, "module-trimesh.visual"], [114, "module-trimesh.visual.base"], [115, "module-trimesh.visual.color"], [116, "module-trimesh.visual.gloss"], [117, "module-trimesh.visual.material"], [118, "module-trimesh.visual.objects"], [119, "module-trimesh.visual.texture"], [120, "module-trimesh.voxel"], [121, "module-trimesh.voxel.base"], [122, "module-trimesh.voxel.creation"], [123, "module-trimesh.voxel.encoding"], [124, "module-trimesh.voxel.morphology"], [125, "module-trimesh.voxel.ops"], [126, "module-trimesh.voxel.runlength"], [127, "module-trimesh.voxel.transforms"]], "moment_inertia (trimesh.scene property)": [[15, "trimesh.Scene.moment_inertia"]], "moment_inertia (trimesh.trimesh property)": [[15, "trimesh.Trimesh.moment_inertia"]], "moment_inertia_frame() (trimesh.scene method)": [[15, "trimesh.Scene.moment_inertia_frame"]], "moment_inertia_frame() (trimesh.trimesh method)": [[15, "trimesh.Trimesh.moment_inertia_frame"]], "mutable (trimesh.trimesh property)": [[15, "trimesh.Trimesh.mutable"]], "nondegenerate_faces() (trimesh.trimesh method)": [[15, "trimesh.Trimesh.nondegenerate_faces"]], "outline() (trimesh.trimesh method)": [[15, "trimesh.Trimesh.outline"]], "principal_inertia_components (trimesh.trimesh property)": [[15, "trimesh.Trimesh.principal_inertia_components"]], "principal_inertia_transform (trimesh.trimesh property)": [[15, "trimesh.Trimesh.principal_inertia_transform"]], "principal_inertia_vectors (trimesh.trimesh property)": [[15, "trimesh.Trimesh.principal_inertia_vectors"]], "process() (trimesh.trimesh method)": [[15, "trimesh.Trimesh.process"]], "projected() (trimesh.trimesh method)": [[15, "trimesh.Trimesh.projected"]], "query() (trimesh.pointcloud method)": [[15, "trimesh.PointCloud.query"]], "referenced_vertices (trimesh.trimesh property)": [[15, "trimesh.Trimesh.referenced_vertices"]], "register() (trimesh.trimesh method)": [[15, "trimesh.Trimesh.register"]], "remove_degenerate_faces() (trimesh.trimesh method)": [[15, "trimesh.Trimesh.remove_degenerate_faces"]], "remove_duplicate_faces() (trimesh.trimesh method)": [[15, "trimesh.Trimesh.remove_duplicate_faces"]], "remove_infinite_values() (trimesh.trimesh method)": [[15, "trimesh.Trimesh.remove_infinite_values"]], "remove_unreferenced_vertices() (trimesh.trimesh method)": [[15, "trimesh.Trimesh.remove_unreferenced_vertices"]], "rezero() (trimesh.scene method)": [[15, "trimesh.Scene.rezero"]], "rezero() (trimesh.trimesh method)": [[15, "trimesh.Trimesh.rezero"]], "sample() (trimesh.trimesh method)": [[15, "trimesh.Trimesh.sample"]], "save_image() (trimesh.scene method)": [[15, "trimesh.Scene.save_image"]], "scale (trimesh.scene property)": [[15, "trimesh.Scene.scale"]], "scaled() (trimesh.scene method)": [[15, "trimesh.Scene.scaled"]], "scene() (trimesh.pointcloud method)": [[15, "trimesh.PointCloud.scene"]], "scene() (trimesh.trimesh method)": [[15, "trimesh.Trimesh.scene"]], "section() (trimesh.trimesh method)": [[15, "trimesh.Trimesh.section"]], "section_multiplane() (trimesh.trimesh method)": [[15, "trimesh.Trimesh.section_multiplane"]], "set_camera() (trimesh.scene method)": [[15, "trimesh.Scene.set_camera"]], "shape (trimesh.pointcloud property)": [[15, "trimesh.PointCloud.shape"]], "show() (trimesh.pointcloud method)": [[15, "trimesh.PointCloud.show"]], "show() (trimesh.scene method)": [[15, "trimesh.Scene.show"]], "show() (trimesh.trimesh method)": [[15, "trimesh.Trimesh.show"]], "simplify_quadratic_decimation() (trimesh.trimesh method)": [[15, "trimesh.Trimesh.simplify_quadratic_decimation"]], "simplify_quadric_decimation() (trimesh.trimesh method)": [[15, "trimesh.Trimesh.simplify_quadric_decimation"]], "slice_plane() (trimesh.trimesh method)": [[15, "trimesh.Trimesh.slice_plane"]], "smooth_shaded (trimesh.trimesh property)": [[15, "trimesh.Trimesh.smooth_shaded"]], "smoothed() (trimesh.trimesh method)": [[15, "trimesh.Trimesh.smoothed"]], "split() (trimesh.trimesh method)": [[15, "trimesh.Trimesh.split"]], "strip_visuals() (trimesh.scene method)": [[15, "trimesh.Scene.strip_visuals"]], "subdivide() (trimesh.trimesh method)": [[15, "trimesh.Trimesh.subdivide"]], "subdivide_loop() (trimesh.trimesh method)": [[15, "trimesh.Trimesh.subdivide_loop"]], "subdivide_to_size() (trimesh.trimesh method)": [[15, "trimesh.Trimesh.subdivide_to_size"]], "submesh() (trimesh.trimesh method)": [[15, "trimesh.Trimesh.submesh"]], "subscene() (trimesh.scene method)": [[15, "trimesh.Scene.subscene"]], "symmetry (trimesh.trimesh property)": [[15, "trimesh.Trimesh.symmetry"]], "symmetry_axis (trimesh.trimesh property)": [[15, "trimesh.Trimesh.symmetry_axis"]], "symmetry_section (trimesh.trimesh property)": [[15, "trimesh.Trimesh.symmetry_section"]], "to_dict() (trimesh.trimesh method)": [[15, "trimesh.Trimesh.to_dict"]], "transform_points() (in module trimesh)": [[15, "trimesh.transform_points"]], "triangles (trimesh.scene property)": [[15, "trimesh.Scene.triangles"]], "triangles (trimesh.trimesh property)": [[15, "trimesh.Trimesh.triangles"]], "triangles_center (trimesh.trimesh property)": [[15, "trimesh.Trimesh.triangles_center"]], "triangles_cross (trimesh.trimesh property)": [[15, "trimesh.Trimesh.triangles_cross"]], "triangles_node (trimesh.scene property)": [[15, "trimesh.Scene.triangles_node"]], "triangles_tree (trimesh.trimesh property)": [[15, "trimesh.Trimesh.triangles_tree"]], "trimesh": [[15, "module-trimesh"]], "union() (trimesh.trimesh method)": [[15, "trimesh.Trimesh.union"]], "unique_faces() (trimesh.trimesh method)": [[15, "trimesh.Trimesh.unique_faces"]], "unitize() (in module trimesh)": [[15, "trimesh.unitize"]], "units (trimesh.scene property)": [[15, "trimesh.Scene.units"]], "units (trimesh.trimesh property)": [[15, "trimesh.Trimesh.units"]], "unmerge_vertices() (trimesh.trimesh method)": [[15, "trimesh.Trimesh.unmerge_vertices"]], "unwrap() (trimesh.trimesh method)": [[15, "trimesh.Trimesh.unwrap"]], "update_faces() (trimesh.trimesh method)": [[15, "trimesh.Trimesh.update_faces"]], "update_vertices() (trimesh.trimesh method)": [[15, "trimesh.Trimesh.update_vertices"]], "vertex_adjacency_graph (trimesh.trimesh property)": [[15, "trimesh.Trimesh.vertex_adjacency_graph"]], "vertex_defects (trimesh.trimesh property)": [[15, "trimesh.Trimesh.vertex_defects"]], "vertex_degree (trimesh.trimesh property)": [[15, "trimesh.Trimesh.vertex_degree"]], "vertex_faces (trimesh.trimesh property)": [[15, "trimesh.Trimesh.vertex_faces"]], "vertex_neighbors (trimesh.trimesh property)": [[15, "trimesh.Trimesh.vertex_neighbors"]], "vertex_normals (trimesh.trimesh property)": [[15, "trimesh.Trimesh.vertex_normals"]], "vertices (trimesh.pointcloud property)": [[15, "trimesh.PointCloud.vertices"]], "vertices (trimesh.trimesh property)": [[15, "trimesh.Trimesh.vertices"]], "visual (trimesh.trimesh property)": [[15, "trimesh.Trimesh.visual"]], "volume (trimesh.scene property)": [[15, "trimesh.Scene.volume"]], "volume (trimesh.trimesh property)": [[15, "trimesh.Trimesh.volume"]], "voxelized() (trimesh.trimesh method)": [[15, "trimesh.Trimesh.voxelized"]], "trimesh (class in trimesh.base)": [[16, "trimesh.base.Trimesh"]], "__init__() (trimesh.base.trimesh method)": [[16, "trimesh.base.Trimesh.__init__"]], "apply_transform() (trimesh.base.trimesh method)": [[16, "trimesh.base.Trimesh.apply_transform"]], "area (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.area"]], "area_faces (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.area_faces"]], "as_open3d (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.as_open3d"]], "body_count (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.body_count"]], "bounds (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.bounds"]], "center_mass (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.center_mass"]], "centroid (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.centroid"]], "compute_stable_poses() (trimesh.base.trimesh method)": [[16, "trimesh.base.Trimesh.compute_stable_poses"]], "contains() (trimesh.base.trimesh method)": [[16, "trimesh.base.Trimesh.contains"]], "convert_units() (trimesh.base.trimesh method)": [[16, "trimesh.base.Trimesh.convert_units"]], "convex_decomposition() (trimesh.base.trimesh method)": [[16, "trimesh.base.Trimesh.convex_decomposition"]], "convex_hull (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.convex_hull"]], "copy() (trimesh.base.trimesh method)": [[16, "trimesh.base.Trimesh.copy"]], "density (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.density"]], "difference() (trimesh.base.trimesh method)": [[16, "trimesh.base.Trimesh.difference"]], "edges (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.edges"]], "edges_face (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.edges_face"]], "edges_sorted (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.edges_sorted"]], "edges_sorted_tree (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.edges_sorted_tree"]], "edges_sparse (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.edges_sparse"]], "edges_unique (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.edges_unique"]], "edges_unique_inverse (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.edges_unique_inverse"]], "edges_unique_length (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.edges_unique_length"]], "euler_number (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.euler_number"]], "eval_cached() (trimesh.base.trimesh method)": [[16, "trimesh.base.Trimesh.eval_cached"]], "export() (trimesh.base.trimesh method)": [[16, "trimesh.base.Trimesh.export"]], "extents (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.extents"]], "face_adjacency (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.face_adjacency"]], "face_adjacency_angles (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.face_adjacency_angles"]], "face_adjacency_convex (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.face_adjacency_convex"]], "face_adjacency_edges (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.face_adjacency_edges"]], "face_adjacency_edges_tree (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.face_adjacency_edges_tree"]], "face_adjacency_projections (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.face_adjacency_projections"]], "face_adjacency_radius (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.face_adjacency_radius"]], "face_adjacency_span (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.face_adjacency_span"]], "face_adjacency_tree (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.face_adjacency_tree"]], "face_adjacency_unshared (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.face_adjacency_unshared"]], "face_angles (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.face_angles"]], "face_angles_sparse (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.face_angles_sparse"]], "face_neighborhood (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.face_neighborhood"]], "face_normals (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.face_normals"]], "faces (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.faces"]], "faces_sparse (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.faces_sparse"]], "faces_unique_edges (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.faces_unique_edges"]], "facets (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.facets"]], "facets_area (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.facets_area"]], "facets_boundary (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.facets_boundary"]], "facets_normal (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.facets_normal"]], "facets_on_hull (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.facets_on_hull"]], "facets_origin (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.facets_origin"]], "fill_holes() (trimesh.base.trimesh method)": [[16, "trimesh.base.Trimesh.fill_holes"]], "fix_normals() (trimesh.base.trimesh method)": [[16, "trimesh.base.Trimesh.fix_normals"]], "identifier (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.identifier"]], "identifier_hash (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.identifier_hash"]], "integral_mean_curvature (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.integral_mean_curvature"]], "intersection() (trimesh.base.trimesh method)": [[16, "trimesh.base.Trimesh.intersection"]], "invert() (trimesh.base.trimesh method)": [[16, "trimesh.base.Trimesh.invert"]], "is_convex (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.is_convex"]], "is_empty (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.is_empty"]], "is_volume (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.is_volume"]], "is_watertight (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.is_watertight"]], "is_winding_consistent (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.is_winding_consistent"]], "kdtree (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.kdtree"]], "mass (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.mass"]], "mass_properties (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.mass_properties"]], "merge_vertices() (trimesh.base.trimesh method)": [[16, "trimesh.base.Trimesh.merge_vertices"]], "moment_inertia (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.moment_inertia"]], "moment_inertia_frame() (trimesh.base.trimesh method)": [[16, "trimesh.base.Trimesh.moment_inertia_frame"]], "mutable (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.mutable"]], "nondegenerate_faces() (trimesh.base.trimesh method)": [[16, "trimesh.base.Trimesh.nondegenerate_faces"]], "outline() (trimesh.base.trimesh method)": [[16, "trimesh.base.Trimesh.outline"]], "principal_inertia_components (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.principal_inertia_components"]], "principal_inertia_transform (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.principal_inertia_transform"]], "principal_inertia_vectors (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.principal_inertia_vectors"]], "process() (trimesh.base.trimesh method)": [[16, "trimesh.base.Trimesh.process"]], "projected() (trimesh.base.trimesh method)": [[16, "trimesh.base.Trimesh.projected"]], "referenced_vertices (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.referenced_vertices"]], "register() (trimesh.base.trimesh method)": [[16, "trimesh.base.Trimesh.register"]], "remove_degenerate_faces() (trimesh.base.trimesh method)": [[16, "trimesh.base.Trimesh.remove_degenerate_faces"]], "remove_duplicate_faces() (trimesh.base.trimesh method)": [[16, "trimesh.base.Trimesh.remove_duplicate_faces"]], "remove_infinite_values() (trimesh.base.trimesh method)": [[16, "trimesh.base.Trimesh.remove_infinite_values"]], "remove_unreferenced_vertices() (trimesh.base.trimesh method)": [[16, "trimesh.base.Trimesh.remove_unreferenced_vertices"]], "rezero() (trimesh.base.trimesh method)": [[16, "trimesh.base.Trimesh.rezero"]], "sample() (trimesh.base.trimesh method)": [[16, "trimesh.base.Trimesh.sample"]], "scene() (trimesh.base.trimesh method)": [[16, "trimesh.base.Trimesh.scene"]], "section() (trimesh.base.trimesh method)": [[16, "trimesh.base.Trimesh.section"]], "section_multiplane() (trimesh.base.trimesh method)": [[16, "trimesh.base.Trimesh.section_multiplane"]], "show() (trimesh.base.trimesh method)": [[16, "trimesh.base.Trimesh.show"]], "simplify_quadratic_decimation() (trimesh.base.trimesh method)": [[16, "trimesh.base.Trimesh.simplify_quadratic_decimation"]], "simplify_quadric_decimation() (trimesh.base.trimesh method)": [[16, "trimesh.base.Trimesh.simplify_quadric_decimation"]], "slice_plane() (trimesh.base.trimesh method)": [[16, "trimesh.base.Trimesh.slice_plane"]], "smooth_shaded (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.smooth_shaded"]], "smoothed() (trimesh.base.trimesh method)": [[16, "trimesh.base.Trimesh.smoothed"]], "split() (trimesh.base.trimesh method)": [[16, "trimesh.base.Trimesh.split"]], "subdivide() (trimesh.base.trimesh method)": [[16, "trimesh.base.Trimesh.subdivide"]], "subdivide_loop() (trimesh.base.trimesh method)": [[16, "trimesh.base.Trimesh.subdivide_loop"]], "subdivide_to_size() (trimesh.base.trimesh method)": [[16, "trimesh.base.Trimesh.subdivide_to_size"]], "submesh() (trimesh.base.trimesh method)": [[16, "trimesh.base.Trimesh.submesh"]], "symmetry (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.symmetry"]], "symmetry_axis (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.symmetry_axis"]], "symmetry_section (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.symmetry_section"]], "to_dict() (trimesh.base.trimesh method)": [[16, "trimesh.base.Trimesh.to_dict"]], "triangles (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.triangles"]], "triangles_center (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.triangles_center"]], "triangles_cross (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.triangles_cross"]], "triangles_tree (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.triangles_tree"]], "trimesh.base": [[16, "module-trimesh.base"]], "union() (trimesh.base.trimesh method)": [[16, "trimesh.base.Trimesh.union"]], "unique_faces() (trimesh.base.trimesh method)": [[16, "trimesh.base.Trimesh.unique_faces"]], "units (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.units"]], "unmerge_vertices() (trimesh.base.trimesh method)": [[16, "trimesh.base.Trimesh.unmerge_vertices"]], "unwrap() (trimesh.base.trimesh method)": [[16, "trimesh.base.Trimesh.unwrap"]], "update_faces() (trimesh.base.trimesh method)": [[16, "trimesh.base.Trimesh.update_faces"]], "update_vertices() (trimesh.base.trimesh method)": [[16, "trimesh.base.Trimesh.update_vertices"]], "vertex_adjacency_graph (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.vertex_adjacency_graph"]], "vertex_defects (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.vertex_defects"]], "vertex_degree (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.vertex_degree"]], "vertex_faces (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.vertex_faces"]], "vertex_neighbors (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.vertex_neighbors"]], "vertex_normals (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.vertex_normals"]], "vertices (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.vertices"]], "visual (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.visual"]], "volume (trimesh.base.trimesh property)": [[16, "trimesh.base.Trimesh.volume"]], "voxelized() (trimesh.base.trimesh method)": [[16, "trimesh.base.Trimesh.voxelized"]], "boolean_manifold() (in module trimesh.boolean)": [[17, "trimesh.boolean.boolean_manifold"]], "boolean_scad() (in module trimesh.boolean)": [[17, "trimesh.boolean.boolean_scad"]], "difference() (in module trimesh.boolean)": [[17, "trimesh.boolean.difference"]], "intersection() (in module trimesh.boolean)": [[17, "trimesh.boolean.intersection"]], "trimesh.boolean": [[17, "module-trimesh.boolean"]], "union() (in module trimesh.boolean)": [[17, "trimesh.boolean.union"]], "contains() (in module trimesh.bounds)": [[18, "trimesh.bounds.contains"]], "corners() (in module trimesh.bounds)": [[18, "trimesh.bounds.corners"]], "minimum_cylinder() (in module trimesh.bounds)": [[18, "trimesh.bounds.minimum_cylinder"]], "oriented_bounds() (in module trimesh.bounds)": [[18, "trimesh.bounds.oriented_bounds"]], "oriented_bounds_2d() (in module trimesh.bounds)": [[18, "trimesh.bounds.oriented_bounds_2D"]], "to_extents() (in module trimesh.bounds)": [[18, "trimesh.bounds.to_extents"]], "trimesh.bounds": [[18, "module-trimesh.bounds"]], "cache (class in trimesh.caching)": [[19, "trimesh.caching.Cache"]], "datastore (class in trimesh.caching)": [[19, "trimesh.caching.DataStore"]], "diskcache (class in trimesh.caching)": [[19, "trimesh.caching.DiskCache"]], "trackedarray (class in trimesh.caching)": [[19, "trimesh.caching.TrackedArray"]], "__init__() (trimesh.caching.cache method)": [[19, "trimesh.caching.Cache.__init__"]], "__init__() (trimesh.caching.datastore method)": [[19, "trimesh.caching.DataStore.__init__"]], "__init__() (trimesh.caching.diskcache method)": [[19, "trimesh.caching.DiskCache.__init__"]], "byteswap() (trimesh.caching.trackedarray method)": [[19, "trimesh.caching.TrackedArray.byteswap"]], "cache_decorator() (in module trimesh.caching)": [[19, "trimesh.caching.cache_decorator"]], "clear() (trimesh.caching.cache method)": [[19, "trimesh.caching.Cache.clear"]], "clear() (trimesh.caching.datastore method)": [[19, "trimesh.caching.DataStore.clear"]], "delete() (trimesh.caching.cache method)": [[19, "trimesh.caching.Cache.delete"]], "fill() (trimesh.caching.trackedarray method)": [[19, "trimesh.caching.TrackedArray.fill"]], "get() (trimesh.caching.diskcache method)": [[19, "trimesh.caching.DiskCache.get"]], "hash_fallback() (in module trimesh.caching)": [[19, "trimesh.caching.hash_fallback"]], "id_set() (trimesh.caching.cache method)": [[19, "trimesh.caching.Cache.id_set"]], "is_empty() (trimesh.caching.datastore method)": [[19, "trimesh.caching.DataStore.is_empty"]], "itemset() (trimesh.caching.trackedarray method)": [[19, "trimesh.caching.TrackedArray.itemset"]], "mutable (trimesh.caching.datastore property)": [[19, "trimesh.caching.DataStore.mutable"]], "mutable (trimesh.caching.trackedarray property)": [[19, "trimesh.caching.TrackedArray.mutable"]], "partition() (trimesh.caching.trackedarray method)": [[19, "trimesh.caching.TrackedArray.partition"]], "pop() (trimesh.caching.datastore method)": [[19, "trimesh.caching.DataStore.pop"]], "put() (trimesh.caching.trackedarray method)": [[19, "trimesh.caching.TrackedArray.put"]], "setflags() (trimesh.caching.trackedarray method)": [[19, "trimesh.caching.TrackedArray.setflags"]], "sha256() (in module trimesh.caching)": [[19, "trimesh.caching.sha256"]], "sort() (trimesh.caching.trackedarray method)": [[19, "trimesh.caching.TrackedArray.sort"]], "tracked_array() (in module trimesh.caching)": [[19, "trimesh.caching.tracked_array"]], "trimesh.caching": [[19, "module-trimesh.caching"]], "update() (trimesh.caching.cache method)": [[19, "trimesh.caching.Cache.update"]], "update() (trimesh.caching.datastore method)": [[19, "trimesh.caching.DataStore.update"]], "verify() (trimesh.caching.cache method)": [[19, "trimesh.caching.Cache.verify"]], "collisionmanager (class in trimesh.collision)": [[20, "trimesh.collision.CollisionManager"]], "contactdata (class in trimesh.collision)": [[20, "trimesh.collision.ContactData"]], "distancedata (class in trimesh.collision)": [[20, "trimesh.collision.DistanceData"]], "__init__() (trimesh.collision.collisionmanager method)": [[20, "trimesh.collision.CollisionManager.__init__"]], "__init__() (trimesh.collision.contactdata method)": [[20, "trimesh.collision.ContactData.__init__"]], "__init__() (trimesh.collision.distancedata method)": [[20, "trimesh.collision.DistanceData.__init__"]], "add_object() (trimesh.collision.collisionmanager method)": [[20, "trimesh.collision.CollisionManager.add_object"]], "depth (trimesh.collision.contactdata property)": [[20, "trimesh.collision.ContactData.depth"]], "distance (trimesh.collision.distancedata property)": [[20, "trimesh.collision.DistanceData.distance"]], "in_collision_internal() (trimesh.collision.collisionmanager method)": [[20, "trimesh.collision.CollisionManager.in_collision_internal"]], "in_collision_other() (trimesh.collision.collisionmanager method)": [[20, "trimesh.collision.CollisionManager.in_collision_other"]], "in_collision_single() (trimesh.collision.collisionmanager method)": [[20, "trimesh.collision.CollisionManager.in_collision_single"]], "index() (trimesh.collision.contactdata method)": [[20, "trimesh.collision.ContactData.index"]], "index() (trimesh.collision.distancedata method)": [[20, "trimesh.collision.DistanceData.index"]], "mesh_to_bvh() (in module trimesh.collision)": [[20, "trimesh.collision.mesh_to_BVH"]], "mesh_to_convex() (in module trimesh.collision)": [[20, "trimesh.collision.mesh_to_convex"]], "min_distance_internal() (trimesh.collision.collisionmanager method)": [[20, "trimesh.collision.CollisionManager.min_distance_internal"]], "min_distance_other() (trimesh.collision.collisionmanager method)": [[20, "trimesh.collision.CollisionManager.min_distance_other"]], "min_distance_single() (trimesh.collision.collisionmanager method)": [[20, "trimesh.collision.CollisionManager.min_distance_single"]], "normal (trimesh.collision.contactdata property)": [[20, "trimesh.collision.ContactData.normal"]], "point (trimesh.collision.contactdata property)": [[20, "trimesh.collision.ContactData.point"]], "point() (trimesh.collision.distancedata method)": [[20, "trimesh.collision.DistanceData.point"]], "remove_object() (trimesh.collision.collisionmanager method)": [[20, "trimesh.collision.CollisionManager.remove_object"]], "scene_to_collision() (in module trimesh.collision)": [[20, "trimesh.collision.scene_to_collision"]], "set_transform() (trimesh.collision.collisionmanager method)": [[20, "trimesh.collision.CollisionManager.set_transform"]], "trimesh.collision": [[20, "module-trimesh.collision"]], "identifier_hash() (in module trimesh.comparison)": [[21, "trimesh.comparison.identifier_hash"]], "identifier_simple() (in module trimesh.comparison)": [[21, "trimesh.comparison.identifier_simple"]], "trimesh.comparison": [[21, "module-trimesh.comparison"]], "resolutionpath (class in trimesh.constants)": [[22, "trimesh.constants.ResolutionPath"]], "tolerancemesh (class in trimesh.constants)": [[22, "trimesh.constants.ToleranceMesh"]], "tolerancepath (class in trimesh.constants)": [[22, "trimesh.constants.TolerancePath"]], "__init__() (trimesh.constants.resolutionpath method)": [[22, "trimesh.constants.ResolutionPath.__init__"]], "__init__() (trimesh.constants.tolerancemesh method)": [[22, "trimesh.constants.ToleranceMesh.__init__"]], "__init__() (trimesh.constants.tolerancepath method)": [[22, "trimesh.constants.TolerancePath.__init__"]], "aspect_frac (trimesh.constants.tolerancepath attribute)": [[22, "trimesh.constants.TolerancePath.aspect_frac"]], "export (trimesh.constants.resolutionpath attribute)": [[22, "trimesh.constants.ResolutionPath.export"]], "facet_threshold (trimesh.constants.tolerancemesh attribute)": [[22, "trimesh.constants.ToleranceMesh.facet_threshold"]], "log_time() (in module trimesh.constants)": [[22, "trimesh.constants.log_time"]], "max_sections (trimesh.constants.resolutionpath attribute)": [[22, "trimesh.constants.ResolutionPath.max_sections"]], "merge (trimesh.constants.tolerancemesh attribute)": [[22, "trimesh.constants.ToleranceMesh.merge"]], "merge (trimesh.constants.tolerancepath attribute)": [[22, "trimesh.constants.TolerancePath.merge"]], "min_sections (trimesh.constants.resolutionpath attribute)": [[22, "trimesh.constants.ResolutionPath.min_sections"]], "planar (trimesh.constants.tolerancemesh attribute)": [[22, "trimesh.constants.ToleranceMesh.planar"]], "planar (trimesh.constants.tolerancepath attribute)": [[22, "trimesh.constants.TolerancePath.planar"]], "radius_frac (trimesh.constants.tolerancepath attribute)": [[22, "trimesh.constants.TolerancePath.radius_frac"]], "radius_max (trimesh.constants.tolerancepath attribute)": [[22, "trimesh.constants.TolerancePath.radius_max"]], "radius_min (trimesh.constants.tolerancepath attribute)": [[22, "trimesh.constants.TolerancePath.radius_min"]], "seg_angle (trimesh.constants.resolutionpath attribute)": [[22, "trimesh.constants.ResolutionPath.seg_angle"]], "seg_angle (trimesh.constants.tolerancepath attribute)": [[22, "trimesh.constants.TolerancePath.seg_angle"]], "seg_angle_frac (trimesh.constants.tolerancepath attribute)": [[22, "trimesh.constants.TolerancePath.seg_angle_frac"]], "seg_angle_min (trimesh.constants.tolerancepath attribute)": [[22, "trimesh.constants.TolerancePath.seg_angle_min"]], "seg_frac (trimesh.constants.resolutionpath attribute)": [[22, "trimesh.constants.ResolutionPath.seg_frac"]], "seg_frac (trimesh.constants.tolerancepath attribute)": [[22, "trimesh.constants.TolerancePath.seg_frac"]], "strict (trimesh.constants.tolerancemesh attribute)": [[22, "trimesh.constants.ToleranceMesh.strict"]], "strict (trimesh.constants.tolerancepath attribute)": [[22, "trimesh.constants.TolerancePath.strict"]], "tangent (trimesh.constants.tolerancepath attribute)": [[22, "trimesh.constants.TolerancePath.tangent"]], "trimesh.constants": [[22, "module-trimesh.constants"]], "zero (trimesh.constants.tolerancemesh attribute)": [[22, "trimesh.constants.ToleranceMesh.zero"]], "zero (trimesh.constants.tolerancepath attribute)": [[22, "trimesh.constants.TolerancePath.zero"]], "adjacency_projections() (in module trimesh.convex)": [[23, "trimesh.convex.adjacency_projections"]], "convex_hull() (in module trimesh.convex)": [[23, "trimesh.convex.convex_hull"]], "hull_points() (in module trimesh.convex)": [[23, "trimesh.convex.hull_points"]], "is_convex() (in module trimesh.convex)": [[23, "trimesh.convex.is_convex"]], "trimesh.convex": [[23, "module-trimesh.convex"]], "annulus() (in module trimesh.creation)": [[24, "trimesh.creation.annulus"]], "axis() (in module trimesh.creation)": [[24, "trimesh.creation.axis"]], "box() (in module trimesh.creation)": [[24, "trimesh.creation.box"]], "camera_marker() (in module trimesh.creation)": [[24, "trimesh.creation.camera_marker"]], "capsule() (in module trimesh.creation)": [[24, "trimesh.creation.capsule"]], "cone() (in module trimesh.creation)": [[24, "trimesh.creation.cone"]], "cylinder() (in module trimesh.creation)": [[24, "trimesh.creation.cylinder"]], "extrude_polygon() (in module trimesh.creation)": [[24, "trimesh.creation.extrude_polygon"]], "extrude_triangulation() (in module trimesh.creation)": [[24, "trimesh.creation.extrude_triangulation"]], "icosahedron() (in module trimesh.creation)": [[24, "trimesh.creation.icosahedron"]], "icosphere() (in module trimesh.creation)": [[24, "trimesh.creation.icosphere"]], "random_soup() (in module trimesh.creation)": [[24, "trimesh.creation.random_soup"]], "revolve() (in module trimesh.creation)": [[24, "trimesh.creation.revolve"]], "sweep_polygon() (in module trimesh.creation)": [[24, "trimesh.creation.sweep_polygon"]], "torus() (in module trimesh.creation)": [[24, "trimesh.creation.torus"]], "triangulate_polygon() (in module trimesh.creation)": [[24, "trimesh.creation.triangulate_polygon"]], "trimesh.creation": [[24, "module-trimesh.creation"]], "truncated_prisms() (in module trimesh.creation)": [[24, "trimesh.creation.truncated_prisms"]], "uv_sphere() (in module trimesh.creation)": [[24, "trimesh.creation.uv_sphere"]], "discrete_gaussian_curvature_measure() (in module trimesh.curvature)": [[25, "trimesh.curvature.discrete_gaussian_curvature_measure"]], "discrete_mean_curvature_measure() (in module trimesh.curvature)": [[25, "trimesh.curvature.discrete_mean_curvature_measure"]], "face_angles_sparse() (in module trimesh.curvature)": [[25, "trimesh.curvature.face_angles_sparse"]], "line_ball_intersection() (in module trimesh.curvature)": [[25, "trimesh.curvature.line_ball_intersection"]], "sphere_ball_intersection() (in module trimesh.curvature)": [[25, "trimesh.curvature.sphere_ball_intersection"]], "trimesh.curvature": [[25, "module-trimesh.curvature"]], "vertex_defects() (in module trimesh.curvature)": [[25, "trimesh.curvature.vertex_defects"]], "convex_decomposition() (in module trimesh.decomposition)": [[26, "trimesh.decomposition.convex_decomposition"]], "trimesh.decomposition": [[26, "module-trimesh.decomposition"]], "exceptionwrapper (class in trimesh.exceptions)": [[27, "trimesh.exceptions.ExceptionWrapper"]], "__init__() (trimesh.exceptions.exceptionwrapper method)": [[27, "trimesh.exceptions.ExceptionWrapper.__init__"]], "trimesh.exceptions": [[27, "module-trimesh.exceptions"]], "trimesh.exchange": [[28, "module-trimesh.exchange"]], "binvox (class in trimesh.exchange.binvox)": [[29, "trimesh.exchange.binvox.Binvox"]], "binvoxer (class in trimesh.exchange.binvox)": [[29, "trimesh.exchange.binvox.Binvoxer"]], "supported_input_types (trimesh.exchange.binvox.binvoxer attribute)": [[29, "trimesh.exchange.binvox.Binvoxer.SUPPORTED_INPUT_TYPES"]], "supported_output_types (trimesh.exchange.binvox.binvoxer attribute)": [[29, "trimesh.exchange.binvox.Binvoxer.SUPPORTED_OUTPUT_TYPES"]], "__init__() (trimesh.exchange.binvox.binvoxer method)": [[29, "trimesh.exchange.binvox.Binvoxer.__init__"]], "binvox_bytes() (in module trimesh.exchange.binvox)": [[29, "trimesh.exchange.binvox.binvox_bytes"]], "binvox_header() (in module trimesh.exchange.binvox)": [[29, "trimesh.exchange.binvox.binvox_header"]], "export_binvox() (in module trimesh.exchange.binvox)": [[29, "trimesh.exchange.binvox.export_binvox"]], "file_type (trimesh.exchange.binvox.binvoxer property)": [[29, "trimesh.exchange.binvox.Binvoxer.file_type"]], "load_binvox() (in module trimesh.exchange.binvox)": [[29, "trimesh.exchange.binvox.load_binvox"]], "parse_binvox() (in module trimesh.exchange.binvox)": [[29, "trimesh.exchange.binvox.parse_binvox"]], "parse_binvox_header() (in module trimesh.exchange.binvox)": [[29, "trimesh.exchange.binvox.parse_binvox_header"]], "rle_data (trimesh.exchange.binvox.binvox attribute)": [[29, "trimesh.exchange.binvox.Binvox.rle_data"]], "scale (trimesh.exchange.binvox.binvox attribute)": [[29, "trimesh.exchange.binvox.Binvox.scale"]], "shape (trimesh.exchange.binvox.binvox attribute)": [[29, "trimesh.exchange.binvox.Binvox.shape"]], "translate (trimesh.exchange.binvox.binvox attribute)": [[29, "trimesh.exchange.binvox.Binvox.translate"]], "trimesh.exchange.binvox": [[29, "module-trimesh.exchange.binvox"]], "voxel_from_binvox() (in module trimesh.exchange.binvox)": [[29, "trimesh.exchange.binvox.voxel_from_binvox"]], "voxelize_mesh() (in module trimesh.exchange.binvox)": [[29, "trimesh.exchange.binvox.voxelize_mesh"]], "export_collada() (in module trimesh.exchange.dae)": [[30, "trimesh.exchange.dae.export_collada"]], "load_collada() (in module trimesh.exchange.dae)": [[30, "trimesh.exchange.dae.load_collada"]], "load_zae() (in module trimesh.exchange.dae)": [[30, "trimesh.exchange.dae.load_zae"]], "trimesh.exchange.dae": [[30, "module-trimesh.exchange.dae"]], "export_dict() (in module trimesh.exchange.export)": [[31, "trimesh.exchange.export.export_dict"]], "export_dict64() (in module trimesh.exchange.export)": [[31, "trimesh.exchange.export.export_dict64"]], "export_mesh() (in module trimesh.exchange.export)": [[31, "trimesh.exchange.export.export_mesh"]], "export_scene() (in module trimesh.exchange.export)": [[31, "trimesh.exchange.export.export_scene"]], "scene_to_dict() (in module trimesh.exchange.export)": [[31, "trimesh.exchange.export.scene_to_dict"]], "trimesh.exchange.export": [[31, "module-trimesh.exchange.export"]], "export_glb() (in module trimesh.exchange.gltf)": [[32, "trimesh.exchange.gltf.export_glb"]], "export_gltf() (in module trimesh.exchange.gltf)": [[32, "trimesh.exchange.gltf.export_gltf"]], "get_schema() (in module trimesh.exchange.gltf)": [[32, "trimesh.exchange.gltf.get_schema"]], "load_glb() (in module trimesh.exchange.gltf)": [[32, "trimesh.exchange.gltf.load_glb"]], "load_gltf() (in module trimesh.exchange.gltf)": [[32, "trimesh.exchange.gltf.load_gltf"]], "trimesh.exchange.gltf": [[32, "module-trimesh.exchange.gltf"]], "validate() (in module trimesh.exchange.gltf)": [[32, "trimesh.exchange.gltf.validate"]], "available_formats() (in module trimesh.exchange.load)": [[33, "trimesh.exchange.load.available_formats"]], "load() (in module trimesh.exchange.load)": [[33, "trimesh.exchange.load.load"]], "load_compressed() (in module trimesh.exchange.load)": [[33, "trimesh.exchange.load.load_compressed"]], "load_kwargs() (in module trimesh.exchange.load)": [[33, "trimesh.exchange.load.load_kwargs"]], "load_mesh() (in module trimesh.exchange.load)": [[33, "trimesh.exchange.load.load_mesh"]], "load_remote() (in module trimesh.exchange.load)": [[33, "trimesh.exchange.load.load_remote"]], "mesh_formats() (in module trimesh.exchange.load)": [[33, "trimesh.exchange.load.mesh_formats"]], "parse_file_args() (in module trimesh.exchange.load)": [[33, "trimesh.exchange.load.parse_file_args"]], "trimesh.exchange.load": [[33, "module-trimesh.exchange.load"]], "load_dict() (in module trimesh.exchange.misc)": [[34, "trimesh.exchange.misc.load_dict"]], "load_meshio() (in module trimesh.exchange.misc)": [[34, "trimesh.exchange.misc.load_meshio"]], "trimesh.exchange.misc": [[34, "module-trimesh.exchange.misc"]], "export_obj() (in module trimesh.exchange.obj)": [[35, "trimesh.exchange.obj.export_obj"]], "load_obj() (in module trimesh.exchange.obj)": [[35, "trimesh.exchange.obj.load_obj"]], "parse_mtl() (in module trimesh.exchange.obj)": [[35, "trimesh.exchange.obj.parse_mtl"]], "trimesh.exchange.obj": [[35, "module-trimesh.exchange.obj"]], "export_off() (in module trimesh.exchange.off)": [[36, "trimesh.exchange.off.export_off"]], "load_off() (in module trimesh.exchange.off)": [[36, "trimesh.exchange.off.load_off"]], "trimesh.exchange.off": [[36, "module-trimesh.exchange.off"]], "load_ctm() (in module trimesh.exchange.openctm)": [[37, "trimesh.exchange.openctm.load_ctm"]], "trimesh.exchange.openctm": [[37, "module-trimesh.exchange.openctm"]], "export_draco() (in module trimesh.exchange.ply)": [[38, "trimesh.exchange.ply.export_draco"]], "export_ply() (in module trimesh.exchange.ply)": [[38, "trimesh.exchange.ply.export_ply"]], "load_draco() (in module trimesh.exchange.ply)": [[38, "trimesh.exchange.ply.load_draco"]], "load_ply() (in module trimesh.exchange.ply)": [[38, "trimesh.exchange.ply.load_ply"]], "trimesh.exchange.ply": [[38, "module-trimesh.exchange.ply"]], "headererror": [[39, "trimesh.exchange.stl.HeaderError"]], "export_stl() (in module trimesh.exchange.stl)": [[39, "trimesh.exchange.stl.export_stl"]], "export_stl_ascii() (in module trimesh.exchange.stl)": [[39, "trimesh.exchange.stl.export_stl_ascii"]], "load_stl() (in module trimesh.exchange.stl)": [[39, "trimesh.exchange.stl.load_stl"]], "load_stl_ascii() (in module trimesh.exchange.stl)": [[39, "trimesh.exchange.stl.load_stl_ascii"]], "load_stl_binary() (in module trimesh.exchange.stl)": [[39, "trimesh.exchange.stl.load_stl_binary"]], "trimesh.exchange.stl": [[39, "module-trimesh.exchange.stl"]], "load_3dxml() (in module trimesh.exchange.threedxml)": [[40, "trimesh.exchange.threedxml.load_3DXML"]], "print_element() (in module trimesh.exchange.threedxml)": [[40, "trimesh.exchange.threedxml.print_element"]], "trimesh.exchange.threedxml": [[40, "module-trimesh.exchange.threedxml"]], "export_3mf() (in module trimesh.exchange.threemf)": [[41, "trimesh.exchange.threemf.export_3MF"]], "load_3mf() (in module trimesh.exchange.threemf)": [[41, "trimesh.exchange.threemf.load_3MF"]], "trimesh.exchange.threemf": [[41, "module-trimesh.exchange.threemf"]], "export_urdf() (in module trimesh.exchange.urdf)": [[42, "trimesh.exchange.urdf.export_urdf"]], "trimesh.exchange.urdf": [[42, "module-trimesh.exchange.urdf"]], "load_xaml() (in module trimesh.exchange.xaml)": [[43, "trimesh.exchange.xaml.load_XAML"]], "trimesh.exchange.xaml": [[43, "module-trimesh.exchange.xaml"]], "export_xyz() (in module trimesh.exchange.xyz)": [[44, "trimesh.exchange.xyz.export_xyz"]], "load_xyz() (in module trimesh.exchange.xyz)": [[44, "trimesh.exchange.xyz.load_xyz"]], "trimesh.exchange.xyz": [[44, "module-trimesh.exchange.xyz"]], "align_vectors() (in module trimesh.geometry)": [[45, "trimesh.geometry.align_vectors"]], "faces_to_edges() (in module trimesh.geometry)": [[45, "trimesh.geometry.faces_to_edges"]], "index_sparse() (in module trimesh.geometry)": [[45, "trimesh.geometry.index_sparse"]], "mean_vertex_normals() (in module trimesh.geometry)": [[45, "trimesh.geometry.mean_vertex_normals"]], "plane_transform() (in module trimesh.geometry)": [[45, "trimesh.geometry.plane_transform"]], "triangulate_quads() (in module trimesh.geometry)": [[45, "trimesh.geometry.triangulate_quads"]], "trimesh.geometry": [[45, "module-trimesh.geometry"]], "vector_angle() (in module trimesh.geometry)": [[45, "trimesh.geometry.vector_angle"]], "vertex_face_indices() (in module trimesh.geometry)": [[45, "trimesh.geometry.vertex_face_indices"]], "weighted_vertex_normals() (in module trimesh.geometry)": [[45, "trimesh.geometry.weighted_vertex_normals"]], "connected_component_labels() (in module trimesh.graph)": [[46, "trimesh.graph.connected_component_labels"]], "connected_components() (in module trimesh.graph)": [[46, "trimesh.graph.connected_components"]], "edges_to_coo() (in module trimesh.graph)": [[46, "trimesh.graph.edges_to_coo"]], "face_adjacency() (in module trimesh.graph)": [[46, "trimesh.graph.face_adjacency"]], "face_adjacency_radius() (in module trimesh.graph)": [[46, "trimesh.graph.face_adjacency_radius"]], "face_adjacency_unshared() (in module trimesh.graph)": [[46, "trimesh.graph.face_adjacency_unshared"]], "face_neighborhood() (in module trimesh.graph)": [[46, "trimesh.graph.face_neighborhood"]], "facets() (in module trimesh.graph)": [[46, "trimesh.graph.facets"]], "fill_traversals() (in module trimesh.graph)": [[46, "trimesh.graph.fill_traversals"]], "graph_to_svg() (in module trimesh.graph)": [[46, "trimesh.graph.graph_to_svg"]], "is_watertight() (in module trimesh.graph)": [[46, "trimesh.graph.is_watertight"]], "multigraph_collect() (in module trimesh.graph)": [[46, "trimesh.graph.multigraph_collect"]], "multigraph_paths() (in module trimesh.graph)": [[46, "trimesh.graph.multigraph_paths"]], "neighbors() (in module trimesh.graph)": [[46, "trimesh.graph.neighbors"]], "shared_edges() (in module trimesh.graph)": [[46, "trimesh.graph.shared_edges"]], "smooth_shade() (in module trimesh.graph)": [[46, "trimesh.graph.smooth_shade"]], "smoothed() (in module trimesh.graph)": [[46, "trimesh.graph.smoothed"]], "split() (in module trimesh.graph)": [[46, "trimesh.graph.split"]], "split_traversal() (in module trimesh.graph)": [[46, "trimesh.graph.split_traversal"]], "traversals() (in module trimesh.graph)": [[46, "trimesh.graph.traversals"]], "trimesh.graph": [[46, "module-trimesh.graph"]], "vertex_adjacency_graph() (in module trimesh.graph)": [[46, "trimesh.graph.vertex_adjacency_graph"]], "blocks() (in module trimesh.grouping)": [[47, "trimesh.grouping.blocks"]], "boolean_rows() (in module trimesh.grouping)": [[47, "trimesh.grouping.boolean_rows"]], "clusters() (in module trimesh.grouping)": [[47, "trimesh.grouping.clusters"]], "float_to_int() (in module trimesh.grouping)": [[47, "trimesh.grouping.float_to_int"]], "group() (in module trimesh.grouping)": [[47, "trimesh.grouping.group"]], "group_distance() (in module trimesh.grouping)": [[47, "trimesh.grouping.group_distance"]], "group_min() (in module trimesh.grouping)": [[47, "trimesh.grouping.group_min"]], "group_rows() (in module trimesh.grouping)": [[47, "trimesh.grouping.group_rows"]], "group_vectors() (in module trimesh.grouping)": [[47, "trimesh.grouping.group_vectors"]], "hashable_rows() (in module trimesh.grouping)": [[47, "trimesh.grouping.hashable_rows"]], "merge_runs() (in module trimesh.grouping)": [[47, "trimesh.grouping.merge_runs"]], "merge_vertices() (in module trimesh.grouping)": [[47, "trimesh.grouping.merge_vertices"]], "trimesh.grouping": [[47, "module-trimesh.grouping"]], "unique_bincount() (in module trimesh.grouping)": [[47, "trimesh.grouping.unique_bincount"]], "unique_float() (in module trimesh.grouping)": [[47, "trimesh.grouping.unique_float"]], "unique_ordered() (in module trimesh.grouping)": [[47, "trimesh.grouping.unique_ordered"]], "unique_rows() (in module trimesh.grouping)": [[47, "trimesh.grouping.unique_rows"]], "unique_value_in_row() (in module trimesh.grouping)": [[47, "trimesh.grouping.unique_value_in_row"]], "cylinder_inertia() (in module trimesh.inertia)": [[48, "trimesh.inertia.cylinder_inertia"]], "principal_axis() (in module trimesh.inertia)": [[48, "trimesh.inertia.principal_axis"]], "radial_symmetry() (in module trimesh.inertia)": [[48, "trimesh.inertia.radial_symmetry"]], "scene_inertia() (in module trimesh.inertia)": [[48, "trimesh.inertia.scene_inertia"]], "sphere_inertia() (in module trimesh.inertia)": [[48, "trimesh.inertia.sphere_inertia"]], "transform_inertia() (in module trimesh.inertia)": [[48, "trimesh.inertia.transform_inertia"]], "trimesh.inertia": [[48, "module-trimesh.inertia"]], "trimesh.interfaces": [[49, "module-trimesh.interfaces"]], "boolean() (in module trimesh.interfaces.blender)": [[50, "trimesh.interfaces.blender.boolean"]], "trimesh.interfaces.blender": [[50, "module-trimesh.interfaces.blender"]], "unwrap() (in module trimesh.interfaces.blender)": [[50, "trimesh.interfaces.blender.unwrap"]], "meshscript (class in trimesh.interfaces.generic)": [[51, "trimesh.interfaces.generic.MeshScript"]], "__init__() (trimesh.interfaces.generic.meshscript method)": [[51, "trimesh.interfaces.generic.MeshScript.__init__"]], "run() (trimesh.interfaces.generic.meshscript method)": [[51, "trimesh.interfaces.generic.MeshScript.run"]], "trimesh.interfaces.generic": [[51, "module-trimesh.interfaces.generic"]], "load_gmsh() (in module trimesh.interfaces.gmsh)": [[52, "trimesh.interfaces.gmsh.load_gmsh"]], "to_volume() (in module trimesh.interfaces.gmsh)": [[52, "trimesh.interfaces.gmsh.to_volume"]], "trimesh.interfaces.gmsh": [[52, "module-trimesh.interfaces.gmsh"]], "boolean() (in module trimesh.interfaces.scad)": [[53, "trimesh.interfaces.scad.boolean"]], "interface_scad() (in module trimesh.interfaces.scad)": [[53, "trimesh.interfaces.scad.interface_scad"]], "trimesh.interfaces.scad": [[53, "module-trimesh.interfaces.scad"]], "mesh_multiplane() (in module trimesh.intersections)": [[54, "trimesh.intersections.mesh_multiplane"]], "mesh_plane() (in module trimesh.intersections)": [[54, "trimesh.intersections.mesh_plane"]], "plane_lines() (in module trimesh.intersections)": [[54, "trimesh.intersections.plane_lines"]], "planes_lines() (in module trimesh.intersections)": [[54, "trimesh.intersections.planes_lines"]], "slice_faces_plane() (in module trimesh.intersections)": [[54, "trimesh.intersections.slice_faces_plane"]], "slice_mesh_plane() (in module trimesh.intersections)": [[54, "trimesh.intersections.slice_mesh_plane"]], "trimesh.intersections": [[54, "module-trimesh.intersections"]], "intersection() (in module trimesh.interval)": [[55, "trimesh.interval.intersection"]], "trimesh.interval": [[55, "module-trimesh.interval"]], "union() (in module trimesh.interval)": [[55, "trimesh.interval.union"]], "fit_nsphere() (in module trimesh.nsphere)": [[56, "trimesh.nsphere.fit_nsphere"]], "is_nsphere() (in module trimesh.nsphere)": [[56, "trimesh.nsphere.is_nsphere"]], "minimum_nsphere() (in module trimesh.nsphere)": [[56, "trimesh.nsphere.minimum_nsphere"]], "trimesh.nsphere": [[56, "module-trimesh.nsphere"]], "geometry (class in trimesh.parent)": [[57, "trimesh.parent.Geometry"]], "geometry3d (class in trimesh.parent)": [[57, "trimesh.parent.Geometry3D"]], "apply_obb() (trimesh.parent.geometry3d method)": [[57, "trimesh.parent.Geometry3D.apply_obb"]], "apply_scale() (trimesh.parent.geometry method)": [[57, "trimesh.parent.Geometry.apply_scale"]], "apply_transform() (trimesh.parent.geometry method)": [[57, "trimesh.parent.Geometry.apply_transform"]], "apply_translation() (trimesh.parent.geometry method)": [[57, "trimesh.parent.Geometry.apply_translation"]], "bounding_box (trimesh.parent.geometry3d property)": [[57, "trimesh.parent.Geometry3D.bounding_box"]], "bounding_box_oriented (trimesh.parent.geometry3d property)": [[57, "trimesh.parent.Geometry3D.bounding_box_oriented"]], "bounding_cylinder (trimesh.parent.geometry3d property)": [[57, "trimesh.parent.Geometry3D.bounding_cylinder"]], "bounding_primitive (trimesh.parent.geometry3d property)": [[57, "trimesh.parent.Geometry3D.bounding_primitive"]], "bounding_sphere (trimesh.parent.geometry3d property)": [[57, "trimesh.parent.Geometry3D.bounding_sphere"]], "bounds (trimesh.parent.geometry property)": [[57, "trimesh.parent.Geometry.bounds"]], "copy() (trimesh.parent.geometry method)": [[57, "trimesh.parent.Geometry.copy"]], "export() (trimesh.parent.geometry method)": [[57, "trimesh.parent.Geometry.export"]], "extents (trimesh.parent.geometry property)": [[57, "trimesh.parent.Geometry.extents"]], "is_empty() (trimesh.parent.geometry method)": [[57, "trimesh.parent.Geometry.is_empty"]], "scale (trimesh.parent.geometry property)": [[57, "trimesh.parent.Geometry.scale"]], "show() (trimesh.parent.geometry method)": [[57, "trimesh.parent.Geometry.show"]], "trimesh.parent": [[57, "module-trimesh.parent"]], "path2d (class in trimesh.path)": [[58, "trimesh.path.Path2D"]], "path3d (class in trimesh.path)": [[58, "trimesh.path.Path3D"]], "apply_obb() (trimesh.path.path2d method)": [[58, "trimesh.path.Path2D.apply_obb"]], "apply_scale() (trimesh.path.path2d method)": [[58, "trimesh.path.Path2D.apply_scale"]], "area (trimesh.path.path2d property)": [[58, "trimesh.path.Path2D.area"]], "body_count (trimesh.path.path2d property)": [[58, "trimesh.path.Path2D.body_count"]], "connected_paths() (trimesh.path.path2d method)": [[58, "trimesh.path.Path2D.connected_paths"]], "enclosure (trimesh.path.path2d property)": [[58, "trimesh.path.Path2D.enclosure"]], "enclosure_directed (trimesh.path.path2d property)": [[58, "trimesh.path.Path2D.enclosure_directed"]], "enclosure_shell (trimesh.path.path2d property)": [[58, "trimesh.path.Path2D.enclosure_shell"]], "extrude() (trimesh.path.path2d method)": [[58, "trimesh.path.Path2D.extrude"]], "identifier (trimesh.path.path2d property)": [[58, "trimesh.path.Path2D.identifier"]], "identifier_hash (trimesh.path.path2d property)": [[58, "trimesh.path.Path2D.identifier_hash"]], "medial_axis() (trimesh.path.path2d method)": [[58, "trimesh.path.Path2D.medial_axis"]], "obb (trimesh.path.path2d property)": [[58, "trimesh.path.Path2D.obb"]], "path_valid (trimesh.path.path2d property)": [[58, "trimesh.path.Path2D.path_valid"]], "plot_discrete() (trimesh.path.path2d method)": [[58, "trimesh.path.Path2D.plot_discrete"]], "plot_entities() (trimesh.path.path2d method)": [[58, "trimesh.path.Path2D.plot_entities"]], "polygons_closed (trimesh.path.path2d property)": [[58, "trimesh.path.Path2D.polygons_closed"]], "polygons_full (trimesh.path.path2d property)": [[58, "trimesh.path.Path2D.polygons_full"]], "rasterize() (trimesh.path.path2d method)": [[58, "trimesh.path.Path2D.rasterize"]], "root (trimesh.path.path2d property)": [[58, "trimesh.path.Path2D.root"]], "sample() (trimesh.path.path2d method)": [[58, "trimesh.path.Path2D.sample"]], "show() (trimesh.path.path2d method)": [[58, "trimesh.path.Path2D.show"]], "show() (trimesh.path.path3d method)": [[58, "trimesh.path.Path3D.show"]], "simplify() (trimesh.path.path2d method)": [[58, "trimesh.path.Path2D.simplify"]], "simplify_spline() (trimesh.path.path2d method)": [[58, "trimesh.path.Path2D.simplify_spline"]], "split() (trimesh.path.path2d method)": [[58, "trimesh.path.Path2D.split"]], "to_3d() (trimesh.path.path2d method)": [[58, "trimesh.path.Path2D.to_3D"]], "to_planar() (trimesh.path.path3d method)": [[58, "trimesh.path.Path3D.to_planar"]], "triangulate() (trimesh.path.path2d method)": [[58, "trimesh.path.Path2D.triangulate"]], "trimesh.path": [[58, "module-trimesh.path"]], "arcinfo (class in trimesh.path.arc)": [[59, "trimesh.path.arc.ArcInfo"]], "__init__() (trimesh.path.arc.arcinfo method)": [[59, "trimesh.path.arc.ArcInfo.__init__"]], "angles (trimesh.path.arc.arcinfo attribute)": [[59, "trimesh.path.arc.ArcInfo.angles"]], "arc_center() (in module trimesh.path.arc)": [[59, "trimesh.path.arc.arc_center"]], "center (trimesh.path.arc.arcinfo attribute)": [[59, "trimesh.path.arc.ArcInfo.center"]], "discretize_arc() (in module trimesh.path.arc)": [[59, "trimesh.path.arc.discretize_arc"]], "normal (trimesh.path.arc.arcinfo attribute)": [[59, "trimesh.path.arc.ArcInfo.normal"]], "radius (trimesh.path.arc.arcinfo attribute)": [[59, "trimesh.path.arc.ArcInfo.radius"]], "span (trimesh.path.arc.arcinfo attribute)": [[59, "trimesh.path.arc.ArcInfo.span"]], "to_threepoint() (in module trimesh.path.arc)": [[59, "trimesh.path.arc.to_threepoint"]], "trimesh.path.arc": [[59, "module-trimesh.path.arc"]], "box_outline() (in module trimesh.path.creation)": [[60, "trimesh.path.creation.box_outline"]], "circle() (in module trimesh.path.creation)": [[60, "trimesh.path.creation.circle"]], "circle_pattern() (in module trimesh.path.creation)": [[60, "trimesh.path.creation.circle_pattern"]], "grid() (in module trimesh.path.creation)": [[60, "trimesh.path.creation.grid"]], "rectangle() (in module trimesh.path.creation)": [[60, "trimesh.path.creation.rectangle"]], "trimesh.path.creation": [[60, "module-trimesh.path.creation"]], "binomial() (in module trimesh.path.curve)": [[61, "trimesh.path.curve.binomial"]], "discretize_bezier() (in module trimesh.path.curve)": [[61, "trimesh.path.curve.discretize_bezier"]], "discretize_bspline() (in module trimesh.path.curve)": [[61, "trimesh.path.curve.discretize_bspline"]], "trimesh.path.curve": [[61, "module-trimesh.path.curve"]], "arc (class in trimesh.path.entities)": [[62, "trimesh.path.entities.Arc"]], "bspline (class in trimesh.path.entities)": [[62, "trimesh.path.entities.BSpline"]], "bezier (class in trimesh.path.entities)": [[62, "trimesh.path.entities.Bezier"]], "curve (class in trimesh.path.entities)": [[62, "trimesh.path.entities.Curve"]], "entity (class in trimesh.path.entities)": [[62, "trimesh.path.entities.Entity"]], "line (class in trimesh.path.entities)": [[62, "trimesh.path.entities.Line"]], "text (class in trimesh.path.entities)": [[62, "trimesh.path.entities.Text"]], "__init__() (trimesh.path.entities.bspline method)": [[62, "trimesh.path.entities.BSpline.__init__"]], "__init__() (trimesh.path.entities.entity method)": [[62, "trimesh.path.entities.Entity.__init__"]], "__init__() (trimesh.path.entities.text method)": [[62, "trimesh.path.entities.Text.__init__"]], "angle() (trimesh.path.entities.text method)": [[62, "trimesh.path.entities.Text.angle"]], "bounds() (trimesh.path.entities.arc method)": [[62, "trimesh.path.entities.Arc.bounds"]], "bounds() (trimesh.path.entities.entity method)": [[62, "trimesh.path.entities.Entity.bounds"]], "center() (trimesh.path.entities.arc method)": [[62, "trimesh.path.entities.Arc.center"]], "closed (trimesh.path.entities.arc property)": [[62, "trimesh.path.entities.Arc.closed"]], "closed (trimesh.path.entities.entity property)": [[62, "trimesh.path.entities.Entity.closed"]], "closed (trimesh.path.entities.text property)": [[62, "trimesh.path.entities.Text.closed"]], "copy() (trimesh.path.entities.entity method)": [[62, "trimesh.path.entities.Entity.copy"]], "discrete() (trimesh.path.entities.arc method)": [[62, "trimesh.path.entities.Arc.discrete"]], "discrete() (trimesh.path.entities.bspline method)": [[62, "trimesh.path.entities.BSpline.discrete"]], "discrete() (trimesh.path.entities.bezier method)": [[62, "trimesh.path.entities.Bezier.discrete"]], "discrete() (trimesh.path.entities.line method)": [[62, "trimesh.path.entities.Line.discrete"]], "discrete() (trimesh.path.entities.text method)": [[62, "trimesh.path.entities.Text.discrete"]], "end_points (trimesh.path.entities.entity property)": [[62, "trimesh.path.entities.Entity.end_points"]], "end_points (trimesh.path.entities.text property)": [[62, "trimesh.path.entities.Text.end_points"]], "explode() (trimesh.path.entities.entity method)": [[62, "trimesh.path.entities.Entity.explode"]], "explode() (trimesh.path.entities.line method)": [[62, "trimesh.path.entities.Line.explode"]], "is_valid (trimesh.path.entities.arc property)": [[62, "trimesh.path.entities.Arc.is_valid"]], "is_valid (trimesh.path.entities.entity property)": [[62, "trimesh.path.entities.Entity.is_valid"]], "is_valid (trimesh.path.entities.line property)": [[62, "trimesh.path.entities.Line.is_valid"]], "is_valid (trimesh.path.entities.text property)": [[62, "trimesh.path.entities.Text.is_valid"]], "layer (trimesh.path.entities.entity property)": [[62, "trimesh.path.entities.Entity.layer"]], "length() (trimesh.path.entities.arc method)": [[62, "trimesh.path.entities.Arc.length"]], "length() (trimesh.path.entities.entity method)": [[62, "trimesh.path.entities.Entity.length"]], "length() (trimesh.path.entities.text method)": [[62, "trimesh.path.entities.Text.length"]], "metadata (trimesh.path.entities.entity property)": [[62, "trimesh.path.entities.Entity.metadata"]], "nodes (trimesh.path.entities.curve property)": [[62, "trimesh.path.entities.Curve.nodes"]], "nodes (trimesh.path.entities.entity property)": [[62, "trimesh.path.entities.Entity.nodes"]], "nodes (trimesh.path.entities.text property)": [[62, "trimesh.path.entities.Text.nodes"]], "normal (trimesh.path.entities.text property)": [[62, "trimesh.path.entities.Text.normal"]], "origin (trimesh.path.entities.text property)": [[62, "trimesh.path.entities.Text.origin"]], "plot() (trimesh.path.entities.text method)": [[62, "trimesh.path.entities.Text.plot"]], "reverse() (trimesh.path.entities.entity method)": [[62, "trimesh.path.entities.Entity.reverse"]], "to_dict() (trimesh.path.entities.bspline method)": [[62, "trimesh.path.entities.BSpline.to_dict"]], "to_dict() (trimesh.path.entities.entity method)": [[62, "trimesh.path.entities.Entity.to_dict"]], "trimesh.path.entities": [[62, "module-trimesh.path.entities"]], "vector (trimesh.path.entities.text property)": [[62, "trimesh.path.entities.Text.vector"]], "trimesh.path.exchange": [[63, "module-trimesh.path.exchange"]], "bulge_to_arcs() (in module trimesh.path.exchange.dxf)": [[64, "trimesh.path.exchange.dxf.bulge_to_arcs"]], "convert_entities() (in module trimesh.path.exchange.dxf)": [[64, "trimesh.path.exchange.dxf.convert_entities"]], "export_dxf() (in module trimesh.path.exchange.dxf)": [[64, "trimesh.path.exchange.dxf.export_dxf"]], "get_key() (in module trimesh.path.exchange.dxf)": [[64, "trimesh.path.exchange.dxf.get_key"]], "load_dxf() (in module trimesh.path.exchange.dxf)": [[64, "trimesh.path.exchange.dxf.load_dxf"]], "trimesh.path.exchange.dxf": [[64, "module-trimesh.path.exchange.dxf"]], "export_dict() (in module trimesh.path.exchange.export)": [[65, "trimesh.path.exchange.export.export_dict"]], "export_path() (in module trimesh.path.exchange.export)": [[65, "trimesh.path.exchange.export.export_path"]], "trimesh.path.exchange.export": [[65, "module-trimesh.path.exchange.export"]], "load_path() (in module trimesh.path.exchange.load)": [[66, "trimesh.path.exchange.load.load_path"]], "path_formats() (in module trimesh.path.exchange.load)": [[66, "trimesh.path.exchange.load.path_formats"]], "trimesh.path.exchange.load": [[66, "module-trimesh.path.exchange.load"]], "dict_to_path() (in module trimesh.path.exchange.misc)": [[67, "trimesh.path.exchange.misc.dict_to_path"]], "edges_to_path() (in module trimesh.path.exchange.misc)": [[67, "trimesh.path.exchange.misc.edges_to_path"]], "faces_to_path() (in module trimesh.path.exchange.misc)": [[67, "trimesh.path.exchange.misc.faces_to_path"]], "lines_to_path() (in module trimesh.path.exchange.misc)": [[67, "trimesh.path.exchange.misc.lines_to_path"]], "linestrings_to_path() (in module trimesh.path.exchange.misc)": [[67, "trimesh.path.exchange.misc.linestrings_to_path"]], "polygon_to_path() (in module trimesh.path.exchange.misc)": [[67, "trimesh.path.exchange.misc.polygon_to_path"]], "trimesh.path.exchange.misc": [[67, "module-trimesh.path.exchange.misc"]], "export_svg() (in module trimesh.path.exchange.svg_io)": [[68, "trimesh.path.exchange.svg_io.export_svg"]], "svg_to_path() (in module trimesh.path.exchange.svg_io)": [[68, "trimesh.path.exchange.svg_io.svg_to_path"]], "transform_to_matrices() (in module trimesh.path.exchange.svg_io)": [[68, "trimesh.path.exchange.svg_io.transform_to_matrices"]], "trimesh.path.exchange.svg_io": [[68, "module-trimesh.path.exchange.svg_io"]], "line_line() (in module trimesh.path.intersections)": [[69, "trimesh.path.intersections.line_line"]], "trimesh.path.intersections": [[69, "module-trimesh.path.intersections"]], "rectanglebin (class in trimesh.path.packing)": [[70, "trimesh.path.packing.RectangleBin"]], "__init__() (trimesh.path.packing.rectanglebin method)": [[70, "trimesh.path.packing.RectangleBin.__init__"]], "bounds_overlap() (in module trimesh.path.packing)": [[70, "trimesh.path.packing.bounds_overlap"]], "extents (trimesh.path.packing.rectanglebin property)": [[70, "trimesh.path.packing.RectangleBin.extents"]], "images() (in module trimesh.path.packing)": [[70, "trimesh.path.packing.images"]], "insert() (trimesh.path.packing.rectanglebin method)": [[70, "trimesh.path.packing.RectangleBin.insert"]], "meshes() (in module trimesh.path.packing)": [[70, "trimesh.path.packing.meshes"]], "paths() (in module trimesh.path.packing)": [[70, "trimesh.path.packing.paths"]], "polygons() (in module trimesh.path.packing)": [[70, "trimesh.path.packing.polygons"]], "rectangles() (in module trimesh.path.packing)": [[70, "trimesh.path.packing.rectangles"]], "rectangles_single() (in module trimesh.path.packing)": [[70, "trimesh.path.packing.rectangles_single"]], "roll_transform() (in module trimesh.path.packing)": [[70, "trimesh.path.packing.roll_transform"]], "trimesh.path.packing": [[70, "module-trimesh.path.packing"]], "visualize() (in module trimesh.path.packing)": [[70, "trimesh.path.packing.visualize"]], "path (class in trimesh.path.path)": [[71, "trimesh.path.path.Path"]], "path2d (class in trimesh.path.path)": [[71, "trimesh.path.path.Path2D"]], "path3d (class in trimesh.path.path)": [[71, "trimesh.path.path.Path3D"]], "__init__() (trimesh.path.path.path method)": [[71, "trimesh.path.path.Path.__init__"]], "apply_layer() (trimesh.path.path.path method)": [[71, "trimesh.path.path.Path.apply_layer"]], "apply_obb() (trimesh.path.path.path2d method)": [[71, "trimesh.path.path.Path2D.apply_obb"]], "apply_scale() (trimesh.path.path.path2d method)": [[71, "trimesh.path.path.Path2D.apply_scale"]], "apply_transform() (trimesh.path.path.path method)": [[71, "trimesh.path.path.Path.apply_transform"]], "area (trimesh.path.path.path2d property)": [[71, "trimesh.path.path.Path2D.area"]], "body_count (trimesh.path.path.path2d property)": [[71, "trimesh.path.path.Path2D.body_count"]], "bounds (trimesh.path.path.path property)": [[71, "trimesh.path.path.Path.bounds"]], "centroid (trimesh.path.path.path property)": [[71, "trimesh.path.path.Path.centroid"]], "colors (trimesh.path.path.path property)": [[71, "trimesh.path.path.Path.colors"]], "connected_paths() (trimesh.path.path.path2d method)": [[71, "trimesh.path.path.Path2D.connected_paths"]], "convert_units() (trimesh.path.path.path method)": [[71, "trimesh.path.path.Path.convert_units"]], "copy() (trimesh.path.path.path method)": [[71, "trimesh.path.path.Path.copy"]], "dangling (trimesh.path.path.path property)": [[71, "trimesh.path.path.Path.dangling"]], "discrete (trimesh.path.path.path property)": [[71, "trimesh.path.path.Path.discrete"]], "enclosure (trimesh.path.path.path2d property)": [[71, "trimesh.path.path.Path2D.enclosure"]], "enclosure_directed (trimesh.path.path.path2d property)": [[71, "trimesh.path.path.Path2D.enclosure_directed"]], "enclosure_shell (trimesh.path.path.path2d property)": [[71, "trimesh.path.path.Path2D.enclosure_shell"]], "entities (trimesh.path.path.path property)": [[71, "trimesh.path.path.Path.entities"]], "explode() (trimesh.path.path.path method)": [[71, "trimesh.path.path.Path.explode"]], "export() (trimesh.path.path.path method)": [[71, "trimesh.path.path.Path.export"]], "extents (trimesh.path.path.path property)": [[71, "trimesh.path.path.Path.extents"]], "extrude() (trimesh.path.path.path2d method)": [[71, "trimesh.path.path.Path2D.extrude"]], "fill_gaps() (trimesh.path.path.path method)": [[71, "trimesh.path.path.Path.fill_gaps"]], "identifier (trimesh.path.path.path2d property)": [[71, "trimesh.path.path.Path2D.identifier"]], "identifier_hash (trimesh.path.path.path2d property)": [[71, "trimesh.path.path.Path2D.identifier_hash"]], "is_closed (trimesh.path.path.path property)": [[71, "trimesh.path.path.Path.is_closed"]], "is_empty (trimesh.path.path.path property)": [[71, "trimesh.path.path.Path.is_empty"]], "kdtree (trimesh.path.path.path property)": [[71, "trimesh.path.path.Path.kdtree"]], "layers (trimesh.path.path.path property)": [[71, "trimesh.path.path.Path.layers"]], "length (trimesh.path.path.path property)": [[71, "trimesh.path.path.Path.length"]], "medial_axis() (trimesh.path.path.path2d method)": [[71, "trimesh.path.path.Path2D.medial_axis"]], "merge_vertices() (trimesh.path.path.path method)": [[71, "trimesh.path.path.Path.merge_vertices"]], "obb (trimesh.path.path.path2d property)": [[71, "trimesh.path.path.Path2D.obb"]], "path_valid (trimesh.path.path.path2d property)": [[71, "trimesh.path.path.Path2D.path_valid"]], "paths (trimesh.path.path.path property)": [[71, "trimesh.path.path.Path.paths"]], "plot_discrete() (trimesh.path.path.path2d method)": [[71, "trimesh.path.path.Path2D.plot_discrete"]], "plot_entities() (trimesh.path.path.path2d method)": [[71, "trimesh.path.path.Path2D.plot_entities"]], "polygons_closed (trimesh.path.path.path2d property)": [[71, "trimesh.path.path.Path2D.polygons_closed"]], "polygons_full (trimesh.path.path.path2d property)": [[71, "trimesh.path.path.Path2D.polygons_full"]], "process() (trimesh.path.path.path method)": [[71, "trimesh.path.path.Path.process"]], "rasterize() (trimesh.path.path.path2d method)": [[71, "trimesh.path.path.Path2D.rasterize"]], "referenced_vertices (trimesh.path.path.path property)": [[71, "trimesh.path.path.Path.referenced_vertices"]], "remove_duplicate_entities() (trimesh.path.path.path method)": [[71, "trimesh.path.path.Path.remove_duplicate_entities"]], "remove_entities() (trimesh.path.path.path method)": [[71, "trimesh.path.path.Path.remove_entities"]], "remove_invalid() (trimesh.path.path.path method)": [[71, "trimesh.path.path.Path.remove_invalid"]], "remove_unreferenced_vertices() (trimesh.path.path.path method)": [[71, "trimesh.path.path.Path.remove_unreferenced_vertices"]], "replace_vertex_references() (trimesh.path.path.path method)": [[71, "trimesh.path.path.Path.replace_vertex_references"]], "rezero() (trimesh.path.path.path method)": [[71, "trimesh.path.path.Path.rezero"]], "root (trimesh.path.path.path2d property)": [[71, "trimesh.path.path.Path2D.root"]], "sample() (trimesh.path.path.path2d method)": [[71, "trimesh.path.path.Path2D.sample"]], "scene() (trimesh.path.path.path method)": [[71, "trimesh.path.path.Path.scene"]], "show() (trimesh.path.path.path2d method)": [[71, "trimesh.path.path.Path2D.show"]], "show() (trimesh.path.path.path3d method)": [[71, "trimesh.path.path.Path3D.show"]], "simplify() (trimesh.path.path.path2d method)": [[71, "trimesh.path.path.Path2D.simplify"]], "simplify_spline() (trimesh.path.path.path2d method)": [[71, "trimesh.path.path.Path2D.simplify_spline"]], "split() (trimesh.path.path.path2d method)": [[71, "trimesh.path.path.Path2D.split"]], "to_3d() (trimesh.path.path.path2d method)": [[71, "trimesh.path.path.Path2D.to_3D"]], "to_dict() (trimesh.path.path.path method)": [[71, "trimesh.path.path.Path.to_dict"]], "to_planar() (trimesh.path.path.path3d method)": [[71, "trimesh.path.path.Path3D.to_planar"]], "triangulate() (trimesh.path.path.path2d method)": [[71, "trimesh.path.path.Path2D.triangulate"]], "trimesh.path.path": [[71, "module-trimesh.path.path"]], "units (trimesh.path.path.path property)": [[71, "trimesh.path.path.Path.units"]], "vertex_graph (trimesh.path.path.path property)": [[71, "trimesh.path.path.Path.vertex_graph"]], "vertex_nodes (trimesh.path.path.path property)": [[71, "trimesh.path.path.Path.vertex_nodes"]], "vertices (trimesh.path.path.path property)": [[71, "trimesh.path.path.Path.vertices"]], "edges_to_polygons() (in module trimesh.path.polygons)": [[72, "trimesh.path.polygons.edges_to_polygons"]], "enclosure_tree() (in module trimesh.path.polygons)": [[72, "trimesh.path.polygons.enclosure_tree"]], "identifier() (in module trimesh.path.polygons)": [[72, "trimesh.path.polygons.identifier"]], "medial_axis() (in module trimesh.path.polygons)": [[72, "trimesh.path.polygons.medial_axis"]], "paths_to_polygons() (in module trimesh.path.polygons)": [[72, "trimesh.path.polygons.paths_to_polygons"]], "plot() (in module trimesh.path.polygons)": [[72, "trimesh.path.polygons.plot"]], "polygon_bounds() (in module trimesh.path.polygons)": [[72, "trimesh.path.polygons.polygon_bounds"]], "polygon_obb() (in module trimesh.path.polygons)": [[72, "trimesh.path.polygons.polygon_obb"]], "polygon_scale() (in module trimesh.path.polygons)": [[72, "trimesh.path.polygons.polygon_scale"]], "polygons_obb() (in module trimesh.path.polygons)": [[72, "trimesh.path.polygons.polygons_obb"]], "projected() (in module trimesh.path.polygons)": [[72, "trimesh.path.polygons.projected"]], "random_polygon() (in module trimesh.path.polygons)": [[72, "trimesh.path.polygons.random_polygon"]], "repair_invalid() (in module trimesh.path.polygons)": [[72, "trimesh.path.polygons.repair_invalid"]], "resample_boundaries() (in module trimesh.path.polygons)": [[72, "trimesh.path.polygons.resample_boundaries"]], "sample() (in module trimesh.path.polygons)": [[72, "trimesh.path.polygons.sample"]], "second_moments() (in module trimesh.path.polygons)": [[72, "trimesh.path.polygons.second_moments"]], "stack_boundaries() (in module trimesh.path.polygons)": [[72, "trimesh.path.polygons.stack_boundaries"]], "transform_polygon() (in module trimesh.path.polygons)": [[72, "trimesh.path.polygons.transform_polygon"]], "trimesh.path.polygons": [[72, "module-trimesh.path.polygons"]], "rasterize() (in module trimesh.path.raster)": [[73, "trimesh.path.raster.rasterize"]], "trimesh.path.raster": [[73, "module-trimesh.path.raster"]], "fill_gaps() (in module trimesh.path.repair)": [[74, "trimesh.path.repair.fill_gaps"]], "trimesh.path.repair": [[74, "module-trimesh.path.repair"]], "clean() (in module trimesh.path.segments)": [[75, "trimesh.path.segments.clean"]], "colinear_pairs() (in module trimesh.path.segments)": [[75, "trimesh.path.segments.colinear_pairs"]], "extrude() (in module trimesh.path.segments)": [[75, "trimesh.path.segments.extrude"]], "length() (in module trimesh.path.segments)": [[75, "trimesh.path.segments.length"]], "parameters_to_segments() (in module trimesh.path.segments)": [[75, "trimesh.path.segments.parameters_to_segments"]], "resample() (in module trimesh.path.segments)": [[75, "trimesh.path.segments.resample"]], "segments_to_parameters() (in module trimesh.path.segments)": [[75, "trimesh.path.segments.segments_to_parameters"]], "split() (in module trimesh.path.segments)": [[75, "trimesh.path.segments.split"]], "to_svg() (in module trimesh.path.segments)": [[75, "trimesh.path.segments.to_svg"]], "trimesh.path.segments": [[75, "module-trimesh.path.segments"]], "unique() (in module trimesh.path.segments)": [[75, "trimesh.path.segments.unique"]], "fit_circle_check() (in module trimesh.path.simplify)": [[76, "trimesh.path.simplify.fit_circle_check"]], "is_circle() (in module trimesh.path.simplify)": [[76, "trimesh.path.simplify.is_circle"]], "merge_colinear() (in module trimesh.path.simplify)": [[76, "trimesh.path.simplify.merge_colinear"]], "points_to_spline_entity() (in module trimesh.path.simplify)": [[76, "trimesh.path.simplify.points_to_spline_entity"]], "resample_spline() (in module trimesh.path.simplify)": [[76, "trimesh.path.simplify.resample_spline"]], "simplify_basic() (in module trimesh.path.simplify)": [[76, "trimesh.path.simplify.simplify_basic"]], "simplify_spline() (in module trimesh.path.simplify)": [[76, "trimesh.path.simplify.simplify_spline"]], "trimesh.path.simplify": [[76, "module-trimesh.path.simplify"]], "pathsample (class in trimesh.path.traversal)": [[77, "trimesh.path.traversal.PathSample"]], "__init__() (trimesh.path.traversal.pathsample method)": [[77, "trimesh.path.traversal.PathSample.__init__"]], "closed_paths() (in module trimesh.path.traversal)": [[77, "trimesh.path.traversal.closed_paths"]], "discretize_path() (in module trimesh.path.traversal)": [[77, "trimesh.path.traversal.discretize_path"]], "resample_path() (in module trimesh.path.traversal)": [[77, "trimesh.path.traversal.resample_path"]], "sample() (trimesh.path.traversal.pathsample method)": [[77, "trimesh.path.traversal.PathSample.sample"]], "split() (in module trimesh.path.traversal)": [[77, "trimesh.path.traversal.split"]], "trimesh.path.traversal": [[77, "module-trimesh.path.traversal"]], "truncate() (trimesh.path.traversal.pathsample method)": [[77, "trimesh.path.traversal.PathSample.truncate"]], "vertex_graph() (in module trimesh.path.traversal)": [[77, "trimesh.path.traversal.vertex_graph"]], "vertex_to_entity_path() (in module trimesh.path.traversal)": [[77, "trimesh.path.traversal.vertex_to_entity_path"]], "concatenate() (in module trimesh.path.util)": [[78, "trimesh.path.util.concatenate"]], "trimesh.path.util": [[78, "module-trimesh.path.util"]], "permutator (class in trimesh.permutate)": [[79, "trimesh.permutate.Permutator"]], "__init__() (trimesh.permutate.permutator method)": [[79, "trimesh.permutate.Permutator.__init__"]], "noise() (in module trimesh.permutate)": [[79, "trimesh.permutate.noise"]], "noise() (trimesh.permutate.permutator method)": [[79, "trimesh.permutate.Permutator.noise"]], "tessellation() (in module trimesh.permutate)": [[79, "trimesh.permutate.tessellation"]], "tessellation() (trimesh.permutate.permutator method)": [[79, "trimesh.permutate.Permutator.tessellation"]], "transform() (in module trimesh.permutate)": [[79, "trimesh.permutate.transform"]], "transform() (trimesh.permutate.permutator method)": [[79, "trimesh.permutate.Permutator.transform"]], "trimesh.permutate": [[79, "module-trimesh.permutate"]], "pointcloud (class in trimesh.points)": [[80, "trimesh.points.PointCloud"]], "__init__() (trimesh.points.pointcloud method)": [[80, "trimesh.points.PointCloud.__init__"]], "apply_transform() (trimesh.points.pointcloud method)": [[80, "trimesh.points.PointCloud.apply_transform"]], "bounds (trimesh.points.pointcloud property)": [[80, "trimesh.points.PointCloud.bounds"]], "centroid (trimesh.points.pointcloud property)": [[80, "trimesh.points.PointCloud.centroid"]], "colors (trimesh.points.pointcloud property)": [[80, "trimesh.points.PointCloud.colors"]], "convex_hull (trimesh.points.pointcloud property)": [[80, "trimesh.points.PointCloud.convex_hull"]], "copy() (trimesh.points.pointcloud method)": [[80, "trimesh.points.PointCloud.copy"]], "crc() (trimesh.points.pointcloud method)": [[80, "trimesh.points.PointCloud.crc"]], "export() (trimesh.points.pointcloud method)": [[80, "trimesh.points.PointCloud.export"]], "extents (trimesh.points.pointcloud property)": [[80, "trimesh.points.PointCloud.extents"]], "hash() (trimesh.points.pointcloud method)": [[80, "trimesh.points.PointCloud.hash"]], "is_empty (trimesh.points.pointcloud property)": [[80, "trimesh.points.PointCloud.is_empty"]], "k_means() (in module trimesh.points)": [[80, "trimesh.points.k_means"]], "kdtree (trimesh.points.pointcloud property)": [[80, "trimesh.points.PointCloud.kdtree"]], "major_axis() (in module trimesh.points)": [[80, "trimesh.points.major_axis"]], "merge_vertices() (trimesh.points.pointcloud method)": [[80, "trimesh.points.PointCloud.merge_vertices"]], "plane_fit() (in module trimesh.points)": [[80, "trimesh.points.plane_fit"]], "plot_points() (in module trimesh.points)": [[80, "trimesh.points.plot_points"]], "point_plane_distance() (in module trimesh.points)": [[80, "trimesh.points.point_plane_distance"]], "project_to_plane() (in module trimesh.points)": [[80, "trimesh.points.project_to_plane"]], "query() (trimesh.points.pointcloud method)": [[80, "trimesh.points.PointCloud.query"]], "radial_sort() (in module trimesh.points)": [[80, "trimesh.points.radial_sort"]], "remove_close() (in module trimesh.points)": [[80, "trimesh.points.remove_close"]], "scene() (trimesh.points.pointcloud method)": [[80, "trimesh.points.PointCloud.scene"]], "shape (trimesh.points.pointcloud property)": [[80, "trimesh.points.PointCloud.shape"]], "show() (trimesh.points.pointcloud method)": [[80, "trimesh.points.PointCloud.show"]], "trimesh.points": [[80, "module-trimesh.points"]], "tsp() (in module trimesh.points)": [[80, "trimesh.points.tsp"]], "vertices (trimesh.points.pointcloud property)": [[80, "trimesh.points.PointCloud.vertices"]], "compute_stable_poses() (in module trimesh.poses)": [[81, "trimesh.poses.compute_stable_poses"]], "trimesh.poses": [[81, "module-trimesh.poses"]], "box (class in trimesh.primitives)": [[82, "trimesh.primitives.Box"]], "capsule (class in trimesh.primitives)": [[82, "trimesh.primitives.Capsule"]], "cylinder (class in trimesh.primitives)": [[82, "trimesh.primitives.Cylinder"]], "extrusion (class in trimesh.primitives)": [[82, "trimesh.primitives.Extrusion"]], "primitive (class in trimesh.primitives)": [[82, "trimesh.primitives.Primitive"]], "primitiveattributes (class in trimesh.primitives)": [[82, "trimesh.primitives.PrimitiveAttributes"]], "sphere (class in trimesh.primitives)": [[82, "trimesh.primitives.Sphere"]], "__init__() (trimesh.primitives.box method)": [[82, "trimesh.primitives.Box.__init__"]], "__init__() (trimesh.primitives.capsule method)": [[82, "trimesh.primitives.Capsule.__init__"]], "__init__() (trimesh.primitives.cylinder method)": [[82, "trimesh.primitives.Cylinder.__init__"]], "__init__() (trimesh.primitives.extrusion method)": [[82, "trimesh.primitives.Extrusion.__init__"]], "__init__() (trimesh.primitives.primitive method)": [[82, "trimesh.primitives.Primitive.__init__"]], "__init__() (trimesh.primitives.primitiveattributes method)": [[82, "trimesh.primitives.PrimitiveAttributes.__init__"]], "__init__() (trimesh.primitives.sphere method)": [[82, "trimesh.primitives.Sphere.__init__"]], "apply_transform() (trimesh.primitives.primitive method)": [[82, "trimesh.primitives.Primitive.apply_transform"]], "area (trimesh.primitives.extrusion property)": [[82, "trimesh.primitives.Extrusion.area"]], "area (trimesh.primitives.sphere property)": [[82, "trimesh.primitives.Sphere.area"]], "as_outline() (trimesh.primitives.box method)": [[82, "trimesh.primitives.Box.as_outline"]], "bounding_box_oriented (trimesh.primitives.extrusion property)": [[82, "trimesh.primitives.Extrusion.bounding_box_oriented"]], "bounding_box_oriented (trimesh.primitives.sphere property)": [[82, "trimesh.primitives.Sphere.bounding_box_oriented"]], "bounds (trimesh.primitives.sphere property)": [[82, "trimesh.primitives.Sphere.bounds"]], "buffer() (trimesh.primitives.cylinder method)": [[82, "trimesh.primitives.Cylinder.buffer"]], "buffer() (trimesh.primitives.extrusion method)": [[82, "trimesh.primitives.Extrusion.buffer"]], "center (trimesh.primitives.sphere property)": [[82, "trimesh.primitives.Sphere.center"]], "copy() (trimesh.primitives.primitive method)": [[82, "trimesh.primitives.Primitive.copy"]], "direction (trimesh.primitives.capsule property)": [[82, "trimesh.primitives.Capsule.direction"]], "direction (trimesh.primitives.cylinder property)": [[82, "trimesh.primitives.Cylinder.direction"]], "direction (trimesh.primitives.extrusion property)": [[82, "trimesh.primitives.Extrusion.direction"]], "face_normals (trimesh.primitives.primitive property)": [[82, "trimesh.primitives.Primitive.face_normals"]], "faces (trimesh.primitives.primitive property)": [[82, "trimesh.primitives.Primitive.faces"]], "is_oriented (trimesh.primitives.box property)": [[82, "trimesh.primitives.Box.is_oriented"]], "moment_inertia (trimesh.primitives.cylinder property)": [[82, "trimesh.primitives.Cylinder.moment_inertia"]], "moment_inertia (trimesh.primitives.sphere property)": [[82, "trimesh.primitives.Sphere.moment_inertia"]], "origin (trimesh.primitives.extrusion property)": [[82, "trimesh.primitives.Extrusion.origin"]], "sample_grid() (trimesh.primitives.box method)": [[82, "trimesh.primitives.Box.sample_grid"]], "sample_volume() (trimesh.primitives.box method)": [[82, "trimesh.primitives.Box.sample_volume"]], "segment (trimesh.primitives.cylinder property)": [[82, "trimesh.primitives.Cylinder.segment"]], "slide() (trimesh.primitives.extrusion method)": [[82, "trimesh.primitives.Extrusion.slide"]], "to_dict() (trimesh.primitives.box method)": [[82, "trimesh.primitives.Box.to_dict"]], "to_dict() (trimesh.primitives.capsule method)": [[82, "trimesh.primitives.Capsule.to_dict"]], "to_dict() (trimesh.primitives.cylinder method)": [[82, "trimesh.primitives.Cylinder.to_dict"]], "to_dict() (trimesh.primitives.extrusion method)": [[82, "trimesh.primitives.Extrusion.to_dict"]], "to_dict() (trimesh.primitives.primitive method)": [[82, "trimesh.primitives.Primitive.to_dict"]], "to_dict() (trimesh.primitives.sphere method)": [[82, "trimesh.primitives.Sphere.to_dict"]], "to_mesh() (trimesh.primitives.primitive method)": [[82, "trimesh.primitives.Primitive.to_mesh"]], "transform (trimesh.primitives.box property)": [[82, "trimesh.primitives.Box.transform"]], "transform (trimesh.primitives.capsule property)": [[82, "trimesh.primitives.Capsule.transform"]], "transform (trimesh.primitives.extrusion property)": [[82, "trimesh.primitives.Extrusion.transform"]], "transform (trimesh.primitives.primitive property)": [[82, "trimesh.primitives.Primitive.transform"]], "trimesh.primitives": [[82, "module-trimesh.primitives"]], "vertices (trimesh.primitives.primitive property)": [[82, "trimesh.primitives.Primitive.vertices"]], "volume (trimesh.primitives.box property)": [[82, "trimesh.primitives.Box.volume"]], "volume (trimesh.primitives.cylinder property)": [[82, "trimesh.primitives.Cylinder.volume"]], "volume (trimesh.primitives.extrusion property)": [[82, "trimesh.primitives.Extrusion.volume"]], "volume (trimesh.primitives.sphere property)": [[82, "trimesh.primitives.Sphere.volume"]], "nearestqueryresult (class in trimesh.proximity)": [[83, "trimesh.proximity.NearestQueryResult"]], "proximityquery (class in trimesh.proximity)": [[83, "trimesh.proximity.ProximityQuery"]], "__init__() (trimesh.proximity.nearestqueryresult method)": [[83, "trimesh.proximity.NearestQueryResult.__init__"]], "__init__() (trimesh.proximity.proximityquery method)": [[83, "trimesh.proximity.ProximityQuery.__init__"]], "closest_point() (in module trimesh.proximity)": [[83, "trimesh.proximity.closest_point"]], "closest_point_naive() (in module trimesh.proximity)": [[83, "trimesh.proximity.closest_point_naive"]], "has_normals() (trimesh.proximity.nearestqueryresult method)": [[83, "trimesh.proximity.NearestQueryResult.has_normals"]], "longest_ray() (in module trimesh.proximity)": [[83, "trimesh.proximity.longest_ray"]], "max_tangent_sphere() (in module trimesh.proximity)": [[83, "trimesh.proximity.max_tangent_sphere"]], "nearby_faces() (in module trimesh.proximity)": [[83, "trimesh.proximity.nearby_faces"]], "on_surface() (trimesh.proximity.proximityquery method)": [[83, "trimesh.proximity.ProximityQuery.on_surface"]], "signed_distance() (in module trimesh.proximity)": [[83, "trimesh.proximity.signed_distance"]], "signed_distance() (trimesh.proximity.proximityquery method)": [[83, "trimesh.proximity.ProximityQuery.signed_distance"]], "thickness() (in module trimesh.proximity)": [[83, "trimesh.proximity.thickness"]], "trimesh.proximity": [[83, "module-trimesh.proximity"]], "vertex() (trimesh.proximity.proximityquery method)": [[83, "trimesh.proximity.ProximityQuery.vertex"]], "trimesh.ray": [[84, "module-trimesh.ray"]], "raymeshintersector (class in trimesh.ray.ray_pyembree)": [[85, "trimesh.ray.ray_pyembree.RayMeshIntersector"]], "__init__() (trimesh.ray.ray_pyembree.raymeshintersector method)": [[85, "trimesh.ray.ray_pyembree.RayMeshIntersector.__init__"]], "contains_points() (trimesh.ray.ray_pyembree.raymeshintersector method)": [[85, "trimesh.ray.ray_pyembree.RayMeshIntersector.contains_points"]], "intersects_any() (trimesh.ray.ray_pyembree.raymeshintersector method)": [[85, "trimesh.ray.ray_pyembree.RayMeshIntersector.intersects_any"]], "intersects_first() (trimesh.ray.ray_pyembree.raymeshintersector method)": [[85, "trimesh.ray.ray_pyembree.RayMeshIntersector.intersects_first"]], "intersects_id() (trimesh.ray.ray_pyembree.raymeshintersector method)": [[85, "trimesh.ray.ray_pyembree.RayMeshIntersector.intersects_id"]], "intersects_location() (trimesh.ray.ray_pyembree.raymeshintersector method)": [[85, "trimesh.ray.ray_pyembree.RayMeshIntersector.intersects_location"]], "trimesh.ray.ray_pyembree": [[85, "module-trimesh.ray.ray_pyembree"]], "raymeshintersector (class in trimesh.ray.ray_triangle)": [[86, "trimesh.ray.ray_triangle.RayMeshIntersector"]], "__init__() (trimesh.ray.ray_triangle.raymeshintersector method)": [[86, "trimesh.ray.ray_triangle.RayMeshIntersector.__init__"]], "contains_points() (trimesh.ray.ray_triangle.raymeshintersector method)": [[86, "trimesh.ray.ray_triangle.RayMeshIntersector.contains_points"]], "intersects_any() (trimesh.ray.ray_triangle.raymeshintersector method)": [[86, "trimesh.ray.ray_triangle.RayMeshIntersector.intersects_any"]], "intersects_first() (trimesh.ray.ray_triangle.raymeshintersector method)": [[86, "trimesh.ray.ray_triangle.RayMeshIntersector.intersects_first"]], "intersects_id() (trimesh.ray.ray_triangle.raymeshintersector method)": [[86, "trimesh.ray.ray_triangle.RayMeshIntersector.intersects_id"]], "intersects_location() (trimesh.ray.ray_triangle.raymeshintersector method)": [[86, "trimesh.ray.ray_triangle.RayMeshIntersector.intersects_location"]], "ray_bounds() (in module trimesh.ray.ray_triangle)": [[86, "trimesh.ray.ray_triangle.ray_bounds"]], "ray_triangle_candidates() (in module trimesh.ray.ray_triangle)": [[86, "trimesh.ray.ray_triangle.ray_triangle_candidates"]], "ray_triangle_id() (in module trimesh.ray.ray_triangle)": [[86, "trimesh.ray.ray_triangle.ray_triangle_id"]], "trimesh.ray.ray_triangle": [[86, "module-trimesh.ray.ray_triangle"]], "trimesh.ray.ray_util": [[87, "module-trimesh.ray.ray_util"]], "icp() (in module trimesh.registration)": [[88, "trimesh.registration.icp"]], "mesh_other() (in module trimesh.registration)": [[88, "trimesh.registration.mesh_other"]], "nricp_amberg() (in module trimesh.registration)": [[88, "trimesh.registration.nricp_amberg"]], "nricp_sumner() (in module trimesh.registration)": [[88, "trimesh.registration.nricp_sumner"]], "procrustes() (in module trimesh.registration)": [[88, "trimesh.registration.procrustes"]], "trimesh.registration": [[88, "module-trimesh.registration"]], "subdivide() (in module trimesh.remesh)": [[89, "trimesh.remesh.subdivide"]], "subdivide_loop() (in module trimesh.remesh)": [[89, "trimesh.remesh.subdivide_loop"]], "subdivide_to_size() (in module trimesh.remesh)": [[89, "trimesh.remesh.subdivide_to_size"]], "trimesh.remesh": [[89, "module-trimesh.remesh"]], "colors_to_gl() (in module trimesh.rendering)": [[90, "trimesh.rendering.colors_to_gl"]], "convert_to_vertexlist() (in module trimesh.rendering)": [[90, "trimesh.rendering.convert_to_vertexlist"]], "light_to_gl() (in module trimesh.rendering)": [[90, "trimesh.rendering.light_to_gl"]], "material_to_texture() (in module trimesh.rendering)": [[90, "trimesh.rendering.material_to_texture"]], "matrix_to_gl() (in module trimesh.rendering)": [[90, "trimesh.rendering.matrix_to_gl"]], "mesh_to_vertexlist() (in module trimesh.rendering)": [[90, "trimesh.rendering.mesh_to_vertexlist"]], "path_to_vertexlist() (in module trimesh.rendering)": [[90, "trimesh.rendering.path_to_vertexlist"]], "points_to_vertexlist() (in module trimesh.rendering)": [[90, "trimesh.rendering.points_to_vertexlist"]], "trimesh.rendering": [[90, "module-trimesh.rendering"]], "vector_to_gl() (in module trimesh.rendering)": [[90, "trimesh.rendering.vector_to_gl"]], "broken_faces() (in module trimesh.repair)": [[91, "trimesh.repair.broken_faces"]], "fill_holes() (in module trimesh.repair)": [[91, "trimesh.repair.fill_holes"]], "fix_inversion() (in module trimesh.repair)": [[91, "trimesh.repair.fix_inversion"]], "fix_normals() (in module trimesh.repair)": [[91, "trimesh.repair.fix_normals"]], "fix_winding() (in module trimesh.repair)": [[91, "trimesh.repair.fix_winding"]], "stitch() (in module trimesh.repair)": [[91, "trimesh.repair.stitch"]], "trimesh.repair": [[91, "module-trimesh.repair"]], "filepathresolver (class in trimesh.resolvers)": [[92, "trimesh.resolvers.FilePathResolver"]], "githubresolver (class in trimesh.resolvers)": [[92, "trimesh.resolvers.GithubResolver"]], "resolver (class in trimesh.resolvers)": [[92, "trimesh.resolvers.Resolver"]], "webresolver (class in trimesh.resolvers)": [[92, "trimesh.resolvers.WebResolver"]], "zipresolver (class in trimesh.resolvers)": [[92, "trimesh.resolvers.ZipResolver"]], "__init__() (trimesh.resolvers.filepathresolver method)": [[92, "trimesh.resolvers.FilePathResolver.__init__"]], "__init__() (trimesh.resolvers.githubresolver method)": [[92, "trimesh.resolvers.GithubResolver.__init__"]], "__init__() (trimesh.resolvers.resolver method)": [[92, "trimesh.resolvers.Resolver.__init__"]], "__init__() (trimesh.resolvers.webresolver method)": [[92, "trimesh.resolvers.WebResolver.__init__"]], "__init__() (trimesh.resolvers.zipresolver method)": [[92, "trimesh.resolvers.ZipResolver.__init__"]], "export() (trimesh.resolvers.zipresolver method)": [[92, "trimesh.resolvers.ZipResolver.export"]], "get() (trimesh.resolvers.filepathresolver method)": [[92, "trimesh.resolvers.FilePathResolver.get"]], "get() (trimesh.resolvers.githubresolver method)": [[92, "trimesh.resolvers.GithubResolver.get"]], "get() (trimesh.resolvers.resolver method)": [[92, "trimesh.resolvers.Resolver.get"]], "get() (trimesh.resolvers.webresolver method)": [[92, "trimesh.resolvers.WebResolver.get"]], "get() (trimesh.resolvers.zipresolver method)": [[92, "trimesh.resolvers.ZipResolver.get"]], "keys() (trimesh.resolvers.filepathresolver method)": [[92, "trimesh.resolvers.FilePathResolver.keys"]], "keys() (trimesh.resolvers.githubresolver method)": [[92, "trimesh.resolvers.GithubResolver.keys"]], "keys() (trimesh.resolvers.zipresolver method)": [[92, "trimesh.resolvers.ZipResolver.keys"]], "namespaced() (trimesh.resolvers.filepathresolver method)": [[92, "trimesh.resolvers.FilePathResolver.namespaced"]], "namespaced() (trimesh.resolvers.githubresolver method)": [[92, "trimesh.resolvers.GithubResolver.namespaced"]], "namespaced() (trimesh.resolvers.resolver method)": [[92, "trimesh.resolvers.Resolver.namespaced"]], "namespaced() (trimesh.resolvers.webresolver method)": [[92, "trimesh.resolvers.WebResolver.namespaced"]], "namespaced() (trimesh.resolvers.zipresolver method)": [[92, "trimesh.resolvers.ZipResolver.namespaced"]], "nearby_names() (in module trimesh.resolvers)": [[92, "trimesh.resolvers.nearby_names"]], "trimesh.resolvers": [[92, "module-trimesh.resolvers"]], "write() (trimesh.resolvers.filepathresolver method)": [[92, "trimesh.resolvers.FilePathResolver.write"]], "write() (trimesh.resolvers.githubresolver method)": [[92, "trimesh.resolvers.GithubResolver.write"]], "write() (trimesh.resolvers.resolver method)": [[92, "trimesh.resolvers.Resolver.write"]], "write() (trimesh.resolvers.webresolver method)": [[92, "trimesh.resolvers.WebResolver.write"]], "write() (trimesh.resolvers.zipresolver method)": [[92, "trimesh.resolvers.ZipResolver.write"]], "zipped (trimesh.resolvers.githubresolver property)": [[92, "trimesh.resolvers.GithubResolver.zipped"]], "get() (in module trimesh.resources)": [[93, "trimesh.resources.get"]], "get_schema() (in module trimesh.resources)": [[93, "trimesh.resources.get_schema"]], "trimesh.resources": [[93, "module-trimesh.resources"]], "sample_surface() (in module trimesh.sample)": [[94, "trimesh.sample.sample_surface"]], "sample_surface_even() (in module trimesh.sample)": [[94, "trimesh.sample.sample_surface_even"]], "sample_surface_sphere() (in module trimesh.sample)": [[94, "trimesh.sample.sample_surface_sphere"]], "trimesh.sample": [[94, "module-trimesh.sample"]], "volume_mesh() (in module trimesh.sample)": [[94, "trimesh.sample.volume_mesh"]], "volume_rectangular() (in module trimesh.sample)": [[94, "trimesh.sample.volume_rectangular"]], "camera (class in trimesh.scene)": [[95, "trimesh.scene.Camera"]], "k (trimesh.scene.camera property)": [[95, "trimesh.scene.Camera.K"]], "scene (class in trimesh.scene)": [[95, "trimesh.scene.Scene"]], "__init__() (trimesh.scene.camera method)": [[95, "trimesh.scene.Camera.__init__"]], "__init__() (trimesh.scene.scene method)": [[95, "trimesh.scene.Scene.__init__"]], "add_geometry() (trimesh.scene.scene method)": [[95, "trimesh.scene.Scene.add_geometry"]], "angles() (trimesh.scene.camera method)": [[95, "trimesh.scene.Camera.angles"]], "apply_transform() (trimesh.scene.scene method)": [[95, "trimesh.scene.Scene.apply_transform"]], "area (trimesh.scene.scene property)": [[95, "trimesh.scene.Scene.area"]], "bounds (trimesh.scene.scene property)": [[95, "trimesh.scene.Scene.bounds"]], "bounds_corners (trimesh.scene.scene property)": [[95, "trimesh.scene.Scene.bounds_corners"]], "camera (trimesh.scene.scene property)": [[95, "trimesh.scene.Scene.camera"]], "camera_rays() (trimesh.scene.scene method)": [[95, "trimesh.scene.Scene.camera_rays"]], "camera_transform (trimesh.scene.scene property)": [[95, "trimesh.scene.Scene.camera_transform"]], "center_mass (trimesh.scene.scene property)": [[95, "trimesh.scene.Scene.center_mass"]], "centroid (trimesh.scene.scene property)": [[95, "trimesh.scene.Scene.centroid"]], "convert_units() (trimesh.scene.scene method)": [[95, "trimesh.scene.Scene.convert_units"]], "convex_hull (trimesh.scene.scene property)": [[95, "trimesh.scene.Scene.convex_hull"]], "copy() (trimesh.scene.camera method)": [[95, "trimesh.scene.Camera.copy"]], "copy() (trimesh.scene.scene method)": [[95, "trimesh.scene.Scene.copy"]], "deduplicated() (trimesh.scene.scene method)": [[95, "trimesh.scene.Scene.deduplicated"]], "delete_geometry() (trimesh.scene.scene method)": [[95, "trimesh.scene.Scene.delete_geometry"]], "dump() (trimesh.scene.scene method)": [[95, "trimesh.scene.Scene.dump"]], "duplicate_nodes (trimesh.scene.scene property)": [[95, "trimesh.scene.Scene.duplicate_nodes"]], "explode() (trimesh.scene.scene method)": [[95, "trimesh.scene.Scene.explode"]], "export() (trimesh.scene.scene method)": [[95, "trimesh.scene.Scene.export"]], "extents (trimesh.scene.scene property)": [[95, "trimesh.scene.Scene.extents"]], "focal (trimesh.scene.camera property)": [[95, "trimesh.scene.Camera.focal"]], "fov (trimesh.scene.camera property)": [[95, "trimesh.scene.Camera.fov"]], "geometry_identifiers (trimesh.scene.scene property)": [[95, "trimesh.scene.Scene.geometry_identifiers"]], "has_camera (trimesh.scene.scene property)": [[95, "trimesh.scene.Scene.has_camera"]], "is_empty (trimesh.scene.scene property)": [[95, "trimesh.scene.Scene.is_empty"]], "is_valid (trimesh.scene.scene property)": [[95, "trimesh.scene.Scene.is_valid"]], "lights (trimesh.scene.scene property)": [[95, "trimesh.scene.Scene.lights"]], "look_at() (trimesh.scene.camera method)": [[95, "trimesh.scene.Camera.look_at"]], "moment_inertia (trimesh.scene.scene property)": [[95, "trimesh.scene.Scene.moment_inertia"]], "moment_inertia_frame() (trimesh.scene.scene method)": [[95, "trimesh.scene.Scene.moment_inertia_frame"]], "resolution (trimesh.scene.camera property)": [[95, "trimesh.scene.Camera.resolution"]], "rezero() (trimesh.scene.scene method)": [[95, "trimesh.scene.Scene.rezero"]], "save_image() (trimesh.scene.scene method)": [[95, "trimesh.scene.Scene.save_image"]], "scale (trimesh.scene.scene property)": [[95, "trimesh.scene.Scene.scale"]], "scaled() (trimesh.scene.scene method)": [[95, "trimesh.scene.Scene.scaled"]], "set_camera() (trimesh.scene.scene method)": [[95, "trimesh.scene.Scene.set_camera"]], "show() (trimesh.scene.scene method)": [[95, "trimesh.scene.Scene.show"]], "split_scene() (in module trimesh.scene)": [[95, "trimesh.scene.split_scene"]], "strip_visuals() (trimesh.scene.scene method)": [[95, "trimesh.scene.Scene.strip_visuals"]], "subscene() (trimesh.scene.scene method)": [[95, "trimesh.scene.Scene.subscene"]], "to_rays() (trimesh.scene.camera method)": [[95, "trimesh.scene.Camera.to_rays"]], "triangles (trimesh.scene.scene property)": [[95, "trimesh.scene.Scene.triangles"]], "triangles_node (trimesh.scene.scene property)": [[95, "trimesh.scene.Scene.triangles_node"]], "trimesh.scene": [[95, "module-trimesh.scene"]], "units (trimesh.scene.scene property)": [[95, "trimesh.scene.Scene.units"]], "volume (trimesh.scene.scene property)": [[95, "trimesh.scene.Scene.volume"]], "camera (class in trimesh.scene.cameras)": [[96, "trimesh.scene.cameras.Camera"]], "k (trimesh.scene.cameras.camera property)": [[96, "trimesh.scene.cameras.Camera.K"]], "__init__() (trimesh.scene.cameras.camera method)": [[96, "trimesh.scene.cameras.Camera.__init__"]], "angles() (trimesh.scene.cameras.camera method)": [[96, "trimesh.scene.cameras.Camera.angles"]], "camera_to_rays() (in module trimesh.scene.cameras)": [[96, "trimesh.scene.cameras.camera_to_rays"]], "copy() (trimesh.scene.cameras.camera method)": [[96, "trimesh.scene.cameras.Camera.copy"]], "focal (trimesh.scene.cameras.camera property)": [[96, "trimesh.scene.cameras.Camera.focal"]], "fov (trimesh.scene.cameras.camera property)": [[96, "trimesh.scene.cameras.Camera.fov"]], "look_at() (in module trimesh.scene.cameras)": [[96, "trimesh.scene.cameras.look_at"]], "look_at() (trimesh.scene.cameras.camera method)": [[96, "trimesh.scene.cameras.Camera.look_at"]], "ray_pixel_coords() (in module trimesh.scene.cameras)": [[96, "trimesh.scene.cameras.ray_pixel_coords"]], "resolution (trimesh.scene.cameras.camera property)": [[96, "trimesh.scene.cameras.Camera.resolution"]], "to_rays() (trimesh.scene.cameras.camera method)": [[96, "trimesh.scene.cameras.Camera.to_rays"]], "trimesh.scene.cameras": [[96, "module-trimesh.scene.cameras"]], "directionallight (class in trimesh.scene.lighting)": [[97, "trimesh.scene.lighting.DirectionalLight"]], "light (class in trimesh.scene.lighting)": [[97, "trimesh.scene.lighting.Light"]], "pointlight (class in trimesh.scene.lighting)": [[97, "trimesh.scene.lighting.PointLight"]], "spotlight (class in trimesh.scene.lighting)": [[97, "trimesh.scene.lighting.SpotLight"]], "__init__() (trimesh.scene.lighting.directionallight method)": [[97, "trimesh.scene.lighting.DirectionalLight.__init__"]], "__init__() (trimesh.scene.lighting.light method)": [[97, "trimesh.scene.lighting.Light.__init__"]], "__init__() (trimesh.scene.lighting.pointlight method)": [[97, "trimesh.scene.lighting.PointLight.__init__"]], "__init__() (trimesh.scene.lighting.spotlight method)": [[97, "trimesh.scene.lighting.SpotLight.__init__"]], "autolight() (in module trimesh.scene.lighting)": [[97, "trimesh.scene.lighting.autolight"]], "color (trimesh.scene.lighting.directionallight attribute)": [[97, "trimesh.scene.lighting.DirectionalLight.color"]], "color (trimesh.scene.lighting.light attribute)": [[97, "trimesh.scene.lighting.Light.color"]], "color (trimesh.scene.lighting.light property)": [[97, "id0"]], "color (trimesh.scene.lighting.pointlight attribute)": [[97, "trimesh.scene.lighting.PointLight.color"]], "color (trimesh.scene.lighting.spotlight attribute)": [[97, "trimesh.scene.lighting.SpotLight.color"]], "innerconeangle (trimesh.scene.lighting.spotlight attribute)": [[97, "trimesh.scene.lighting.SpotLight.innerConeAngle"]], "innerconeangle (trimesh.scene.lighting.spotlight property)": [[97, "id3"]], "intensity (trimesh.scene.lighting.directionallight attribute)": [[97, "trimesh.scene.lighting.DirectionalLight.intensity"]], "intensity (trimesh.scene.lighting.light attribute)": [[97, "trimesh.scene.lighting.Light.intensity"]], "intensity (trimesh.scene.lighting.light property)": [[97, "id1"]], "intensity (trimesh.scene.lighting.pointlight attribute)": [[97, "trimesh.scene.lighting.PointLight.intensity"]], "intensity (trimesh.scene.lighting.spotlight attribute)": [[97, "trimesh.scene.lighting.SpotLight.intensity"]], "name (trimesh.scene.lighting.directionallight attribute)": [[97, "trimesh.scene.lighting.DirectionalLight.name"]], "name (trimesh.scene.lighting.light attribute)": [[97, "trimesh.scene.lighting.Light.name"]], "name (trimesh.scene.lighting.pointlight attribute)": [[97, "trimesh.scene.lighting.PointLight.name"]], "name (trimesh.scene.lighting.spotlight attribute)": [[97, "trimesh.scene.lighting.SpotLight.name"]], "outerconeangle (trimesh.scene.lighting.spotlight attribute)": [[97, "trimesh.scene.lighting.SpotLight.outerConeAngle"]], "outerconeangle (trimesh.scene.lighting.spotlight property)": [[97, "id4"]], "radius (trimesh.scene.lighting.directionallight attribute)": [[97, "trimesh.scene.lighting.DirectionalLight.radius"]], "radius (trimesh.scene.lighting.light attribute)": [[97, "trimesh.scene.lighting.Light.radius"]], "radius (trimesh.scene.lighting.light property)": [[97, "id2"]], "radius (trimesh.scene.lighting.pointlight attribute)": [[97, "trimesh.scene.lighting.PointLight.radius"]], "radius (trimesh.scene.lighting.spotlight attribute)": [[97, "trimesh.scene.lighting.SpotLight.radius"]], "trimesh.scene.lighting": [[97, "module-trimesh.scene.lighting"]], "scene (class in trimesh.scene.scene)": [[98, "trimesh.scene.scene.Scene"]], "__init__() (trimesh.scene.scene.scene method)": [[98, "trimesh.scene.scene.Scene.__init__"]], "add_geometry() (trimesh.scene.scene.scene method)": [[98, "trimesh.scene.scene.Scene.add_geometry"]], "append_scenes() (in module trimesh.scene.scene)": [[98, "trimesh.scene.scene.append_scenes"]], "apply_transform() (trimesh.scene.scene.scene method)": [[98, "trimesh.scene.scene.Scene.apply_transform"]], "area (trimesh.scene.scene.scene property)": [[98, "trimesh.scene.scene.Scene.area"]], "bounds (trimesh.scene.scene.scene property)": [[98, "trimesh.scene.scene.Scene.bounds"]], "bounds_corners (trimesh.scene.scene.scene property)": [[98, "trimesh.scene.scene.Scene.bounds_corners"]], "camera (trimesh.scene.scene.scene property)": [[98, "trimesh.scene.scene.Scene.camera"]], "camera_rays() (trimesh.scene.scene.scene method)": [[98, "trimesh.scene.scene.Scene.camera_rays"]], "camera_transform (trimesh.scene.scene.scene property)": [[98, "trimesh.scene.scene.Scene.camera_transform"]], "center_mass (trimesh.scene.scene.scene property)": [[98, "trimesh.scene.scene.Scene.center_mass"]], "centroid (trimesh.scene.scene.scene property)": [[98, "trimesh.scene.scene.Scene.centroid"]], "convert_units() (trimesh.scene.scene.scene method)": [[98, "trimesh.scene.scene.Scene.convert_units"]], "convex_hull (trimesh.scene.scene.scene property)": [[98, "trimesh.scene.scene.Scene.convex_hull"]], "copy() (trimesh.scene.scene.scene method)": [[98, "trimesh.scene.scene.Scene.copy"]], "deduplicated() (trimesh.scene.scene.scene method)": [[98, "trimesh.scene.scene.Scene.deduplicated"]], "delete_geometry() (trimesh.scene.scene.scene method)": [[98, "trimesh.scene.scene.Scene.delete_geometry"]], "dump() (trimesh.scene.scene.scene method)": [[98, "trimesh.scene.scene.Scene.dump"]], "duplicate_nodes (trimesh.scene.scene.scene property)": [[98, "trimesh.scene.scene.Scene.duplicate_nodes"]], "explode() (trimesh.scene.scene.scene method)": [[98, "trimesh.scene.scene.Scene.explode"]], "export() (trimesh.scene.scene.scene method)": [[98, "trimesh.scene.scene.Scene.export"]], "extents (trimesh.scene.scene.scene property)": [[98, "trimesh.scene.scene.Scene.extents"]], "geometry_identifiers (trimesh.scene.scene.scene property)": [[98, "trimesh.scene.scene.Scene.geometry_identifiers"]], "has_camera (trimesh.scene.scene.scene property)": [[98, "trimesh.scene.scene.Scene.has_camera"]], "is_empty (trimesh.scene.scene.scene property)": [[98, "trimesh.scene.scene.Scene.is_empty"]], "is_valid (trimesh.scene.scene.scene property)": [[98, "trimesh.scene.scene.Scene.is_valid"]], "lights (trimesh.scene.scene.scene property)": [[98, "trimesh.scene.scene.Scene.lights"]], "moment_inertia (trimesh.scene.scene.scene property)": [[98, "trimesh.scene.scene.Scene.moment_inertia"]], "moment_inertia_frame() (trimesh.scene.scene.scene method)": [[98, "trimesh.scene.scene.Scene.moment_inertia_frame"]], "rezero() (trimesh.scene.scene.scene method)": [[98, "trimesh.scene.scene.Scene.rezero"]], "save_image() (trimesh.scene.scene.scene method)": [[98, "trimesh.scene.scene.Scene.save_image"]], "scale (trimesh.scene.scene.scene property)": [[98, "trimesh.scene.scene.Scene.scale"]], "scaled() (trimesh.scene.scene.scene method)": [[98, "trimesh.scene.scene.Scene.scaled"]], "set_camera() (trimesh.scene.scene.scene method)": [[98, "trimesh.scene.scene.Scene.set_camera"]], "show() (trimesh.scene.scene.scene method)": [[98, "trimesh.scene.scene.Scene.show"]], "split_scene() (in module trimesh.scene.scene)": [[98, "trimesh.scene.scene.split_scene"]], "strip_visuals() (trimesh.scene.scene.scene method)": [[98, "trimesh.scene.scene.Scene.strip_visuals"]], "subscene() (trimesh.scene.scene.scene method)": [[98, "trimesh.scene.scene.Scene.subscene"]], "triangles (trimesh.scene.scene.scene property)": [[98, "trimesh.scene.scene.Scene.triangles"]], "triangles_node (trimesh.scene.scene.scene property)": [[98, "trimesh.scene.scene.Scene.triangles_node"]], "trimesh.scene.scene": [[98, "module-trimesh.scene.scene"]], "units (trimesh.scene.scene.scene property)": [[98, "trimesh.scene.scene.Scene.units"]], "volume (trimesh.scene.scene.scene property)": [[98, "trimesh.scene.scene.Scene.volume"]], "enforcedforest (class in trimesh.scene.transforms)": [[99, "trimesh.scene.transforms.EnforcedForest"]], "scenegraph (class in trimesh.scene.transforms)": [[99, "trimesh.scene.transforms.SceneGraph"]], "__init__() (trimesh.scene.transforms.enforcedforest method)": [[99, "trimesh.scene.transforms.EnforcedForest.__init__"]], "__init__() (trimesh.scene.transforms.scenegraph method)": [[99, "trimesh.scene.transforms.SceneGraph.__init__"]], "add_edge() (trimesh.scene.transforms.enforcedforest method)": [[99, "trimesh.scene.transforms.EnforcedForest.add_edge"]], "children (trimesh.scene.transforms.enforcedforest property)": [[99, "trimesh.scene.transforms.EnforcedForest.children"]], "clear() (trimesh.scene.transforms.scenegraph method)": [[99, "trimesh.scene.transforms.SceneGraph.clear"]], "copy() (trimesh.scene.transforms.scenegraph method)": [[99, "trimesh.scene.transforms.SceneGraph.copy"]], "from_edgelist() (trimesh.scene.transforms.scenegraph method)": [[99, "trimesh.scene.transforms.SceneGraph.from_edgelist"]], "geometry_nodes (trimesh.scene.transforms.scenegraph property)": [[99, "trimesh.scene.transforms.SceneGraph.geometry_nodes"]], "get() (trimesh.scene.transforms.scenegraph method)": [[99, "trimesh.scene.transforms.SceneGraph.get"]], "kwargs_to_matrix() (in module trimesh.scene.transforms)": [[99, "trimesh.scene.transforms.kwargs_to_matrix"]], "load() (trimesh.scene.transforms.scenegraph method)": [[99, "trimesh.scene.transforms.SceneGraph.load"]], "nodes (trimesh.scene.transforms.enforcedforest property)": [[99, "trimesh.scene.transforms.EnforcedForest.nodes"]], "nodes (trimesh.scene.transforms.scenegraph property)": [[99, "trimesh.scene.transforms.SceneGraph.nodes"]], "nodes_geometry (trimesh.scene.transforms.scenegraph property)": [[99, "trimesh.scene.transforms.SceneGraph.nodes_geometry"]], "remove_geometries() (trimesh.scene.transforms.scenegraph method)": [[99, "trimesh.scene.transforms.SceneGraph.remove_geometries"]], "remove_node() (trimesh.scene.transforms.enforcedforest method)": [[99, "trimesh.scene.transforms.EnforcedForest.remove_node"]], "shortest_path() (trimesh.scene.transforms.enforcedforest method)": [[99, "trimesh.scene.transforms.EnforcedForest.shortest_path"]], "show() (trimesh.scene.transforms.scenegraph method)": [[99, "trimesh.scene.transforms.SceneGraph.show"]], "successors() (trimesh.scene.transforms.enforcedforest method)": [[99, "trimesh.scene.transforms.EnforcedForest.successors"]], "to_edgelist() (trimesh.scene.transforms.scenegraph method)": [[99, "trimesh.scene.transforms.SceneGraph.to_edgelist"]], "to_flattened() (trimesh.scene.transforms.scenegraph method)": [[99, "trimesh.scene.transforms.SceneGraph.to_flattened"]], "to_gltf() (trimesh.scene.transforms.scenegraph method)": [[99, "trimesh.scene.transforms.SceneGraph.to_gltf"]], "to_networkx() (trimesh.scene.transforms.scenegraph method)": [[99, "trimesh.scene.transforms.SceneGraph.to_networkx"]], "trimesh.scene.transforms": [[99, "module-trimesh.scene.transforms"]], "update() (trimesh.scene.transforms.scenegraph method)": [[99, "trimesh.scene.transforms.SceneGraph.update"]], "resolve() (in module trimesh.schemas)": [[100, "trimesh.schemas.resolve"]], "trimesh.schemas": [[100, "module-trimesh.schemas"]], "dilate_slope() (in module trimesh.smoothing)": [[101, "trimesh.smoothing.dilate_slope"]], "filter_humphrey() (in module trimesh.smoothing)": [[101, "trimesh.smoothing.filter_humphrey"]], "filter_laplacian() (in module trimesh.smoothing)": [[101, "trimesh.smoothing.filter_laplacian"]], "filter_mut_dif_laplacian() (in module trimesh.smoothing)": [[101, "trimesh.smoothing.filter_mut_dif_laplacian"]], "filter_taubin() (in module trimesh.smoothing)": [[101, "trimesh.smoothing.filter_taubin"]], "get_vertices_normals() (in module trimesh.smoothing)": [[101, "trimesh.smoothing.get_vertices_normals"]], "laplacian_calculation() (in module trimesh.smoothing)": [[101, "trimesh.smoothing.laplacian_calculation"]], "trimesh.smoothing": [[101, "module-trimesh.smoothing"]], "arcball (class in trimesh.transformations)": [[102, "trimesh.transformations.Arcball"]], "__init__() (trimesh.transformations.arcball method)": [[102, "trimesh.transformations.Arcball.__init__"]], "affine_matrix_from_points() (in module trimesh.transformations)": [[102, "trimesh.transformations.affine_matrix_from_points"]], "angle_between_vectors() (in module trimesh.transformations)": [[102, "trimesh.transformations.angle_between_vectors"]], "arcball_constrain_to_axis() (in module trimesh.transformations)": [[102, "trimesh.transformations.arcball_constrain_to_axis"]], "arcball_map_to_sphere() (in module trimesh.transformations)": [[102, "trimesh.transformations.arcball_map_to_sphere"]], "arcball_nearest_axis() (in module trimesh.transformations)": [[102, "trimesh.transformations.arcball_nearest_axis"]], "clip_matrix() (in module trimesh.transformations)": [[102, "trimesh.transformations.clip_matrix"]], "compose_matrix() (in module trimesh.transformations)": [[102, "trimesh.transformations.compose_matrix"]], "concatenate_matrices() (in module trimesh.transformations)": [[102, "trimesh.transformations.concatenate_matrices"]], "constrain (trimesh.transformations.arcball property)": [[102, "trimesh.transformations.Arcball.constrain"]], "decompose_matrix() (in module trimesh.transformations)": [[102, "trimesh.transformations.decompose_matrix"]], "down() (trimesh.transformations.arcball method)": [[102, "trimesh.transformations.Arcball.down"]], "drag() (trimesh.transformations.arcball method)": [[102, "trimesh.transformations.Arcball.drag"]], "euler_from_matrix() (in module trimesh.transformations)": [[102, "trimesh.transformations.euler_from_matrix"]], "euler_from_quaternion() (in module trimesh.transformations)": [[102, "trimesh.transformations.euler_from_quaternion"]], "euler_matrix() (in module trimesh.transformations)": [[102, "trimesh.transformations.euler_matrix"]], "fix_rigid() (in module trimesh.transformations)": [[102, "trimesh.transformations.fix_rigid"]], "flips_winding() (in module trimesh.transformations)": [[102, "trimesh.transformations.flips_winding"]], "identity_matrix() (in module trimesh.transformations)": [[102, "trimesh.transformations.identity_matrix"]], "inverse_matrix() (in module trimesh.transformations)": [[102, "trimesh.transformations.inverse_matrix"]], "is_rigid() (in module trimesh.transformations)": [[102, "trimesh.transformations.is_rigid"]], "is_same_quaternion() (in module trimesh.transformations)": [[102, "trimesh.transformations.is_same_quaternion"]], "is_same_transform() (in module trimesh.transformations)": [[102, "trimesh.transformations.is_same_transform"]], "matrix() (trimesh.transformations.arcball method)": [[102, "trimesh.transformations.Arcball.matrix"]], "next() (trimesh.transformations.arcball method)": [[102, "trimesh.transformations.Arcball.next"]], "orthogonalization_matrix() (in module trimesh.transformations)": [[102, "trimesh.transformations.orthogonalization_matrix"]], "place() (trimesh.transformations.arcball method)": [[102, "trimesh.transformations.Arcball.place"]], "planar_matrix() (in module trimesh.transformations)": [[102, "trimesh.transformations.planar_matrix"]], "planar_matrix_to_3d() (in module trimesh.transformations)": [[102, "trimesh.transformations.planar_matrix_to_3D"]], "projection_from_matrix() (in module trimesh.transformations)": [[102, "trimesh.transformations.projection_from_matrix"]], "projection_matrix() (in module trimesh.transformations)": [[102, "trimesh.transformations.projection_matrix"]], "quaternion_about_axis() (in module trimesh.transformations)": [[102, "trimesh.transformations.quaternion_about_axis"]], "quaternion_conjugate() (in module trimesh.transformations)": [[102, "trimesh.transformations.quaternion_conjugate"]], "quaternion_from_euler() (in module trimesh.transformations)": [[102, "trimesh.transformations.quaternion_from_euler"]], "quaternion_from_matrix() (in module trimesh.transformations)": [[102, "trimesh.transformations.quaternion_from_matrix"]], "quaternion_imag() (in module trimesh.transformations)": [[102, "trimesh.transformations.quaternion_imag"]], "quaternion_inverse() (in module trimesh.transformations)": [[102, "trimesh.transformations.quaternion_inverse"]], "quaternion_matrix() (in module trimesh.transformations)": [[102, "trimesh.transformations.quaternion_matrix"]], "quaternion_multiply() (in module trimesh.transformations)": [[102, "trimesh.transformations.quaternion_multiply"]], "quaternion_real() (in module trimesh.transformations)": [[102, "trimesh.transformations.quaternion_real"]], "quaternion_slerp() (in module trimesh.transformations)": [[102, "trimesh.transformations.quaternion_slerp"]], "random_quaternion() (in module trimesh.transformations)": [[102, "trimesh.transformations.random_quaternion"]], "random_rotation_matrix() (in module trimesh.transformations)": [[102, "trimesh.transformations.random_rotation_matrix"]], "random_vector() (in module trimesh.transformations)": [[102, "trimesh.transformations.random_vector"]], "reflection_from_matrix() (in module trimesh.transformations)": [[102, "trimesh.transformations.reflection_from_matrix"]], "reflection_matrix() (in module trimesh.transformations)": [[102, "trimesh.transformations.reflection_matrix"]], "rotation_from_matrix() (in module trimesh.transformations)": [[102, "trimesh.transformations.rotation_from_matrix"]], "rotation_matrix() (in module trimesh.transformations)": [[102, "trimesh.transformations.rotation_matrix"]], "scale_and_translate() (in module trimesh.transformations)": [[102, "trimesh.transformations.scale_and_translate"]], "scale_from_matrix() (in module trimesh.transformations)": [[102, "trimesh.transformations.scale_from_matrix"]], "scale_matrix() (in module trimesh.transformations)": [[102, "trimesh.transformations.scale_matrix"]], "setaxes() (trimesh.transformations.arcball method)": [[102, "trimesh.transformations.Arcball.setaxes"]], "shear_from_matrix() (in module trimesh.transformations)": [[102, "trimesh.transformations.shear_from_matrix"]], "shear_matrix() (in module trimesh.transformations)": [[102, "trimesh.transformations.shear_matrix"]], "spherical_matrix() (in module trimesh.transformations)": [[102, "trimesh.transformations.spherical_matrix"]], "superimposition_matrix() (in module trimesh.transformations)": [[102, "trimesh.transformations.superimposition_matrix"]], "transform_around() (in module trimesh.transformations)": [[102, "trimesh.transformations.transform_around"]], "transform_points() (in module trimesh.transformations)": [[102, "trimesh.transformations.transform_points"]], "translation_from_matrix() (in module trimesh.transformations)": [[102, "trimesh.transformations.translation_from_matrix"]], "translation_matrix() (in module trimesh.transformations)": [[102, "trimesh.transformations.translation_matrix"]], "trimesh.transformations": [[102, "module-trimesh.transformations"]], "unit_vector() (in module trimesh.transformations)": [[102, "trimesh.transformations.unit_vector"]], "vector_norm() (in module trimesh.transformations)": [[102, "trimesh.transformations.vector_norm"]], "vector_product() (in module trimesh.transformations)": [[102, "trimesh.transformations.vector_product"]], "massproperties (class in trimesh.triangles)": [[103, "trimesh.triangles.MassProperties"]], "__init__() (trimesh.triangles.massproperties method)": [[103, "trimesh.triangles.MassProperties.__init__"]], "all_coplanar() (in module trimesh.triangles)": [[103, "trimesh.triangles.all_coplanar"]], "angles() (in module trimesh.triangles)": [[103, "trimesh.triangles.angles"]], "any_coplanar() (in module trimesh.triangles)": [[103, "trimesh.triangles.any_coplanar"]], "area() (in module trimesh.triangles)": [[103, "trimesh.triangles.area"]], "barycentric_to_points() (in module trimesh.triangles)": [[103, "trimesh.triangles.barycentric_to_points"]], "bounds_tree() (in module trimesh.triangles)": [[103, "trimesh.triangles.bounds_tree"]], "center_mass (trimesh.triangles.massproperties attribute)": [[103, "trimesh.triangles.MassProperties.center_mass"]], "closest_point() (in module trimesh.triangles)": [[103, "trimesh.triangles.closest_point"]], "cross() (in module trimesh.triangles)": [[103, "trimesh.triangles.cross"]], "density (trimesh.triangles.massproperties attribute)": [[103, "trimesh.triangles.MassProperties.density"]], "extents() (in module trimesh.triangles)": [[103, "trimesh.triangles.extents"]], "inertia (trimesh.triangles.massproperties attribute)": [[103, "trimesh.triangles.MassProperties.inertia"]], "mass (trimesh.triangles.massproperties attribute)": [[103, "trimesh.triangles.MassProperties.mass"]], "mass_properties() (in module trimesh.triangles)": [[103, "trimesh.triangles.mass_properties"]], "nondegenerate() (in module trimesh.triangles)": [[103, "trimesh.triangles.nondegenerate"]], "normals() (in module trimesh.triangles)": [[103, "trimesh.triangles.normals"]], "points_to_barycentric() (in module trimesh.triangles)": [[103, "trimesh.triangles.points_to_barycentric"]], "to_kwargs() (in module trimesh.triangles)": [[103, "trimesh.triangles.to_kwargs"]], "trimesh.triangles": [[103, "module-trimesh.triangles"]], "volume (trimesh.triangles.massproperties attribute)": [[103, "trimesh.triangles.MassProperties.volume"]], "windings_aligned() (in module trimesh.triangles)": [[103, "trimesh.triangles.windings_aligned"]], "io (class in trimesh.typed)": [[104, "trimesh.typed.IO"]], "as_integer_ratio() (trimesh.typed.float64 method)": [[104, "trimesh.typed.float64.as_integer_ratio"]], "bit_count() (trimesh.typed.int64 method)": [[104, "trimesh.typed.int64.bit_count"]], "close() (trimesh.typed.io method)": [[104, "trimesh.typed.IO.close"]], "closed (trimesh.typed.io property)": [[104, "trimesh.typed.IO.closed"]], "fileno() (trimesh.typed.io method)": [[104, "trimesh.typed.IO.fileno"]], "float64 (class in trimesh.typed)": [[104, "trimesh.typed.float64"]], "flush() (trimesh.typed.io method)": [[104, "trimesh.typed.IO.flush"]], "int64 (class in trimesh.typed)": [[104, "trimesh.typed.int64"]], "is_integer() (trimesh.typed.float64 method)": [[104, "trimesh.typed.float64.is_integer"]], "isatty() (trimesh.typed.io method)": [[104, "trimesh.typed.IO.isatty"]], "mode (trimesh.typed.io property)": [[104, "trimesh.typed.IO.mode"]], "name (trimesh.typed.io property)": [[104, "trimesh.typed.IO.name"]], "read() (trimesh.typed.io method)": [[104, "trimesh.typed.IO.read"]], "readable() (trimesh.typed.io method)": [[104, "trimesh.typed.IO.readable"]], "readline() (trimesh.typed.io method)": [[104, "trimesh.typed.IO.readline"]], "readlines() (trimesh.typed.io method)": [[104, "trimesh.typed.IO.readlines"]], "seek() (trimesh.typed.io method)": [[104, "trimesh.typed.IO.seek"]], "seekable() (trimesh.typed.io method)": [[104, "trimesh.typed.IO.seekable"]], "tell() (trimesh.typed.io method)": [[104, "trimesh.typed.IO.tell"]], "trimesh.typed": [[104, "module-trimesh.typed"]], "truncate() (trimesh.typed.io method)": [[104, "trimesh.typed.IO.truncate"]], "writable() (trimesh.typed.io method)": [[104, "trimesh.typed.IO.writable"]], "write() (trimesh.typed.io method)": [[104, "trimesh.typed.IO.write"]], "writelines() (trimesh.typed.io method)": [[104, "trimesh.typed.IO.writelines"]], "keys() (in module trimesh.units)": [[105, "trimesh.units.keys"]], "to_inch() (in module trimesh.units)": [[105, "trimesh.units.to_inch"]], "trimesh.units": [[105, "module-trimesh.units"]], "unit_conversion() (in module trimesh.units)": [[105, "trimesh.units.unit_conversion"]], "units_from_metadata() (in module trimesh.units)": [[105, "trimesh.units.units_from_metadata"]], "functionregistry (class in trimesh.util)": [[106, "trimesh.util.FunctionRegistry"]], "__init__() (trimesh.util.functionregistry method)": [[106, "trimesh.util.FunctionRegistry.__init__"]], "allclose() (in module trimesh.util)": [[106, "trimesh.util.allclose"]], "append_faces() (in module trimesh.util)": [[106, "trimesh.util.append_faces"]], "array_to_encoded() (in module trimesh.util)": [[106, "trimesh.util.array_to_encoded"]], "array_to_string() (in module trimesh.util)": [[106, "trimesh.util.array_to_string"]], "attach_to_log() (in module trimesh.util)": [[106, "trimesh.util.attach_to_log"]], "bounds_tree() (in module trimesh.util)": [[106, "trimesh.util.bounds_tree"]], "comment_strip() (in module trimesh.util)": [[106, "trimesh.util.comment_strip"]], "compress() (in module trimesh.util)": [[106, "trimesh.util.compress"]], "concatenate() (in module trimesh.util)": [[106, "trimesh.util.concatenate"]], "convert_like() (in module trimesh.util)": [[106, "trimesh.util.convert_like"]], "decimal_to_digits() (in module trimesh.util)": [[106, "trimesh.util.decimal_to_digits"]], "decode_keys() (in module trimesh.util)": [[106, "trimesh.util.decode_keys"]], "decode_text() (in module trimesh.util)": [[106, "trimesh.util.decode_text"]], "decompress() (in module trimesh.util)": [[106, "trimesh.util.decompress"]], "diagonal_dot() (in module trimesh.util)": [[106, "trimesh.util.diagonal_dot"]], "distance_to_end() (in module trimesh.util)": [[106, "trimesh.util.distance_to_end"]], "encoded_to_array() (in module trimesh.util)": [[106, "trimesh.util.encoded_to_array"]], "euclidean() (in module trimesh.util)": [[106, "trimesh.util.euclidean"]], "generate_basis() (in module trimesh.util)": [[106, "trimesh.util.generate_basis"]], "grid_arange() (in module trimesh.util)": [[106, "trimesh.util.grid_arange"]], "grid_linspace() (in module trimesh.util)": [[106, "trimesh.util.grid_linspace"]], "has_module() (in module trimesh.util)": [[106, "trimesh.util.has_module"]], "is_binary_file() (in module trimesh.util)": [[106, "trimesh.util.is_binary_file"]], "is_ccw() (in module trimesh.util)": [[106, "trimesh.util.is_ccw"]], "is_file() (in module trimesh.util)": [[106, "trimesh.util.is_file"]], "is_instance_named() (in module trimesh.util)": [[106, "trimesh.util.is_instance_named"]], "is_none() (in module trimesh.util)": [[106, "trimesh.util.is_none"]], "is_pathlib() (in module trimesh.util)": [[106, "trimesh.util.is_pathlib"]], "is_sequence() (in module trimesh.util)": [[106, "trimesh.util.is_sequence"]], "is_shape() (in module trimesh.util)": [[106, "trimesh.util.is_shape"]], "is_string() (in module trimesh.util)": [[106, "trimesh.util.is_string"]], "isclose() (in module trimesh.util)": [[106, "trimesh.util.isclose"]], "jsonify() (in module trimesh.util)": [[106, "trimesh.util.jsonify"]], "make_sequence() (in module trimesh.util)": [[106, "trimesh.util.make_sequence"]], "multi_dict() (in module trimesh.util)": [[106, "trimesh.util.multi_dict"]], "pairwise() (in module trimesh.util)": [[106, "trimesh.util.pairwise"]], "row_norm() (in module trimesh.util)": [[106, "trimesh.util.row_norm"]], "sigfig_int() (in module trimesh.util)": [[106, "trimesh.util.sigfig_int"]], "sigfig_round() (in module trimesh.util)": [[106, "trimesh.util.sigfig_round"]], "spherical_to_vector() (in module trimesh.util)": [[106, "trimesh.util.spherical_to_vector"]], "split_extension() (in module trimesh.util)": [[106, "trimesh.util.split_extension"]], "stack_3d() (in module trimesh.util)": [[106, "trimesh.util.stack_3D"]], "stack_lines() (in module trimesh.util)": [[106, "trimesh.util.stack_lines"]], "structured_array_to_string() (in module trimesh.util)": [[106, "trimesh.util.structured_array_to_string"]], "submesh() (in module trimesh.util)": [[106, "trimesh.util.submesh"]], "to_ascii() (in module trimesh.util)": [[106, "trimesh.util.to_ascii"]], "tolist() (in module trimesh.util)": [[106, "trimesh.util.tolist"]], "triangle_fans_to_faces() (in module trimesh.util)": [[106, "trimesh.util.triangle_fans_to_faces"]], "triangle_strips_to_faces() (in module trimesh.util)": [[106, "trimesh.util.triangle_strips_to_faces"]], "trimesh.util": [[106, "module-trimesh.util"]], "type_bases() (in module trimesh.util)": [[106, "trimesh.util.type_bases"]], "type_named() (in module trimesh.util)": [[106, "trimesh.util.type_named"]], "unique_id() (in module trimesh.util)": [[106, "trimesh.util.unique_id"]], "unique_name() (in module trimesh.util)": [[106, "trimesh.util.unique_name"]], "unitize() (in module trimesh.util)": [[106, "trimesh.util.unitize"]], "vector_hemisphere() (in module trimesh.util)": [[106, "trimesh.util.vector_hemisphere"]], "vector_to_spherical() (in module trimesh.util)": [[106, "trimesh.util.vector_to_spherical"]], "vstack_empty() (in module trimesh.util)": [[106, "trimesh.util.vstack_empty"]], "wrap_as_stream() (in module trimesh.util)": [[106, "trimesh.util.wrap_as_stream"]], "write_encoded() (in module trimesh.util)": [[106, "trimesh.util.write_encoded"]], "zero_pad() (in module trimesh.util)": [[106, "trimesh.util.zero_pad"]], "trimesh.version": [[107, "module-trimesh.version"]], "in_notebook() (in module trimesh.viewer)": [[108, "trimesh.viewer.in_notebook"]], "scene_to_html() (in module trimesh.viewer)": [[108, "trimesh.viewer.scene_to_html"]], "scene_to_notebook() (in module trimesh.viewer)": [[108, "trimesh.viewer.scene_to_notebook"]], "trimesh.viewer": [[108, "module-trimesh.viewer"]], "in_notebook() (in module trimesh.viewer.notebook)": [[109, "trimesh.viewer.notebook.in_notebook"]], "scene_to_html() (in module trimesh.viewer.notebook)": [[109, "trimesh.viewer.notebook.scene_to_html"]], "scene_to_notebook() (in module trimesh.viewer.notebook)": [[109, "trimesh.viewer.notebook.scene_to_notebook"]], "trimesh.viewer.notebook": [[109, "module-trimesh.viewer.notebook"]], "state_pan (trimesh.viewer.trackball.trackball attribute)": [[110, "trimesh.viewer.trackball.Trackball.STATE_PAN"]], "state_roll (trimesh.viewer.trackball.trackball attribute)": [[110, "trimesh.viewer.trackball.Trackball.STATE_ROLL"]], "state_rotate (trimesh.viewer.trackball.trackball attribute)": [[110, "trimesh.viewer.trackball.Trackball.STATE_ROTATE"]], "state_zoom (trimesh.viewer.trackball.trackball attribute)": [[110, "trimesh.viewer.trackball.Trackball.STATE_ZOOM"]], "trackball (class in trimesh.viewer.trackball)": [[110, "trimesh.viewer.trackball.Trackball"]], "__init__() (trimesh.viewer.trackball.trackball method)": [[110, "trimesh.viewer.trackball.Trackball.__init__"]], "down() (trimesh.viewer.trackball.trackball method)": [[110, "trimesh.viewer.trackball.Trackball.down"]], "drag() (trimesh.viewer.trackball.trackball method)": [[110, "trimesh.viewer.trackball.Trackball.drag"]], "pose (trimesh.viewer.trackball.trackball property)": [[110, "trimesh.viewer.trackball.Trackball.pose"]], "resize() (trimesh.viewer.trackball.trackball method)": [[110, "trimesh.viewer.trackball.Trackball.resize"]], "rotate() (trimesh.viewer.trackball.trackball method)": [[110, "trimesh.viewer.trackball.Trackball.rotate"]], "scroll() (trimesh.viewer.trackball.trackball method)": [[110, "trimesh.viewer.trackball.Trackball.scroll"]], "set_state() (trimesh.viewer.trackball.trackball method)": [[110, "trimesh.viewer.trackball.Trackball.set_state"]], "trimesh.viewer.trackball": [[110, "module-trimesh.viewer.trackball"]], "colorvisuals (class in trimesh.visual)": [[113, "trimesh.visual.ColorVisuals"]], "texturevisuals (class in trimesh.visual)": [[113, "trimesh.visual.TextureVisuals"]], "__init__() (trimesh.visual.colorvisuals method)": [[113, "trimesh.visual.ColorVisuals.__init__"]], "__init__() (trimesh.visual.texturevisuals method)": [[113, "trimesh.visual.TextureVisuals.__init__"]], "concatenate() (trimesh.visual.colorvisuals method)": [[113, "trimesh.visual.ColorVisuals.concatenate"]], "concatenate() (trimesh.visual.texturevisuals method)": [[113, "trimesh.visual.TextureVisuals.concatenate"]], "copy() (trimesh.visual.colorvisuals method)": [[113, "trimesh.visual.ColorVisuals.copy"]], "copy() (trimesh.visual.texturevisuals method)": [[113, "trimesh.visual.TextureVisuals.copy"]], "create_visual() (in module trimesh.visual)": [[113, "trimesh.visual.create_visual"]], "defined (trimesh.visual.colorvisuals property)": [[113, "trimesh.visual.ColorVisuals.defined"]], "defined (trimesh.visual.texturevisuals property)": [[113, "trimesh.visual.TextureVisuals.defined"]], "face_colors (trimesh.visual.colorvisuals property)": [[113, "trimesh.visual.ColorVisuals.face_colors"]], "face_subset() (trimesh.visual.colorvisuals method)": [[113, "trimesh.visual.ColorVisuals.face_subset"]], "face_subset() (trimesh.visual.texturevisuals method)": [[113, "trimesh.visual.TextureVisuals.face_subset"]], "interpolate() (in module trimesh.visual)": [[113, "trimesh.visual.interpolate"]], "kind (trimesh.visual.colorvisuals property)": [[113, "trimesh.visual.ColorVisuals.kind"]], "kind (trimesh.visual.texturevisuals property)": [[113, "trimesh.visual.TextureVisuals.kind"]], "linear_color_map() (in module trimesh.visual)": [[113, "trimesh.visual.linear_color_map"]], "main_color (trimesh.visual.colorvisuals property)": [[113, "trimesh.visual.ColorVisuals.main_color"]], "random_color() (in module trimesh.visual)": [[113, "trimesh.visual.random_color"]], "to_color() (trimesh.visual.texturevisuals method)": [[113, "trimesh.visual.TextureVisuals.to_color"]], "to_rgba() (in module trimesh.visual)": [[113, "trimesh.visual.to_rgba"]], "to_texture() (trimesh.visual.colorvisuals method)": [[113, "trimesh.visual.ColorVisuals.to_texture"]], "transparency (trimesh.visual.colorvisuals property)": [[113, "trimesh.visual.ColorVisuals.transparency"]], "trimesh.visual": [[113, "module-trimesh.visual"]], "update_faces() (trimesh.visual.colorvisuals method)": [[113, "trimesh.visual.ColorVisuals.update_faces"]], "update_faces() (trimesh.visual.texturevisuals method)": [[113, "trimesh.visual.TextureVisuals.update_faces"]], "update_vertices() (trimesh.visual.colorvisuals method)": [[113, "trimesh.visual.ColorVisuals.update_vertices"]], "update_vertices() (trimesh.visual.texturevisuals method)": [[113, "trimesh.visual.TextureVisuals.update_vertices"]], "uv (trimesh.visual.texturevisuals property)": [[113, "trimesh.visual.TextureVisuals.uv"]], "uv_to_color() (in module trimesh.visual)": [[113, "trimesh.visual.uv_to_color"]], "uv_to_interpolated_color() (in module trimesh.visual)": [[113, "trimesh.visual.uv_to_interpolated_color"]], "vertex_colors (trimesh.visual.colorvisuals property)": [[113, "trimesh.visual.ColorVisuals.vertex_colors"]], "visuals (class in trimesh.visual.base)": [[114, "trimesh.visual.base.Visuals"]], "concatenate() (trimesh.visual.base.visuals method)": [[114, "trimesh.visual.base.Visuals.concatenate"]], "copy() (trimesh.visual.base.visuals method)": [[114, "trimesh.visual.base.Visuals.copy"]], "kind (trimesh.visual.base.visuals property)": [[114, "trimesh.visual.base.Visuals.kind"]], "trimesh.visual.base": [[114, "module-trimesh.visual.base"]], "update_faces() (trimesh.visual.base.visuals method)": [[114, "trimesh.visual.base.Visuals.update_faces"]], "update_vertices() (trimesh.visual.base.visuals method)": [[114, "trimesh.visual.base.Visuals.update_vertices"]], "colorvisuals (class in trimesh.visual.color)": [[115, "trimesh.visual.color.ColorVisuals"]], "vertexcolor (class in trimesh.visual.color)": [[115, "trimesh.visual.color.VertexColor"]], "__init__() (trimesh.visual.color.colorvisuals method)": [[115, "trimesh.visual.color.ColorVisuals.__init__"]], "__init__() (trimesh.visual.color.vertexcolor method)": [[115, "trimesh.visual.color.VertexColor.__init__"]], "color_to_uv() (in module trimesh.visual.color)": [[115, "trimesh.visual.color.color_to_uv"]], "colors_to_materials() (in module trimesh.visual.color)": [[115, "trimesh.visual.color.colors_to_materials"]], "concatenate() (trimesh.visual.color.colorvisuals method)": [[115, "trimesh.visual.color.ColorVisuals.concatenate"]], "concatenate() (trimesh.visual.color.vertexcolor method)": [[115, "trimesh.visual.color.VertexColor.concatenate"]], "copy() (trimesh.visual.color.colorvisuals method)": [[115, "trimesh.visual.color.ColorVisuals.copy"]], "copy() (trimesh.visual.color.vertexcolor method)": [[115, "trimesh.visual.color.VertexColor.copy"]], "defined (trimesh.visual.color.colorvisuals property)": [[115, "trimesh.visual.color.ColorVisuals.defined"]], "face_colors (trimesh.visual.color.colorvisuals property)": [[115, "trimesh.visual.color.ColorVisuals.face_colors"]], "face_subset() (trimesh.visual.color.colorvisuals method)": [[115, "trimesh.visual.color.ColorVisuals.face_subset"]], "face_to_vertex_color() (in module trimesh.visual.color)": [[115, "trimesh.visual.color.face_to_vertex_color"]], "hex_to_rgba() (in module trimesh.visual.color)": [[115, "trimesh.visual.color.hex_to_rgba"]], "interpolate() (in module trimesh.visual.color)": [[115, "trimesh.visual.color.interpolate"]], "kind (trimesh.visual.color.colorvisuals property)": [[115, "trimesh.visual.color.ColorVisuals.kind"]], "kind (trimesh.visual.color.vertexcolor property)": [[115, "trimesh.visual.color.VertexColor.kind"]], "linear_color_map() (in module trimesh.visual.color)": [[115, "trimesh.visual.color.linear_color_map"]], "main_color (trimesh.visual.color.colorvisuals property)": [[115, "trimesh.visual.color.ColorVisuals.main_color"]], "random_color() (in module trimesh.visual.color)": [[115, "trimesh.visual.color.random_color"]], "to_float() (in module trimesh.visual.color)": [[115, "trimesh.visual.color.to_float"]], "to_rgba() (in module trimesh.visual.color)": [[115, "trimesh.visual.color.to_rgba"]], "to_texture() (trimesh.visual.color.colorvisuals method)": [[115, "trimesh.visual.color.ColorVisuals.to_texture"]], "transparency (trimesh.visual.color.colorvisuals property)": [[115, "trimesh.visual.color.ColorVisuals.transparency"]], "trimesh.visual.color": [[115, "module-trimesh.visual.color"]], "update_faces() (trimesh.visual.color.colorvisuals method)": [[115, "trimesh.visual.color.ColorVisuals.update_faces"]], "update_faces() (trimesh.visual.color.vertexcolor method)": [[115, "trimesh.visual.color.VertexColor.update_faces"]], "update_vertices() (trimesh.visual.color.colorvisuals method)": [[115, "trimesh.visual.color.ColorVisuals.update_vertices"]], "update_vertices() (trimesh.visual.color.vertexcolor method)": [[115, "trimesh.visual.color.VertexColor.update_vertices"]], "uv_to_color() (in module trimesh.visual.color)": [[115, "trimesh.visual.color.uv_to_color"]], "uv_to_interpolated_color() (in module trimesh.visual.color)": [[115, "trimesh.visual.color.uv_to_interpolated_color"]], "vertex_colors (trimesh.visual.color.colorvisuals property)": [[115, "trimesh.visual.color.ColorVisuals.vertex_colors"]], "vertex_colors (trimesh.visual.color.vertexcolor property)": [[115, "trimesh.visual.color.VertexColor.vertex_colors"]], "vertex_to_face_color() (in module trimesh.visual.color)": [[115, "trimesh.visual.color.vertex_to_face_color"]], "specular_to_pbr() (in module trimesh.visual.gloss)": [[116, "trimesh.visual.gloss.specular_to_pbr"]], "trimesh.visual.gloss": [[116, "module-trimesh.visual.gloss"]], "material (class in trimesh.visual.material)": [[117, "trimesh.visual.material.Material"]], "multimaterial (class in trimesh.visual.material)": [[117, "trimesh.visual.material.MultiMaterial"]], "pbrmaterial (class in trimesh.visual.material)": [[117, "trimesh.visual.material.PBRMaterial"]], "simplematerial (class in trimesh.visual.material)": [[117, "trimesh.visual.material.SimpleMaterial"]], "__init__() (trimesh.visual.material.material method)": [[117, "trimesh.visual.material.Material.__init__"]], "__init__() (trimesh.visual.material.multimaterial method)": [[117, "trimesh.visual.material.MultiMaterial.__init__"]], "__init__() (trimesh.visual.material.pbrmaterial method)": [[117, "trimesh.visual.material.PBRMaterial.__init__"]], "__init__() (trimesh.visual.material.simplematerial method)": [[117, "trimesh.visual.material.SimpleMaterial.__init__"]], "add() (trimesh.visual.material.multimaterial method)": [[117, "trimesh.visual.material.MultiMaterial.add"]], "alphacutoff (trimesh.visual.material.pbrmaterial property)": [[117, "trimesh.visual.material.PBRMaterial.alphaCutoff"]], "alphamode (trimesh.visual.material.pbrmaterial property)": [[117, "trimesh.visual.material.PBRMaterial.alphaMode"]], "basecolorfactor (trimesh.visual.material.pbrmaterial property)": [[117, "trimesh.visual.material.PBRMaterial.baseColorFactor"]], "basecolortexture (trimesh.visual.material.pbrmaterial property)": [[117, "trimesh.visual.material.PBRMaterial.baseColorTexture"]], "color_image() (in module trimesh.visual.material)": [[117, "trimesh.visual.material.color_image"]], "copy() (trimesh.visual.material.material method)": [[117, "trimesh.visual.material.Material.copy"]], "copy() (trimesh.visual.material.pbrmaterial method)": [[117, "trimesh.visual.material.PBRMaterial.copy"]], "doublesided (trimesh.visual.material.pbrmaterial property)": [[117, "trimesh.visual.material.PBRMaterial.doubleSided"]], "emissivefactor (trimesh.visual.material.pbrmaterial property)": [[117, "trimesh.visual.material.PBRMaterial.emissiveFactor"]], "emissivetexture (trimesh.visual.material.pbrmaterial property)": [[117, "trimesh.visual.material.PBRMaterial.emissiveTexture"]], "empty_material() (in module trimesh.visual.material)": [[117, "trimesh.visual.material.empty_material"]], "get() (trimesh.visual.material.multimaterial method)": [[117, "trimesh.visual.material.MultiMaterial.get"]], "glossiness (trimesh.visual.material.simplematerial property)": [[117, "trimesh.visual.material.SimpleMaterial.glossiness"]], "main_color (trimesh.visual.material.material property)": [[117, "trimesh.visual.material.Material.main_color"]], "main_color (trimesh.visual.material.multimaterial property)": [[117, "trimesh.visual.material.MultiMaterial.main_color"]], "main_color (trimesh.visual.material.pbrmaterial property)": [[117, "trimesh.visual.material.PBRMaterial.main_color"]], "main_color (trimesh.visual.material.simplematerial property)": [[117, "trimesh.visual.material.SimpleMaterial.main_color"]], "metallicfactor (trimesh.visual.material.pbrmaterial property)": [[117, "trimesh.visual.material.PBRMaterial.metallicFactor"]], "metallicroughnesstexture (trimesh.visual.material.pbrmaterial property)": [[117, "trimesh.visual.material.PBRMaterial.metallicRoughnessTexture"]], "name (trimesh.visual.material.material property)": [[117, "trimesh.visual.material.Material.name"]], "name (trimesh.visual.material.pbrmaterial property)": [[117, "trimesh.visual.material.PBRMaterial.name"]], "normaltexture (trimesh.visual.material.pbrmaterial property)": [[117, "trimesh.visual.material.PBRMaterial.normalTexture"]], "occlusiontexture (trimesh.visual.material.pbrmaterial property)": [[117, "trimesh.visual.material.PBRMaterial.occlusionTexture"]], "pack() (in module trimesh.visual.material)": [[117, "trimesh.visual.material.pack"]], "roughnessfactor (trimesh.visual.material.pbrmaterial property)": [[117, "trimesh.visual.material.PBRMaterial.roughnessFactor"]], "to_color() (trimesh.visual.material.pbrmaterial method)": [[117, "trimesh.visual.material.PBRMaterial.to_color"]], "to_color() (trimesh.visual.material.simplematerial method)": [[117, "trimesh.visual.material.SimpleMaterial.to_color"]], "to_obj() (trimesh.visual.material.simplematerial method)": [[117, "trimesh.visual.material.SimpleMaterial.to_obj"]], "to_pbr() (trimesh.visual.material.multimaterial method)": [[117, "trimesh.visual.material.MultiMaterial.to_pbr"]], "to_pbr() (trimesh.visual.material.simplematerial method)": [[117, "trimesh.visual.material.SimpleMaterial.to_pbr"]], "to_simple() (trimesh.visual.material.pbrmaterial method)": [[117, "trimesh.visual.material.PBRMaterial.to_simple"]], "trimesh.visual.material": [[117, "module-trimesh.visual.material"]], "concatenate() (in module trimesh.visual.objects)": [[118, "trimesh.visual.objects.concatenate"]], "create_visual() (in module trimesh.visual.objects)": [[118, "trimesh.visual.objects.create_visual"]], "trimesh.visual.objects": [[118, "module-trimesh.visual.objects"]], "texturevisuals (class in trimesh.visual.texture)": [[119, "trimesh.visual.texture.TextureVisuals"]], "__init__() (trimesh.visual.texture.texturevisuals method)": [[119, "trimesh.visual.texture.TextureVisuals.__init__"]], "concatenate() (trimesh.visual.texture.texturevisuals method)": [[119, "trimesh.visual.texture.TextureVisuals.concatenate"]], "copy() (trimesh.visual.texture.texturevisuals method)": [[119, "trimesh.visual.texture.TextureVisuals.copy"]], "defined (trimesh.visual.texture.texturevisuals property)": [[119, "trimesh.visual.texture.TextureVisuals.defined"]], "face_subset() (trimesh.visual.texture.texturevisuals method)": [[119, "trimesh.visual.texture.TextureVisuals.face_subset"]], "kind (trimesh.visual.texture.texturevisuals property)": [[119, "trimesh.visual.texture.TextureVisuals.kind"]], "power_resize() (in module trimesh.visual.texture)": [[119, "trimesh.visual.texture.power_resize"]], "to_color() (trimesh.visual.texture.texturevisuals method)": [[119, "trimesh.visual.texture.TextureVisuals.to_color"]], "trimesh.visual.texture": [[119, "module-trimesh.visual.texture"]], "unmerge_faces() (in module trimesh.visual.texture)": [[119, "trimesh.visual.texture.unmerge_faces"]], "update_faces() (trimesh.visual.texture.texturevisuals method)": [[119, "trimesh.visual.texture.TextureVisuals.update_faces"]], "update_vertices() (trimesh.visual.texture.texturevisuals method)": [[119, "trimesh.visual.texture.TextureVisuals.update_vertices"]], "uv (trimesh.visual.texture.texturevisuals property)": [[119, "trimesh.visual.texture.TextureVisuals.uv"]], "voxelgrid (class in trimesh.voxel)": [[120, "trimesh.voxel.VoxelGrid"]], "__init__() (trimesh.voxel.voxelgrid method)": [[120, "trimesh.voxel.VoxelGrid.__init__"]], "apply_transform() (trimesh.voxel.voxelgrid method)": [[120, "trimesh.voxel.VoxelGrid.apply_transform"]], "as_boxes() (trimesh.voxel.voxelgrid method)": [[120, "trimesh.voxel.VoxelGrid.as_boxes"]], "bounds (trimesh.voxel.voxelgrid property)": [[120, "trimesh.voxel.VoxelGrid.bounds"]], "copy() (trimesh.voxel.voxelgrid method)": [[120, "trimesh.voxel.VoxelGrid.copy"]], "element_volume (trimesh.voxel.voxelgrid property)": [[120, "trimesh.voxel.VoxelGrid.element_volume"]], "encoding (trimesh.voxel.voxelgrid property)": [[120, "trimesh.voxel.VoxelGrid.encoding"]], "export() (trimesh.voxel.voxelgrid method)": [[120, "trimesh.voxel.VoxelGrid.export"]], "extents (trimesh.voxel.voxelgrid property)": [[120, "trimesh.voxel.VoxelGrid.extents"]], "fill() (trimesh.voxel.voxelgrid method)": [[120, "trimesh.voxel.VoxelGrid.fill"]], "filled_count (trimesh.voxel.voxelgrid property)": [[120, "trimesh.voxel.VoxelGrid.filled_count"]], "hollow() (trimesh.voxel.voxelgrid method)": [[120, "trimesh.voxel.VoxelGrid.hollow"]], "indices_to_points() (trimesh.voxel.voxelgrid method)": [[120, "trimesh.voxel.VoxelGrid.indices_to_points"]], "is_empty (trimesh.voxel.voxelgrid property)": [[120, "trimesh.voxel.VoxelGrid.is_empty"]], "is_filled() (trimesh.voxel.voxelgrid method)": [[120, "trimesh.voxel.VoxelGrid.is_filled"]], "marching_cubes (trimesh.voxel.voxelgrid property)": [[120, "trimesh.voxel.VoxelGrid.marching_cubes"]], "matrix (trimesh.voxel.voxelgrid property)": [[120, "trimesh.voxel.VoxelGrid.matrix"]], "pitch (trimesh.voxel.voxelgrid property)": [[120, "trimesh.voxel.VoxelGrid.pitch"]], "points (trimesh.voxel.voxelgrid property)": [[120, "trimesh.voxel.VoxelGrid.points"]], "points_to_indices() (trimesh.voxel.voxelgrid method)": [[120, "trimesh.voxel.VoxelGrid.points_to_indices"]], "revoxelized() (trimesh.voxel.voxelgrid method)": [[120, "trimesh.voxel.VoxelGrid.revoxelized"]], "scale (trimesh.voxel.voxelgrid property)": [[120, "trimesh.voxel.VoxelGrid.scale"]], "shape (trimesh.voxel.voxelgrid property)": [[120, "trimesh.voxel.VoxelGrid.shape"]], "show() (trimesh.voxel.voxelgrid method)": [[120, "trimesh.voxel.VoxelGrid.show"]], "sparse_indices (trimesh.voxel.voxelgrid property)": [[120, "trimesh.voxel.VoxelGrid.sparse_indices"]], "strip() (trimesh.voxel.voxelgrid method)": [[120, "trimesh.voxel.VoxelGrid.strip"]], "transform (trimesh.voxel.voxelgrid property)": [[120, "trimesh.voxel.VoxelGrid.transform"]], "translation (trimesh.voxel.voxelgrid property)": [[120, "trimesh.voxel.VoxelGrid.translation"]], "trimesh.voxel": [[120, "module-trimesh.voxel"]], "volume (trimesh.voxel.voxelgrid property)": [[120, "trimesh.voxel.VoxelGrid.volume"]], "voxelgrid (class in trimesh.voxel.base)": [[121, "trimesh.voxel.base.VoxelGrid"]], "__init__() (trimesh.voxel.base.voxelgrid method)": [[121, "trimesh.voxel.base.VoxelGrid.__init__"]], "apply_transform() (trimesh.voxel.base.voxelgrid method)": [[121, "trimesh.voxel.base.VoxelGrid.apply_transform"]], "as_boxes() (trimesh.voxel.base.voxelgrid method)": [[121, "trimesh.voxel.base.VoxelGrid.as_boxes"]], "bounds (trimesh.voxel.base.voxelgrid property)": [[121, "trimesh.voxel.base.VoxelGrid.bounds"]], "copy() (trimesh.voxel.base.voxelgrid method)": [[121, "trimesh.voxel.base.VoxelGrid.copy"]], "element_volume (trimesh.voxel.base.voxelgrid property)": [[121, "trimesh.voxel.base.VoxelGrid.element_volume"]], "encoding (trimesh.voxel.base.voxelgrid property)": [[121, "trimesh.voxel.base.VoxelGrid.encoding"]], "export() (trimesh.voxel.base.voxelgrid method)": [[121, "trimesh.voxel.base.VoxelGrid.export"]], "extents (trimesh.voxel.base.voxelgrid property)": [[121, "trimesh.voxel.base.VoxelGrid.extents"]], "fill() (trimesh.voxel.base.voxelgrid method)": [[121, "trimesh.voxel.base.VoxelGrid.fill"]], "filled_count (trimesh.voxel.base.voxelgrid property)": [[121, "trimesh.voxel.base.VoxelGrid.filled_count"]], "hollow() (trimesh.voxel.base.voxelgrid method)": [[121, "trimesh.voxel.base.VoxelGrid.hollow"]], "indices_to_points() (trimesh.voxel.base.voxelgrid method)": [[121, "trimesh.voxel.base.VoxelGrid.indices_to_points"]], "is_empty (trimesh.voxel.base.voxelgrid property)": [[121, "trimesh.voxel.base.VoxelGrid.is_empty"]], "is_filled() (trimesh.voxel.base.voxelgrid method)": [[121, "trimesh.voxel.base.VoxelGrid.is_filled"]], "marching_cubes (trimesh.voxel.base.voxelgrid property)": [[121, "trimesh.voxel.base.VoxelGrid.marching_cubes"]], "matrix (trimesh.voxel.base.voxelgrid property)": [[121, "trimesh.voxel.base.VoxelGrid.matrix"]], "pitch (trimesh.voxel.base.voxelgrid property)": [[121, "trimesh.voxel.base.VoxelGrid.pitch"]], "points (trimesh.voxel.base.voxelgrid property)": [[121, "trimesh.voxel.base.VoxelGrid.points"]], "points_to_indices() (trimesh.voxel.base.voxelgrid method)": [[121, "trimesh.voxel.base.VoxelGrid.points_to_indices"]], "revoxelized() (trimesh.voxel.base.voxelgrid method)": [[121, "trimesh.voxel.base.VoxelGrid.revoxelized"]], "scale (trimesh.voxel.base.voxelgrid property)": [[121, "trimesh.voxel.base.VoxelGrid.scale"]], "shape (trimesh.voxel.base.voxelgrid property)": [[121, "trimesh.voxel.base.VoxelGrid.shape"]], "show() (trimesh.voxel.base.voxelgrid method)": [[121, "trimesh.voxel.base.VoxelGrid.show"]], "sparse_indices (trimesh.voxel.base.voxelgrid property)": [[121, "trimesh.voxel.base.VoxelGrid.sparse_indices"]], "strip() (trimesh.voxel.base.voxelgrid method)": [[121, "trimesh.voxel.base.VoxelGrid.strip"]], "transform (trimesh.voxel.base.voxelgrid property)": [[121, "trimesh.voxel.base.VoxelGrid.transform"]], "translation (trimesh.voxel.base.voxelgrid property)": [[121, "trimesh.voxel.base.VoxelGrid.translation"]], "trimesh.voxel.base": [[121, "module-trimesh.voxel.base"]], "volume (trimesh.voxel.base.voxelgrid property)": [[121, "trimesh.voxel.base.VoxelGrid.volume"]], "local_voxelize() (in module trimesh.voxel.creation)": [[122, "trimesh.voxel.creation.local_voxelize"]], "trimesh.voxel.creation": [[122, "module-trimesh.voxel.creation"]], "voxelize() (in module trimesh.voxel.creation)": [[122, "trimesh.voxel.creation.voxelize"]], "binaryrunlengthencoding (class in trimesh.voxel.encoding)": [[123, "trimesh.voxel.encoding.BinaryRunLengthEncoding"]], "denseencoding (class in trimesh.voxel.encoding)": [[123, "trimesh.voxel.encoding.DenseEncoding"]], "encoding (class in trimesh.voxel.encoding)": [[123, "trimesh.voxel.encoding.Encoding"]], "flattenedencoding (class in trimesh.voxel.encoding)": [[123, "trimesh.voxel.encoding.FlattenedEncoding"]], "flippedencoding (class in trimesh.voxel.encoding)": [[123, "trimesh.voxel.encoding.FlippedEncoding"]], "lazyindexmap (class in trimesh.voxel.encoding)": [[123, "trimesh.voxel.encoding.LazyIndexMap"]], "runlengthencoding (class in trimesh.voxel.encoding)": [[123, "trimesh.voxel.encoding.RunLengthEncoding"]], "shapedencoding (class in trimesh.voxel.encoding)": [[123, "trimesh.voxel.encoding.ShapedEncoding"]], "sparsebinaryencoding() (in module trimesh.voxel.encoding)": [[123, "trimesh.voxel.encoding.SparseBinaryEncoding"]], "sparseencoding (class in trimesh.voxel.encoding)": [[123, "trimesh.voxel.encoding.SparseEncoding"]], "transposedencoding (class in trimesh.voxel.encoding)": [[123, "trimesh.voxel.encoding.TransposedEncoding"]], "__init__() (trimesh.voxel.encoding.binaryrunlengthencoding method)": [[123, "trimesh.voxel.encoding.BinaryRunLengthEncoding.__init__"]], "__init__() (trimesh.voxel.encoding.denseencoding method)": [[123, "trimesh.voxel.encoding.DenseEncoding.__init__"]], "__init__() (trimesh.voxel.encoding.encoding method)": [[123, "trimesh.voxel.encoding.Encoding.__init__"]], "__init__() (trimesh.voxel.encoding.flippedencoding method)": [[123, "trimesh.voxel.encoding.FlippedEncoding.__init__"]], "__init__() (trimesh.voxel.encoding.runlengthencoding method)": [[123, "trimesh.voxel.encoding.RunLengthEncoding.__init__"]], "__init__() (trimesh.voxel.encoding.shapedencoding method)": [[123, "trimesh.voxel.encoding.ShapedEncoding.__init__"]], "__init__() (trimesh.voxel.encoding.sparseencoding method)": [[123, "trimesh.voxel.encoding.SparseEncoding.__init__"]], "__init__() (trimesh.voxel.encoding.transposedencoding method)": [[123, "trimesh.voxel.encoding.TransposedEncoding.__init__"]], "binary_run_length_data() (trimesh.voxel.encoding.binaryrunlengthencoding method)": [[123, "trimesh.voxel.encoding.BinaryRunLengthEncoding.binary_run_length_data"]], "binary_run_length_data() (trimesh.voxel.encoding.encoding method)": [[123, "trimesh.voxel.encoding.Encoding.binary_run_length_data"]], "binary_run_length_data() (trimesh.voxel.encoding.runlengthencoding method)": [[123, "trimesh.voxel.encoding.RunLengthEncoding.binary_run_length_data"]], "copy() (trimesh.voxel.encoding.binaryrunlengthencoding method)": [[123, "trimesh.voxel.encoding.BinaryRunLengthEncoding.copy"]], "copy() (trimesh.voxel.encoding.denseencoding method)": [[123, "trimesh.voxel.encoding.DenseEncoding.copy"]], "copy() (trimesh.voxel.encoding.encoding method)": [[123, "trimesh.voxel.encoding.Encoding.copy"]], "copy() (trimesh.voxel.encoding.flattenedencoding method)": [[123, "trimesh.voxel.encoding.FlattenedEncoding.copy"]], "copy() (trimesh.voxel.encoding.flippedencoding method)": [[123, "trimesh.voxel.encoding.FlippedEncoding.copy"]], "copy() (trimesh.voxel.encoding.runlengthencoding method)": [[123, "trimesh.voxel.encoding.RunLengthEncoding.copy"]], "copy() (trimesh.voxel.encoding.shapedencoding method)": [[123, "trimesh.voxel.encoding.ShapedEncoding.copy"]], "copy() (trimesh.voxel.encoding.sparseencoding method)": [[123, "trimesh.voxel.encoding.SparseEncoding.copy"]], "copy() (trimesh.voxel.encoding.transposedencoding method)": [[123, "trimesh.voxel.encoding.TransposedEncoding.copy"]], "data (trimesh.voxel.encoding.encoding property)": [[123, "trimesh.voxel.encoding.Encoding.data"]], "data (trimesh.voxel.encoding.transposedencoding property)": [[123, "trimesh.voxel.encoding.TransposedEncoding.data"]], "dense (trimesh.voxel.encoding.binaryrunlengthencoding property)": [[123, "trimesh.voxel.encoding.BinaryRunLengthEncoding.dense"]], "dense (trimesh.voxel.encoding.denseencoding property)": [[123, "trimesh.voxel.encoding.DenseEncoding.dense"]], "dense (trimesh.voxel.encoding.encoding property)": [[123, "trimesh.voxel.encoding.Encoding.dense"]], "dense (trimesh.voxel.encoding.flattenedencoding property)": [[123, "trimesh.voxel.encoding.FlattenedEncoding.dense"]], "dense (trimesh.voxel.encoding.flippedencoding property)": [[123, "trimesh.voxel.encoding.FlippedEncoding.dense"]], "dense (trimesh.voxel.encoding.runlengthencoding property)": [[123, "trimesh.voxel.encoding.RunLengthEncoding.dense"]], "dense (trimesh.voxel.encoding.shapedencoding property)": [[123, "trimesh.voxel.encoding.ShapedEncoding.dense"]], "dense (trimesh.voxel.encoding.sparseencoding property)": [[123, "trimesh.voxel.encoding.SparseEncoding.dense"]], "dense (trimesh.voxel.encoding.transposedencoding property)": [[123, "trimesh.voxel.encoding.TransposedEncoding.dense"]], "dtype (trimesh.voxel.encoding.denseencoding property)": [[123, "trimesh.voxel.encoding.DenseEncoding.dtype"]], "dtype (trimesh.voxel.encoding.encoding property)": [[123, "trimesh.voxel.encoding.Encoding.dtype"]], "dtype (trimesh.voxel.encoding.lazyindexmap property)": [[123, "trimesh.voxel.encoding.LazyIndexMap.dtype"]], "dtype (trimesh.voxel.encoding.runlengthencoding property)": [[123, "trimesh.voxel.encoding.RunLengthEncoding.dtype"]], "dtype (trimesh.voxel.encoding.sparseencoding property)": [[123, "trimesh.voxel.encoding.SparseEncoding.dtype"]], "flat (trimesh.voxel.encoding.denseencoding property)": [[123, "trimesh.voxel.encoding.DenseEncoding.flat"]], "flat (trimesh.voxel.encoding.encoding property)": [[123, "trimesh.voxel.encoding.Encoding.flat"]], "flat (trimesh.voxel.encoding.flattenedencoding property)": [[123, "trimesh.voxel.encoding.FlattenedEncoding.flat"]], "flat (trimesh.voxel.encoding.shapedencoding property)": [[123, "trimesh.voxel.encoding.ShapedEncoding.flat"]], "flip() (trimesh.voxel.encoding.encoding method)": [[123, "trimesh.voxel.encoding.Encoding.flip"]], "flip() (trimesh.voxel.encoding.flippedencoding method)": [[123, "trimesh.voxel.encoding.FlippedEncoding.flip"]], "from_brle() (trimesh.voxel.encoding.binaryrunlengthencoding static method)": [[123, "trimesh.voxel.encoding.BinaryRunLengthEncoding.from_brle"]], "from_brle() (trimesh.voxel.encoding.runlengthencoding static method)": [[123, "trimesh.voxel.encoding.RunLengthEncoding.from_brle"]], "from_dense() (trimesh.voxel.encoding.binaryrunlengthencoding static method)": [[123, "trimesh.voxel.encoding.BinaryRunLengthEncoding.from_dense"]], "from_dense() (trimesh.voxel.encoding.runlengthencoding static method)": [[123, "trimesh.voxel.encoding.RunLengthEncoding.from_dense"]], "from_dense() (trimesh.voxel.encoding.sparseencoding static method)": [[123, "trimesh.voxel.encoding.SparseEncoding.from_dense"]], "from_rle() (trimesh.voxel.encoding.binaryrunlengthencoding static method)": [[123, "trimesh.voxel.encoding.BinaryRunLengthEncoding.from_rle"]], "from_rle() (trimesh.voxel.encoding.runlengthencoding static method)": [[123, "trimesh.voxel.encoding.RunLengthEncoding.from_rle"]], "gather() (trimesh.voxel.encoding.binaryrunlengthencoding method)": [[123, "trimesh.voxel.encoding.BinaryRunLengthEncoding.gather"]], "gather() (trimesh.voxel.encoding.denseencoding method)": [[123, "trimesh.voxel.encoding.DenseEncoding.gather"]], "gather() (trimesh.voxel.encoding.runlengthencoding method)": [[123, "trimesh.voxel.encoding.RunLengthEncoding.gather"]], "gather() (trimesh.voxel.encoding.transposedencoding method)": [[123, "trimesh.voxel.encoding.TransposedEncoding.gather"]], "gather_nd() (trimesh.voxel.encoding.binaryrunlengthencoding method)": [[123, "trimesh.voxel.encoding.BinaryRunLengthEncoding.gather_nd"]], "gather_nd() (trimesh.voxel.encoding.denseencoding method)": [[123, "trimesh.voxel.encoding.DenseEncoding.gather_nd"]], "gather_nd() (trimesh.voxel.encoding.encoding method)": [[123, "trimesh.voxel.encoding.Encoding.gather_nd"]], "gather_nd() (trimesh.voxel.encoding.lazyindexmap method)": [[123, "trimesh.voxel.encoding.LazyIndexMap.gather_nd"]], "gather_nd() (trimesh.voxel.encoding.runlengthencoding method)": [[123, "trimesh.voxel.encoding.RunLengthEncoding.gather_nd"]], "gather_nd() (trimesh.voxel.encoding.sparseencoding method)": [[123, "trimesh.voxel.encoding.SparseEncoding.gather_nd"]], "get_value() (trimesh.voxel.encoding.denseencoding method)": [[123, "trimesh.voxel.encoding.DenseEncoding.get_value"]], "get_value() (trimesh.voxel.encoding.encoding method)": [[123, "trimesh.voxel.encoding.Encoding.get_value"]], "get_value() (trimesh.voxel.encoding.lazyindexmap method)": [[123, "trimesh.voxel.encoding.LazyIndexMap.get_value"]], "get_value() (trimesh.voxel.encoding.runlengthencoding method)": [[123, "trimesh.voxel.encoding.RunLengthEncoding.get_value"]], "get_value() (trimesh.voxel.encoding.sparseencoding method)": [[123, "trimesh.voxel.encoding.SparseEncoding.get_value"]], "get_value() (trimesh.voxel.encoding.transposedencoding method)": [[123, "trimesh.voxel.encoding.TransposedEncoding.get_value"]], "is_empty (trimesh.voxel.encoding.binaryrunlengthencoding property)": [[123, "trimesh.voxel.encoding.BinaryRunLengthEncoding.is_empty"]], "is_empty (trimesh.voxel.encoding.denseencoding property)": [[123, "trimesh.voxel.encoding.DenseEncoding.is_empty"]], "is_empty (trimesh.voxel.encoding.encoding property)": [[123, "trimesh.voxel.encoding.Encoding.is_empty"]], "is_empty (trimesh.voxel.encoding.lazyindexmap property)": [[123, "trimesh.voxel.encoding.LazyIndexMap.is_empty"]], "is_empty (trimesh.voxel.encoding.runlengthencoding property)": [[123, "trimesh.voxel.encoding.RunLengthEncoding.is_empty"]], "mask() (trimesh.voxel.encoding.binaryrunlengthencoding method)": [[123, "trimesh.voxel.encoding.BinaryRunLengthEncoding.mask"]], "mask() (trimesh.voxel.encoding.denseencoding method)": [[123, "trimesh.voxel.encoding.DenseEncoding.mask"]], "mask() (trimesh.voxel.encoding.encoding method)": [[123, "trimesh.voxel.encoding.Encoding.mask"]], "mask() (trimesh.voxel.encoding.flattenedencoding method)": [[123, "trimesh.voxel.encoding.FlattenedEncoding.mask"]], "mask() (trimesh.voxel.encoding.flippedencoding method)": [[123, "trimesh.voxel.encoding.FlippedEncoding.mask"]], "mask() (trimesh.voxel.encoding.runlengthencoding method)": [[123, "trimesh.voxel.encoding.RunLengthEncoding.mask"]], "mask() (trimesh.voxel.encoding.shapedencoding method)": [[123, "trimesh.voxel.encoding.ShapedEncoding.mask"]], "mask() (trimesh.voxel.encoding.sparseencoding method)": [[123, "trimesh.voxel.encoding.SparseEncoding.mask"]], "mask() (trimesh.voxel.encoding.transposedencoding method)": [[123, "trimesh.voxel.encoding.TransposedEncoding.mask"]], "mutable (trimesh.voxel.encoding.encoding property)": [[123, "trimesh.voxel.encoding.Encoding.mutable"]], "ndims (trimesh.voxel.encoding.encoding property)": [[123, "trimesh.voxel.encoding.Encoding.ndims"]], "ndims (trimesh.voxel.encoding.runlengthencoding property)": [[123, "trimesh.voxel.encoding.RunLengthEncoding.ndims"]], "ndims (trimesh.voxel.encoding.sparseencoding property)": [[123, "trimesh.voxel.encoding.SparseEncoding.ndims"]], "perm (trimesh.voxel.encoding.transposedencoding property)": [[123, "trimesh.voxel.encoding.TransposedEncoding.perm"]], "reshape() (trimesh.voxel.encoding.denseencoding method)": [[123, "trimesh.voxel.encoding.DenseEncoding.reshape"]], "reshape() (trimesh.voxel.encoding.encoding method)": [[123, "trimesh.voxel.encoding.Encoding.reshape"]], "run_length_data() (trimesh.voxel.encoding.binaryrunlengthencoding method)": [[123, "trimesh.voxel.encoding.BinaryRunLengthEncoding.run_length_data"]], "run_length_data() (trimesh.voxel.encoding.encoding method)": [[123, "trimesh.voxel.encoding.Encoding.run_length_data"]], "run_length_data() (trimesh.voxel.encoding.runlengthencoding method)": [[123, "trimesh.voxel.encoding.RunLengthEncoding.run_length_data"]], "shape (trimesh.voxel.encoding.denseencoding property)": [[123, "trimesh.voxel.encoding.DenseEncoding.shape"]], "shape (trimesh.voxel.encoding.encoding property)": [[123, "trimesh.voxel.encoding.Encoding.shape"]], "shape (trimesh.voxel.encoding.flattenedencoding property)": [[123, "trimesh.voxel.encoding.FlattenedEncoding.shape"]], "shape (trimesh.voxel.encoding.flippedencoding property)": [[123, "trimesh.voxel.encoding.FlippedEncoding.shape"]], "shape (trimesh.voxel.encoding.runlengthencoding property)": [[123, "trimesh.voxel.encoding.RunLengthEncoding.shape"]], "shape (trimesh.voxel.encoding.shapedencoding property)": [[123, "trimesh.voxel.encoding.ShapedEncoding.shape"]], "shape (trimesh.voxel.encoding.sparseencoding property)": [[123, "trimesh.voxel.encoding.SparseEncoding.shape"]], "shape (trimesh.voxel.encoding.transposedencoding property)": [[123, "trimesh.voxel.encoding.TransposedEncoding.shape"]], "size (trimesh.voxel.encoding.binaryrunlengthencoding property)": [[123, "trimesh.voxel.encoding.BinaryRunLengthEncoding.size"]], "size (trimesh.voxel.encoding.denseencoding property)": [[123, "trimesh.voxel.encoding.DenseEncoding.size"]], "size (trimesh.voxel.encoding.encoding property)": [[123, "trimesh.voxel.encoding.Encoding.size"]], "size (trimesh.voxel.encoding.lazyindexmap property)": [[123, "trimesh.voxel.encoding.LazyIndexMap.size"]], "size (trimesh.voxel.encoding.runlengthencoding property)": [[123, "trimesh.voxel.encoding.RunLengthEncoding.size"]], "size (trimesh.voxel.encoding.sparseencoding property)": [[123, "trimesh.voxel.encoding.SparseEncoding.size"]], "sorted_gather() (trimesh.voxel.encoding.binaryrunlengthencoding method)": [[123, "trimesh.voxel.encoding.BinaryRunLengthEncoding.sorted_gather"]], "sorted_gather() (trimesh.voxel.encoding.runlengthencoding method)": [[123, "trimesh.voxel.encoding.RunLengthEncoding.sorted_gather"]], "sparse_components (trimesh.voxel.encoding.binaryrunlengthencoding property)": [[123, "trimesh.voxel.encoding.BinaryRunLengthEncoding.sparse_components"]], "sparse_components (trimesh.voxel.encoding.denseencoding property)": [[123, "trimesh.voxel.encoding.DenseEncoding.sparse_components"]], "sparse_components (trimesh.voxel.encoding.encoding property)": [[123, "trimesh.voxel.encoding.Encoding.sparse_components"]], "sparse_components (trimesh.voxel.encoding.runlengthencoding property)": [[123, "trimesh.voxel.encoding.RunLengthEncoding.sparse_components"]], "sparse_components (trimesh.voxel.encoding.sparseencoding property)": [[123, "trimesh.voxel.encoding.SparseEncoding.sparse_components"]], "sparse_indices (trimesh.voxel.encoding.binaryrunlengthencoding property)": [[123, "trimesh.voxel.encoding.BinaryRunLengthEncoding.sparse_indices"]], "sparse_indices (trimesh.voxel.encoding.denseencoding property)": [[123, "trimesh.voxel.encoding.DenseEncoding.sparse_indices"]], "sparse_indices (trimesh.voxel.encoding.encoding property)": [[123, "trimesh.voxel.encoding.Encoding.sparse_indices"]], "sparse_indices (trimesh.voxel.encoding.lazyindexmap property)": [[123, "trimesh.voxel.encoding.LazyIndexMap.sparse_indices"]], "sparse_indices (trimesh.voxel.encoding.runlengthencoding property)": [[123, "trimesh.voxel.encoding.RunLengthEncoding.sparse_indices"]], "sparse_indices (trimesh.voxel.encoding.sparseencoding property)": [[123, "trimesh.voxel.encoding.SparseEncoding.sparse_indices"]], "sparse_values (trimesh.voxel.encoding.binaryrunlengthencoding property)": [[123, "trimesh.voxel.encoding.BinaryRunLengthEncoding.sparse_values"]], "sparse_values (trimesh.voxel.encoding.denseencoding property)": [[123, "trimesh.voxel.encoding.DenseEncoding.sparse_values"]], "sparse_values (trimesh.voxel.encoding.encoding property)": [[123, "trimesh.voxel.encoding.Encoding.sparse_values"]], "sparse_values (trimesh.voxel.encoding.lazyindexmap property)": [[123, "trimesh.voxel.encoding.LazyIndexMap.sparse_values"]], "sparse_values (trimesh.voxel.encoding.runlengthencoding property)": [[123, "trimesh.voxel.encoding.RunLengthEncoding.sparse_values"]], "sparse_values (trimesh.voxel.encoding.sparseencoding property)": [[123, "trimesh.voxel.encoding.SparseEncoding.sparse_values"]], "stripped (trimesh.voxel.encoding.binaryrunlengthencoding property)": [[123, "trimesh.voxel.encoding.BinaryRunLengthEncoding.stripped"]], "stripped (trimesh.voxel.encoding.encoding property)": [[123, "trimesh.voxel.encoding.Encoding.stripped"]], "stripped (trimesh.voxel.encoding.runlengthencoding property)": [[123, "trimesh.voxel.encoding.RunLengthEncoding.stripped"]], "stripped (trimesh.voxel.encoding.sparseencoding property)": [[123, "trimesh.voxel.encoding.SparseEncoding.stripped"]], "sum (trimesh.voxel.encoding.binaryrunlengthencoding property)": [[123, "trimesh.voxel.encoding.BinaryRunLengthEncoding.sum"]], "sum (trimesh.voxel.encoding.denseencoding property)": [[123, "trimesh.voxel.encoding.DenseEncoding.sum"]], "sum (trimesh.voxel.encoding.encoding property)": [[123, "trimesh.voxel.encoding.Encoding.sum"]], "sum (trimesh.voxel.encoding.lazyindexmap property)": [[123, "trimesh.voxel.encoding.LazyIndexMap.sum"]], "sum (trimesh.voxel.encoding.runlengthencoding property)": [[123, "trimesh.voxel.encoding.RunLengthEncoding.sum"]], "sum (trimesh.voxel.encoding.sparseencoding property)": [[123, "trimesh.voxel.encoding.SparseEncoding.sum"]], "transpose() (trimesh.voxel.encoding.encoding method)": [[123, "trimesh.voxel.encoding.Encoding.transpose"]], "transpose() (trimesh.voxel.encoding.transposedencoding method)": [[123, "trimesh.voxel.encoding.TransposedEncoding.transpose"]], "trimesh.voxel.encoding": [[123, "module-trimesh.voxel.encoding"]], "binary_closing() (in module trimesh.voxel.morphology)": [[124, "trimesh.voxel.morphology.binary_closing"]], "binary_dilation() (in module trimesh.voxel.morphology)": [[124, "trimesh.voxel.morphology.binary_dilation"]], "fill() (in module trimesh.voxel.morphology)": [[124, "trimesh.voxel.morphology.fill"]], "surface() (in module trimesh.voxel.morphology)": [[124, "trimesh.voxel.morphology.surface"]], "trimesh.voxel.morphology": [[124, "module-trimesh.voxel.morphology"]], "boolean_sparse() (in module trimesh.voxel.ops)": [[125, "trimesh.voxel.ops.boolean_sparse"]], "fill_base() (in module trimesh.voxel.ops)": [[125, "trimesh.voxel.ops.fill_base"]], "fill_orthographic() (in module trimesh.voxel.ops)": [[125, "trimesh.voxel.ops.fill_orthographic"]], "fill_voxelization() (in module trimesh.voxel.ops)": [[125, "trimesh.voxel.ops.fill_voxelization"]], "indices_to_points() (in module trimesh.voxel.ops)": [[125, "trimesh.voxel.ops.indices_to_points"]], "matrix_to_marching_cubes() (in module trimesh.voxel.ops)": [[125, "trimesh.voxel.ops.matrix_to_marching_cubes"]], "matrix_to_points() (in module trimesh.voxel.ops)": [[125, "trimesh.voxel.ops.matrix_to_points"]], "multibox() (in module trimesh.voxel.ops)": [[125, "trimesh.voxel.ops.multibox"]], "points_to_indices() (in module trimesh.voxel.ops)": [[125, "trimesh.voxel.ops.points_to_indices"]], "points_to_marching_cubes() (in module trimesh.voxel.ops)": [[125, "trimesh.voxel.ops.points_to_marching_cubes"]], "sparse_to_matrix() (in module trimesh.voxel.ops)": [[125, "trimesh.voxel.ops.sparse_to_matrix"]], "strip_array() (in module trimesh.voxel.ops)": [[125, "trimesh.voxel.ops.strip_array"]], "trimesh.voxel.ops": [[125, "module-trimesh.voxel.ops"]], "brle_gather_1d() (in module trimesh.voxel.runlength)": [[126, "trimesh.voxel.runlength.brle_gather_1d"]], "brle_gatherer_1d() (in module trimesh.voxel.runlength)": [[126, "trimesh.voxel.runlength.brle_gatherer_1d"]], "brle_length() (in module trimesh.voxel.runlength)": [[126, "trimesh.voxel.runlength.brle_length"]], "brle_logical_not() (in module trimesh.voxel.runlength)": [[126, "trimesh.voxel.runlength.brle_logical_not"]], "brle_mask() (in module trimesh.voxel.runlength)": [[126, "trimesh.voxel.runlength.brle_mask"]], "brle_reverse() (in module trimesh.voxel.runlength)": [[126, "trimesh.voxel.runlength.brle_reverse"]], "brle_strip() (in module trimesh.voxel.runlength)": [[126, "trimesh.voxel.runlength.brle_strip"]], "brle_to_brle() (in module trimesh.voxel.runlength)": [[126, "trimesh.voxel.runlength.brle_to_brle"]], "brle_to_dense() (in module trimesh.voxel.runlength)": [[126, "trimesh.voxel.runlength.brle_to_dense"]], "brle_to_rle() (in module trimesh.voxel.runlength)": [[126, "trimesh.voxel.runlength.brle_to_rle"]], "brle_to_sparse() (in module trimesh.voxel.runlength)": [[126, "trimesh.voxel.runlength.brle_to_sparse"]], "dense_to_brle() (in module trimesh.voxel.runlength)": [[126, "trimesh.voxel.runlength.dense_to_brle"]], "dense_to_rle() (in module trimesh.voxel.runlength)": [[126, "trimesh.voxel.runlength.dense_to_rle"]], "merge_brle_lengths() (in module trimesh.voxel.runlength)": [[126, "trimesh.voxel.runlength.merge_brle_lengths"]], "merge_rle_lengths() (in module trimesh.voxel.runlength)": [[126, "trimesh.voxel.runlength.merge_rle_lengths"]], "rle_gather_1d() (in module trimesh.voxel.runlength)": [[126, "trimesh.voxel.runlength.rle_gather_1d"]], "rle_gatherer_1d() (in module trimesh.voxel.runlength)": [[126, "trimesh.voxel.runlength.rle_gatherer_1d"]], "rle_length() (in module trimesh.voxel.runlength)": [[126, "trimesh.voxel.runlength.rle_length"]], "rle_mask() (in module trimesh.voxel.runlength)": [[126, "trimesh.voxel.runlength.rle_mask"]], "rle_reverse() (in module trimesh.voxel.runlength)": [[126, "trimesh.voxel.runlength.rle_reverse"]], "rle_strip() (in module trimesh.voxel.runlength)": [[126, "trimesh.voxel.runlength.rle_strip"]], "rle_to_brle() (in module trimesh.voxel.runlength)": [[126, "trimesh.voxel.runlength.rle_to_brle"]], "rle_to_dense() (in module trimesh.voxel.runlength)": [[126, "trimesh.voxel.runlength.rle_to_dense"]], "rle_to_rle() (in module trimesh.voxel.runlength)": [[126, "trimesh.voxel.runlength.rle_to_rle"]], "rle_to_sparse() (in module trimesh.voxel.runlength)": [[126, "trimesh.voxel.runlength.rle_to_sparse"]], "sorted_brle_gather_1d() (in module trimesh.voxel.runlength)": [[126, "trimesh.voxel.runlength.sorted_brle_gather_1d"]], "sorted_rle_gather_1d() (in module trimesh.voxel.runlength)": [[126, "trimesh.voxel.runlength.sorted_rle_gather_1d"]], "split_long_brle_lengths() (in module trimesh.voxel.runlength)": [[126, "trimesh.voxel.runlength.split_long_brle_lengths"]], "split_long_rle_lengths() (in module trimesh.voxel.runlength)": [[126, "trimesh.voxel.runlength.split_long_rle_lengths"]], "trimesh.voxel.runlength": [[126, "module-trimesh.voxel.runlength"]], "transform (class in trimesh.voxel.transforms)": [[127, "trimesh.voxel.transforms.Transform"]], "__init__() (trimesh.voxel.transforms.transform method)": [[127, "trimesh.voxel.transforms.Transform.__init__"]], "apply_scale() (trimesh.voxel.transforms.transform method)": [[127, "trimesh.voxel.transforms.Transform.apply_scale"]], "apply_transform() (trimesh.voxel.transforms.transform method)": [[127, "trimesh.voxel.transforms.Transform.apply_transform"]], "apply_translation() (trimesh.voxel.transforms.transform method)": [[127, "trimesh.voxel.transforms.Transform.apply_translation"]], "copy() (trimesh.voxel.transforms.transform method)": [[127, "trimesh.voxel.transforms.Transform.copy"]], "inverse_matrix (trimesh.voxel.transforms.transform property)": [[127, "trimesh.voxel.transforms.Transform.inverse_matrix"]], "inverse_transform_points() (trimesh.voxel.transforms.transform method)": [[127, "trimesh.voxel.transforms.Transform.inverse_transform_points"]], "is_identity (trimesh.voxel.transforms.transform property)": [[127, "trimesh.voxel.transforms.Transform.is_identity"]], "matrix (trimesh.voxel.transforms.transform property)": [[127, "trimesh.voxel.transforms.Transform.matrix"]], "pitch (trimesh.voxel.transforms.transform property)": [[127, "trimesh.voxel.transforms.Transform.pitch"]], "scale (trimesh.voxel.transforms.transform property)": [[127, "trimesh.voxel.transforms.Transform.scale"]], "transform_points() (trimesh.voxel.transforms.transform method)": [[127, "trimesh.voxel.transforms.Transform.transform_points"]], "translation (trimesh.voxel.transforms.transform property)": [[127, "trimesh.voxel.transforms.Transform.translation"]], "trimesh.voxel.transforms": [[127, "module-trimesh.voxel.transforms"]], "unit_volume (trimesh.voxel.transforms.transform property)": [[127, "trimesh.voxel.transforms.Transform.unit_volume"]]}})